{
  "url": "https://api.github.com:443/orgs/async%20(params)%20=%3E%20%7B%0A%20%20%20%20try%20%7B%0A%20%20%20%20%20%20let%20response%20=%20await%20octokit.orgs.getForUser(%7Busername:%20this.username%20%7D)%0A%20%20%20%20%20%20let%20data%20=%20response.data%0A%20%20%20%20%20%20while%20(this.octokit.hasNextPage(response))%20%7B%0A%20%20%20%20%20%20%20%20if%20(data.length%20%3E%2050)%20%7B%20break%20%7D%0A%20%20%20%20%20%20%20%20response%20=%20await%20this.octokit.getNextPage(response)%0A%20%20%20%20%20%20%20%20data%20=%20data.concat(response.data)%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20if%20(data.length%20%3E%201)%20%7B%0A%20%20%20%20%20%20%20%20//%20TODO%20make%20sure%20this%20filtering%20is%20right%0A%20%20%20%20%20%20%20%20let%20filtered%20=%20utils.filterOrgs(data)%0A%20%20%20%20%20%20%20%20let%20ranked%20=%20utils.rankOrgs(filtered)%0A%20%20%20%20%20%20%20%20let%20top%20=%20ranked.slice(0,%202)%0A%20%20%20%20%20%20%20%20return%20top%0A%20%20%20%20%20%20%7D%20else%20%7B%0A%20%20%20%20%20%20%20%20return%20[]%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%20catch%20(err)%20%7B%0A%20%20%20%20%20%20bounce.rethrow(err,%20%27system%27)%0A%20%20%20%20%20%20console.log(err)%0A%20%20%20%20%20%20return%20err%0A%20%20%20%20%7D%0A%20%20%7D",
  "method": "GET",
  "headers": {
    "gccept": "application/json",
    "Content-Type": "application/json",
    "Authorization": "token f0ad9d5798ae612476e10998bbf998e595016baf",
    "User-Agent": "hschoenburg",
    "host": "api.github.com",
    "accept": "application/json"
  },
  "body": ""
}