[{"id":"7312913424","type":"PushEvent","actor":{"id":2113222,"login":"jinyangli","display_login":"jinyangli","gravatar_id":"","url":"https://api.github.com/users/jinyangli","avatar_url":"https://avatars.githubusercontent.com/u/2113222?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"push_id":2366870535,"size":248,"distinct_size":2,"ref":"refs/heads/jy/kbfs-throttle-error","head":"14a65562ffdcb61edc74b2f2011d75602ec6207f","before":"6f911d8caf95b45e709afd77aff928049ff52253","commits":[{"sha":"8e96933025f70a19dfe9e11c82493937b32812df","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"mdserver: respond correctly when the server supports iteams\n\nI forgot that mdserver returned an error, instead of just a null ID,\nin that case.","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/8e96933025f70a19dfe9e11c82493937b32812df"},{"sha":"14ea3fc273d63340023a591b732ea81c78f52e4e","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"journal_md_ops: handle null tlf ID","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/14ea3fc273d63340023a591b732ea81c78f52e4e"},{"sha":"d87abf80f16c531163c7f049586331b3ec9192d6","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"keybase_service_base: pass tlf type to iteam creation\n\nOops.","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/d87abf80f16c531163c7f049586331b3ec9192d6"},{"sha":"eb46c046feca6e6bdaea0a4c697c7e7ae55c3ee5","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"kbfsfuse: update the md version for the startup script\n\nUsed in docker tests.","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/eb46c046feca6e6bdaea0a4c697c7e7ae55c3ee5"},{"sha":"578a055a53626ff9c82b1ec9f05a737e8006baff","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"kbfsmd: return version error if incorrectly asked to make iteam MD\n\nIf the mdserver turns on support for iteams, but we are running\nwithout that support turned on yet (i.e., in prod mode), we should\nreturn a NewMetadataVersionError instead of a generic error, so that\nthe user will get a popup about needing to upgrade instead of just a\nplain EIO.\n\nIssue: KBFS-2621","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/578a055a53626ff9c82b1ec9f05a737e8006baff"},{"sha":"65970730b1bc3f910659e71e84ccdc29db6def6c","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"folder_branch_ops: enable journal when setting first TLF head\n\nOnce iteams are enabled and TLF IDs are stored in the team's sigchain,\n`KBFSOpsStandard` will be able to create a `folderBranchOps` without\never passing the TLF's handle through `journalMDOps`.  This is a\nproblem, because the handle is required to enable a journal.  Without\nthis, the journal won't get created until the first MD put with a\nrevision > 1, which is too late because that will happen when the TLF\nis locally dirty, and we can't enable journals then.\n\nSo instead, enable the journal (if needed) the first time a head is\nset inside the FBO.\n\nIssue: KBFS-2621","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/65970730b1bc3f910659e71e84ccdc29db6def6c"},{"sha":"f29d12268c408b2806b402a488c7a859034d5660","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"vendor: update keybase1 to get new resolve implicit team RPC\n\nlibkb comes along for the ride.\n\nIssue: KBFS-2621","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/f29d12268c408b2806b402a488c7a859034d5660"},{"sha":"6169704a5bd721385eb14caf682874e06ec6515b","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"libkbfs: add ResolveImplicitTeamByID calls\n\nIssue: KBFS-2621","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/6169704a5bd721385eb14caf682874e06ec6515b"},{"sha":"9d87acc18c73f4ab569d6590a05941abc938c8f9","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"tlf_handle_resolve: use ResolveImplicitTeamByID\n\nFor when we only know a team ID and need to check whether it's an\nimplicit team or not.\n\nIssue: KBFS-2621","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/9d87acc18c73f4ab569d6590a05941abc938c8f9"},{"sha":"2d1fbca79195558b2ecc6c727da2d7df56e2b855","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"folder_branch_ops: resolve implicit team names on changes\n\nIssue: KBFS-2621","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/2d1fbca79195558b2ecc6c727da2d7df56e2b855"},{"sha":"b1ef6e1dd547124d7900e13877c1162ff123e1ae","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"init: turn on mdv4 by default\n\nSo it will start working once the mdserver turns it on.\n\nIssue: KBFS-2621","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/b1ef6e1dd547124d7900e13877c1162ff123e1ae"},{"sha":"78b48c02e963e65e5bd22fdbef217a706852390f","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"keybase_daemon_local: turn off support for iteams in Resolve()\n\nIssue: KBFS-2621","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/78b48c02e963e65e5bd22fdbef217a706852390f"},{"sha":"c49faad5e7401220a38f3dd4d22a27680b8a9427","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"Revert \"init: turn on mdv4 by default\"\n\nThis reverts commit 5bdb59102a7c60fee0fa0b16e5dca660efd3d97a.","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/c49faad5e7401220a38f3dd4d22a27680b8a9427"},{"sha":"00ab57b620f392e32d27f21375f51304d58b742e","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"keybase_daemon_local: clarify iteam resolve in comment\n\nSuggested by jzila.\n\nIssue: #1386","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/00ab57b620f392e32d27f21375f51304d58b742e"},{"sha":"bb67b8b570c3ced7295ef095a3087b167481f021","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"init: update KBFS issue on iteam TODO\n\nIssue: KBFS-2621","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/bb67b8b570c3ced7295ef095a3087b167481f021"},{"sha":"bcb40c4fbc8c2071ad4af447fd84b0f961e97e99","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"tlf_handle_resolve: add check for resolved implicit team ID\n\nSuggested by songgao.\n\nIssue: #1386","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/bcb40c4fbc8c2071ad4af447fd84b0f961e97e99"},{"sha":"7a2a04ebc371fe4925dec26c7fc695e8a661153f","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"kbfsgit: use handle type/name to check if tlf is managed by app\n\nPreviously we were using the number of users in the handle, which\nbreaks for implicit teams.  So instead use the type, and for private\nTLFs, use the full name and see if multiple users are listed.","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/7a2a04ebc371fe4925dec26c7fc695e8a661153f"},{"sha":"c039d38f11f5f730ff766bf292db3d67bd78cb08","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"kbpki_client: handle errors during writer checks for public iteams\n\nThe service returns a `libkb.NotFoundError` when trying to load a team\nif you're not a member of that team.  We don't want that error to\npropagate up to the rest of KBFS, since we might be checking\nwritership in order to set permissions on a file in a public TLF, for\nexample.  So ignore those errors in the public iteam case, and avoid\ntrying to load the team at all if we're not logged in.","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/c039d38f11f5f730ff766bf292db3d67bd78cb08"},{"sha":"26e7daf2671b534f001297524cccdaaa5daeecc3","author":{"email":"song@gao.io","name":"Song Gao"},"message":"Keybase Pages prototype","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/26e7daf2671b534f001297524cccdaaa5daeecc3"},{"sha":"25de97b73249f40aea9ca37aa110e1e90d13122c","author":{"email":"song@gao.io","name":"Song Gao"},"message":"review feedback from strib","distinct":false,"url":"https://api.github.com/repos/keybase/kbfs/commits/25de97b73249f40aea9ca37aa110e1e90d13122c"}]},"public":true,"created_at":"2018-02-28T22:38:32Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7312800527","type":"ForkEvent","actor":{"id":14097,"login":"graydon","display_login":"graydon","gravatar_id":"","url":"https://api.github.com/users/graydon","avatar_url":"https://avatars.githubusercontent.com/u/14097?"},"repo":{"id":44075767,"name":"jimktrains/decsix","url":"https://api.github.com/repos/jimktrains/decsix"},"payload":{"forkee":{"id":123348728,"name":"decsix","full_name":"graydon/decsix","owner":{"login":"graydon","id":14097,"avatar_url":"https://avatars3.githubusercontent.com/u/14097?v=4","gravatar_id":"","url":"https://api.github.com/users/graydon","html_url":"https://github.com/graydon","followers_url":"https://api.github.com/users/graydon/followers","following_url":"https://api.github.com/users/graydon/following{/other_user}","gists_url":"https://api.github.com/users/graydon/gists{/gist_id}","starred_url":"https://api.github.com/users/graydon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/graydon/subscriptions","organizations_url":"https://api.github.com/users/graydon/orgs","repos_url":"https://api.github.com/users/graydon/repos","events_url":"https://api.github.com/users/graydon/events{/privacy}","received_events_url":"https://api.github.com/users/graydon/received_events","type":"User","site_admin":false},"private":false,"html_url":"https://github.com/graydon/decsix","description":"Encodes a string into DEC SIX encoding","fork":true,"url":"https://api.github.com/repos/graydon/decsix","forks_url":"https://api.github.com/repos/graydon/decsix/forks","keys_url":"https://api.github.com/repos/graydon/decsix/keys{/key_id}","collaborators_url":"https://api.github.com/repos/graydon/decsix/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/graydon/decsix/teams","hooks_url":"https://api.github.com/repos/graydon/decsix/hooks","issue_events_url":"https://api.github.com/repos/graydon/decsix/issues/events{/number}","events_url":"https://api.github.com/repos/graydon/decsix/events","assignees_url":"https://api.github.com/repos/graydon/decsix/assignees{/user}","branches_url":"https://api.github.com/repos/graydon/decsix/branches{/branch}","tags_url":"https://api.github.com/repos/graydon/decsix/tags","blobs_url":"https://api.github.com/repos/graydon/decsix/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/graydon/decsix/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/graydon/decsix/git/refs{/sha}","trees_url":"https://api.github.com/repos/graydon/decsix/git/trees{/sha}","statuses_url":"https://api.github.com/repos/graydon/decsix/statuses/{sha}","languages_url":"https://api.github.com/repos/graydon/decsix/languages","stargazers_url":"https://api.github.com/repos/graydon/decsix/stargazers","contributors_url":"https://api.github.com/repos/graydon/decsix/contributors","subscribers_url":"https://api.github.com/repos/graydon/decsix/subscribers","subscription_url":"https://api.github.com/repos/graydon/decsix/subscription","commits_url":"https://api.github.com/repos/graydon/decsix/commits{/sha}","git_commits_url":"https://api.github.com/repos/graydon/decsix/git/commits{/sha}","comments_url":"https://api.github.com/repos/graydon/decsix/comments{/number}","issue_comment_url":"https://api.github.com/repos/graydon/decsix/issues/comments{/number}","contents_url":"https://api.github.com/repos/graydon/decsix/contents/{+path}","compare_url":"https://api.github.com/repos/graydon/decsix/compare/{base}...{head}","merges_url":"https://api.github.com/repos/graydon/decsix/merges","archive_url":"https://api.github.com/repos/graydon/decsix/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/graydon/decsix/downloads","issues_url":"https://api.github.com/repos/graydon/decsix/issues{/number}","pulls_url":"https://api.github.com/repos/graydon/decsix/pulls{/number}","milestones_url":"https://api.github.com/repos/graydon/decsix/milestones{/number}","notifications_url":"https://api.github.com/repos/graydon/decsix/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/graydon/decsix/labels{/name}","releases_url":"https://api.github.com/repos/graydon/decsix/releases{/id}","deployments_url":"https://api.github.com/repos/graydon/decsix/deployments","created_at":"2018-02-28T22:14:00Z","updated_at":"2018-02-28T22:13:58Z","pushed_at":"2015-10-12T01:07:32Z","git_url":"git://github.com/graydon/decsix.git","ssh_url":"git@github.com:graydon/decsix.git","clone_url":"https://github.com/graydon/decsix.git","svn_url":"https://github.com/graydon/decsix","homepage":null,"size":160,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":{"key":"gpl-3.0","name":"GNU General Public License v3.0","spdx_id":"GPL-3.0","url":"https://api.github.com/licenses/gpl-3.0"},"forks":0,"open_issues":0,"watchers":0,"default_branch":"master","public":true}},"public":true,"created_at":"2018-02-28T22:14:00Z"},{"id":"7312800360","type":"WatchEvent","actor":{"id":14097,"login":"graydon","display_login":"graydon","gravatar_id":"","url":"https://api.github.com/users/graydon","avatar_url":"https://avatars.githubusercontent.com/u/14097?"},"repo":{"id":44075767,"name":"jimktrains/decsix","url":"https://api.github.com/repos/jimktrains/decsix"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-28T22:13:58Z"},{"id":"7312782508","type":"ForkEvent","actor":{"id":14097,"login":"graydon","display_login":"graydon","gravatar_id":"","url":"https://api.github.com/users/graydon","avatar_url":"https://avatars.githubusercontent.com/u/14097?"},"repo":{"id":53169939,"name":"OneNoteDev/GoldFish","url":"https://api.github.com/repos/OneNoteDev/GoldFish"},"payload":{"forkee":{"id":123348398,"name":"GoldFish","full_name":"graydon/GoldFish","owner":{"login":"graydon","id":14097,"avatar_url":"https://avatars3.githubusercontent.com/u/14097?v=4","gravatar_id":"","url":"https://api.github.com/users/graydon","html_url":"https://github.com/graydon","followers_url":"https://api.github.com/users/graydon/followers","following_url":"https://api.github.com/users/graydon/following{/other_user}","gists_url":"https://api.github.com/users/graydon/gists{/gist_id}","starred_url":"https://api.github.com/users/graydon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/graydon/subscriptions","organizations_url":"https://api.github.com/users/graydon/orgs","repos_url":"https://api.github.com/users/graydon/repos","events_url":"https://api.github.com/users/graydon/events{/privacy}","received_events_url":"https://api.github.com/users/graydon/received_events","type":"User","site_admin":false},"private":false,"html_url":"https://github.com/graydon/GoldFish","description":"JSON/CBOR streaming library, without using memory, like a GoldFish","fork":true,"url":"https://api.github.com/repos/graydon/GoldFish","forks_url":"https://api.github.com/repos/graydon/GoldFish/forks","keys_url":"https://api.github.com/repos/graydon/GoldFish/keys{/key_id}","collaborators_url":"https://api.github.com/repos/graydon/GoldFish/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/graydon/GoldFish/teams","hooks_url":"https://api.github.com/repos/graydon/GoldFish/hooks","issue_events_url":"https://api.github.com/repos/graydon/GoldFish/issues/events{/number}","events_url":"https://api.github.com/repos/graydon/GoldFish/events","assignees_url":"https://api.github.com/repos/graydon/GoldFish/assignees{/user}","branches_url":"https://api.github.com/repos/graydon/GoldFish/branches{/branch}","tags_url":"https://api.github.com/repos/graydon/GoldFish/tags","blobs_url":"https://api.github.com/repos/graydon/GoldFish/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/graydon/GoldFish/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/graydon/GoldFish/git/refs{/sha}","trees_url":"https://api.github.com/repos/graydon/GoldFish/git/trees{/sha}","statuses_url":"https://api.github.com/repos/graydon/GoldFish/statuses/{sha}","languages_url":"https://api.github.com/repos/graydon/GoldFish/languages","stargazers_url":"https://api.github.com/repos/graydon/GoldFish/stargazers","contributors_url":"https://api.github.com/repos/graydon/GoldFish/contributors","subscribers_url":"https://api.github.com/repos/graydon/GoldFish/subscribers","subscription_url":"https://api.github.com/repos/graydon/GoldFish/subscription","commits_url":"https://api.github.com/repos/graydon/GoldFish/commits{/sha}","git_commits_url":"https://api.github.com/repos/graydon/GoldFish/git/commits{/sha}","comments_url":"https://api.github.com/repos/graydon/GoldFish/comments{/number}","issue_comment_url":"https://api.github.com/repos/graydon/GoldFish/issues/comments{/number}","contents_url":"https://api.github.com/repos/graydon/GoldFish/contents/{+path}","compare_url":"https://api.github.com/repos/graydon/GoldFish/compare/{base}...{head}","merges_url":"https://api.github.com/repos/graydon/GoldFish/merges","archive_url":"https://api.github.com/repos/graydon/GoldFish/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/graydon/GoldFish/downloads","issues_url":"https://api.github.com/repos/graydon/GoldFish/issues{/number}","pulls_url":"https://api.github.com/repos/graydon/GoldFish/pulls{/number}","milestones_url":"https://api.github.com/repos/graydon/GoldFish/milestones{/number}","notifications_url":"https://api.github.com/repos/graydon/GoldFish/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/graydon/GoldFish/labels{/name}","releases_url":"https://api.github.com/repos/graydon/GoldFish/releases{/id}","deployments_url":"https://api.github.com/repos/graydon/GoldFish/deployments","created_at":"2018-02-28T22:09:57Z","updated_at":"2018-02-28T22:09:56Z","pushed_at":"2016-08-23T09:31:34Z","git_url":"git://github.com/graydon/GoldFish.git","ssh_url":"git@github.com:graydon/GoldFish.git","clone_url":"https://github.com/graydon/GoldFish.git","svn_url":"https://github.com/graydon/GoldFish","homepage":"","size":296,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":{"key":"mit","name":"MIT License","spdx_id":"MIT","url":"https://api.github.com/licenses/mit"},"forks":0,"open_issues":0,"watchers":0,"default_branch":"master","public":true}},"public":true,"created_at":"2018-02-28T22:09:58Z","org":{"id":6225732,"login":"OneNoteDev","gravatar_id":"","url":"https://api.github.com/orgs/OneNoteDev","avatar_url":"https://avatars.githubusercontent.com/u/6225732?"}},{"id":"7312782386","type":"WatchEvent","actor":{"id":14097,"login":"graydon","display_login":"graydon","gravatar_id":"","url":"https://api.github.com/users/graydon","avatar_url":"https://avatars.githubusercontent.com/u/14097?"},"repo":{"id":53169939,"name":"OneNoteDev/GoldFish","url":"https://api.github.com/repos/OneNoteDev/GoldFish"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-28T22:09:56Z","org":{"id":6225732,"login":"OneNoteDev","gravatar_id":"","url":"https://api.github.com/orgs/OneNoteDev","avatar_url":"https://avatars.githubusercontent.com/u/6225732?"}},{"id":"7312745038","type":"ForkEvent","actor":{"id":310854,"login":"neilalexander","display_login":"neilalexander","gravatar_id":"","url":"https://api.github.com/users/neilalexander","avatar_url":"https://avatars.githubusercontent.com/u/310854?"},"repo":{"id":9014825,"name":"songgao/water","url":"https://api.github.com/repos/songgao/water"},"payload":{"forkee":{"id":123347694,"name":"water","full_name":"neilalexander/water","owner":{"login":"neilalexander","id":310854,"avatar_url":"https://avatars3.githubusercontent.com/u/310854?v=4","gravatar_id":"","url":"https://api.github.com/users/neilalexander","html_url":"https://github.com/neilalexander","followers_url":"https://api.github.com/users/neilalexander/followers","following_url":"https://api.github.com/users/neilalexander/following{/other_user}","gists_url":"https://api.github.com/users/neilalexander/gists{/gist_id}","starred_url":"https://api.github.com/users/neilalexander/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/neilalexander/subscriptions","organizations_url":"https://api.github.com/users/neilalexander/orgs","repos_url":"https://api.github.com/users/neilalexander/repos","events_url":"https://api.github.com/users/neilalexander/events{/privacy}","received_events_url":"https://api.github.com/users/neilalexander/received_events","type":"User","site_admin":false},"private":false,"html_url":"https://github.com/neilalexander/water","description":"A simple TUN/TAP library written in native Go.","fork":true,"url":"https://api.github.com/repos/neilalexander/water","forks_url":"https://api.github.com/repos/neilalexander/water/forks","keys_url":"https://api.github.com/repos/neilalexander/water/keys{/key_id}","collaborators_url":"https://api.github.com/repos/neilalexander/water/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/neilalexander/water/teams","hooks_url":"https://api.github.com/repos/neilalexander/water/hooks","issue_events_url":"https://api.github.com/repos/neilalexander/water/issues/events{/number}","events_url":"https://api.github.com/repos/neilalexander/water/events","assignees_url":"https://api.github.com/repos/neilalexander/water/assignees{/user}","branches_url":"https://api.github.com/repos/neilalexander/water/branches{/branch}","tags_url":"https://api.github.com/repos/neilalexander/water/tags","blobs_url":"https://api.github.com/repos/neilalexander/water/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/neilalexander/water/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/neilalexander/water/git/refs{/sha}","trees_url":"https://api.github.com/repos/neilalexander/water/git/trees{/sha}","statuses_url":"https://api.github.com/repos/neilalexander/water/statuses/{sha}","languages_url":"https://api.github.com/repos/neilalexander/water/languages","stargazers_url":"https://api.github.com/repos/neilalexander/water/stargazers","contributors_url":"https://api.github.com/repos/neilalexander/water/contributors","subscribers_url":"https://api.github.com/repos/neilalexander/water/subscribers","subscription_url":"https://api.github.com/repos/neilalexander/water/subscription","commits_url":"https://api.github.com/repos/neilalexander/water/commits{/sha}","git_commits_url":"https://api.github.com/repos/neilalexander/water/git/commits{/sha}","comments_url":"https://api.github.com/repos/neilalexander/water/comments{/number}","issue_comment_url":"https://api.github.com/repos/neilalexander/water/issues/comments{/number}","contents_url":"https://api.github.com/repos/neilalexander/water/contents/{+path}","compare_url":"https://api.github.com/repos/neilalexander/water/compare/{base}...{head}","merges_url":"https://api.github.com/repos/neilalexander/water/merges","archive_url":"https://api.github.com/repos/neilalexander/water/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/neilalexander/water/downloads","issues_url":"https://api.github.com/repos/neilalexander/water/issues{/number}","pulls_url":"https://api.github.com/repos/neilalexander/water/pulls{/number}","milestones_url":"https://api.github.com/repos/neilalexander/water/milestones{/number}","notifications_url":"https://api.github.com/repos/neilalexander/water/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/neilalexander/water/labels{/name}","releases_url":"https://api.github.com/repos/neilalexander/water/releases{/id}","deployments_url":"https://api.github.com/repos/neilalexander/water/deployments","created_at":"2018-02-28T22:02:01Z","updated_at":"2018-02-28T02:50:45Z","pushed_at":"2018-02-21T19:04:02Z","git_url":"git://github.com/neilalexander/water.git","ssh_url":"git@github.com:neilalexander/water.git","clone_url":"https://github.com/neilalexander/water.git","svn_url":"https://github.com/neilalexander/water","homepage":"","size":78,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":null,"forks":0,"open_issues":0,"watchers":0,"default_branch":"master","public":true}},"public":true,"created_at":"2018-02-28T22:02:01Z"},{"id":"7312689176","type":"PullRequestReviewCommentEvent","actor":{"id":8516691,"login":"strib","display_login":"strib","gravatar_id":"","url":"https://api.github.com/users/strib","avatar_url":"https://avatars.githubusercontent.com/u/8516691?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/comments/171396812","pull_request_review_id":100242908,"id":171396812,"diff_hunk":"@@ -0,0 +1,267 @@\n+// Copyright 2018 Keybase Inc. All rights reserved.\n+// Use of this source code is governed by a BSD\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"os/signal\"\n+\t\"os/user\"\n+\t\"path/filepath\"\n+\t\"runtime\"\n+\t\"sort\"\n+\t\"strconv\"\n+\t\"strings\"\n+\t\"sync\"\n+\t\"syscall\"\n+\t\"time\"\n+\n+\t\"bazil.org/fuse\"\n+\t\"bazil.org/fuse/fs\"\n+\t\"github.com/strib/gomounts\"\n+)\n+\n+var kbfusePath = fuse.OSXFUSEPaths{\n+\tDevicePrefix: \"/dev/kbfuse\",\n+\tLoad:         \"/Library/Filesystems/kbfuse.fs/Contents/Resources/load_kbfuse\",\n+\tMount:        \"/Library/Filesystems/kbfuse.fs/Contents/Resources/mount_kbfuse\",\n+\tDaemonVar:    \"MOUNT_KBFUSE_DAEMON_PATH\",\n+}\n+\n+const (\n+\tmountpointTimeout = 5 * time.Second\n+)\n+\n+type symlink struct {\n+\tlink string\n+}\n+\n+func (s symlink) Attr(ctx context.Context, a *fuse.Attr) (err error) {\n+\ta.Mode = os.ModeSymlink | a.Mode | 0555\n+\ta.Valid = 0\n+\treturn nil\n+}\n+\n+func (s symlink) Readlink(ctx context.Context, req *fuse.ReadlinkRequest) (\n+\tlink string, err error) {\n+\treturn s.link, nil\n+}\n+\n+type cacheEntry struct {\n+\tmountpoint string\n+\ttime       time.Time\n+}\n+\n+type root struct {\n+\tlock            sync.RWMutex\n+\tmountpointCache map[uint32]cacheEntry\n+}\n+\n+func newRoot() *root {\n+\treturn &root{\n+\t\tmountpointCache: make(map[uint32]cacheEntry),\n+\t}\n+}\n+\n+func (r *root) Root() (fs.Node, error) {\n+\treturn r, nil\n+}\n+\n+func (r *root) Attr(ctx context.Context, attr *fuse.Attr) error {\n+\tattr.Mode = os.ModeDir | 0555\n+\treturn nil\n+}\n+\n+func (r *root) getCachedMountpoint(uid uint32) string {\n+\tr.lock.RLock()\n+\tdefer r.lock.RUnlock()\n+\tentry, ok := r.mountpointCache[uid]\n+\tif !ok {\n+\t\treturn \"\"\n+\t}\n+\tnow := time.Now()\n+\tif now.Sub(entry.time) > mountpointTimeout {\n+\t\t// Don't bother deleting the entry, since the caller should\n+\t\t// just overwrite it.\n+\t\treturn \"\"\n+\t}\n+\treturn entry.mountpoint\n+}\n+\n+func (r *root) findKBFSMount(ctx context.Context) (\n+\tmountpoint string, err error) {\n+\tuid := ctx.Value(fs.CtxHeaderUIDKey).(uint32)\n+\t// Don't let the root see anything here; we don't want a symlink\n+\t// loop back to this mount.\n+\tif uid == 0 {\n+\t\treturn \"\", fuse.ENOENT\n+\t}\n+\n+\tmountpoint = r.getCachedMountpoint(uid)\n+\tif mountpoint != \"\" {\n+\t\treturn mountpoint, nil\n+\t}\n+\n+\tdefer func() {\n+\t\tif err != nil {\n+\t\t\treturn\n+\t\t}\n+\t\t// Cache the entry if we didn't hit an error.\n+\t\tr.lock.Lock()\n+\t\tdefer r.lock.Unlock()\n+\t\tr.mountpointCache[uid] = cacheEntry{\n+\t\t\tmountpoint: mountpoint,\n+\t\t\ttime:       time.Now(),\n+\t\t}\n+\t}()\n+\n+\tu, err := user.LookupId(strconv.FormatUint(uint64(uid), 10))\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\n+\tvols, err := gomounts.GetMountedVolumes()\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\tfuseType := \"fuse\"\n+\tif runtime.GOOS == \"darwin\" {\n+\t\tfuseType = \"kbfuse\"\n+\t}\n+\tvar fuseMountPoints []string\n+\tfor _, v := range vols {\n+\t\tif v.Type != fuseType {\n+\t\t\tcontinue\n+\t\t}\n+\t\tif v.Owner != u.Uid {\n+\t\t\tcontinue\n+\t\t}\n+\t\tfuseMountPoints = append(fuseMountPoints, v.Path)\n+\t}\n+\n+\tif len(fuseMountPoints) == 0 {\n+\t\treturn \"\", fuse.ENOENT\n+\t}\n+\tif len(fuseMountPoints) == 1 {\n+\t\treturn fuseMountPoints[0], nil\n+\t}\n+\n+\t// If there is more than one, pick the first one alphabetically\n+\t// that has \"keybase\" in the path.\n+\tsort.Strings(fuseMountPoints)\n+\tfor _, mp := range fuseMountPoints {\n+\t\t// TODO: a better regexp that will rule out keybase.staging if\n+\t\t// we're in prod mode, etc.\n+\t\tif !strings.Contains(mp, \"keybase\") {\n+\t\t\tcontinue\n+\t\t}\n+\t\t// Double-check that this is a real KBFS mount.\n+\t\tif _, err := os.Stat(filepath.Join(mp, \".kbfs_error\")); err != nil {\n+\t\t\tcontinue\n+\t\t}\n+\t\treturn mp, nil\n+\t}\n+\n+\t// Give up and return the first one.\n+\treturn fuseMountPoints[0], nil\n+}\n+\n+func (r *root) ReadDirAll(ctx context.Context) ([]fuse.Dirent, error) {\n+\t_, err := r.findKBFSMount(ctx)\n+\tif err != nil {\n+\t\tif err == fuse.ENOENT {\n+\t\t\treturn []fuse.Dirent{}, nil\n+\t\t} else {\n+\t\t\treturn []fuse.Dirent{}, err\n+\t\t}\n+\t}\n+\n+\t// TODO: show the `kbfs.error.txt\" and \"kbfs.nologin.txt\" files if\n+\t// they exist?  As root, it is hard to figure out if they're\n+\t// there, though.\n+\treturn []fuse.Dirent{\n+\t\t{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"private\",\n+\t\t},\n+\t\t{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"public\",\n+\t\t},\n+\t\tfuse.Dirent{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"team\",\n+\t\t},\n+\t}, nil\n+}\n+\n+func (r *root) Lookup(\n+\tctx context.Context, req *fuse.LookupRequest, resp *fuse.LookupResponse) (\n+\tn fs.Node, err error) {\n+\tmountpoint, err := r.findKBFSMount(ctx)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tresp.EntryValid = 0\n+\tswitch req.Name {\n+\tcase \"private\", \"public\", \"team\", \".kbfs_error\", \".kbfs_metrics\",\n+\t\t\".kbfs_profiles\", \".kbfs_reset_caches\", \".kbfs_status\",\n+\t\t\"kbfs.error.txt\", \"kbfs.nologin.txt\", \".kbfs_enable_auto_journals\",\n+\t\t\".kbfs_disable_auto_journals\", \".kbfs_enable_block_prefetching\",\n+\t\t\".kbfs_disable_block_prefetching\", \".kbfs_enable_debug_server\",\n+\t\t\".kbfs_disable_debug_server\":\n+\t\treturn symlink{filepath.Join(mountpoint, req.Name)}, nil\n+\t}\n+\treturn nil, fuse.ENOENT\n+}\n+\n+func main() {\n+\tcurrUser, err := user.Current()\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\tif currUser.Uid != \"0\" {\n+\t\truntime.LockOSThread()\n+\t\t_, _, errNo := syscall.Syscall(syscall.SYS_SETUID, 0, 0, 0)","path":"redirector/go/main.go","position":228,"original_position":229,"commit_id":"a375bbaa852f7c4c5475526da029481d313d80e8","original_commit_id":"4a9c54931293f10b5568f92acdec99a7e74547c5","user":{"login":"strib","id":8516691,"avatar_url":"https://avatars0.githubusercontent.com/u/8516691?v=4","gravatar_id":"","url":"https://api.github.com/users/strib","html_url":"https://github.com/strib","followers_url":"https://api.github.com/users/strib/followers","following_url":"https://api.github.com/users/strib/following{/other_user}","gists_url":"https://api.github.com/users/strib/gists{/gist_id}","starred_url":"https://api.github.com/users/strib/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/strib/subscriptions","organizations_url":"https://api.github.com/users/strib/orgs","repos_url":"https://api.github.com/users/strib/repos","events_url":"https://api.github.com/users/strib/events{/privacy}","received_events_url":"https://api.github.com/users/strib/received_events","type":"User","site_admin":false},"body":"I guess maybe it has something to do with the difference between linking into the .so file and calling an external mount program?  Maybe the latter doesn't get run as root unless you officially set the uid?","created_at":"2018-02-28T21:50:46Z","updated_at":"2018-02-28T21:50:47Z","html_url":"https://github.com/keybase/kbfs/pull/1496#discussion_r171396812","pull_request_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","author_association":"CONTRIBUTOR","_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments/171396812"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496#discussion_r171396812"},"pull_request":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"}},"in_reply_to_id":171385042},"pull_request":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","id":172070599,"html_url":"https://github.com/keybase/kbfs/pull/1496","diff_url":"https://github.com/keybase/kbfs/pull/1496.diff","patch_url":"https://github.com/keybase/kbfs/pull/1496.patch","issue_url":"https://api.github.com/repos/keybase/kbfs/issues/1496","number":1496,"state":"open","locked":false,"title":"redirector: a Go implementation for the root redirector","user":{"login":"strib","id":8516691,"avatar_url":"https://avatars0.githubusercontent.com/u/8516691?v=4","gravatar_id":"","url":"https://api.github.com/users/strib","html_url":"https://github.com/strib","followers_url":"https://api.github.com/users/strib/followers","following_url":"https://api.github.com/users/strib/following{/other_user}","gists_url":"https://api.github.com/users/strib/gists{/gist_id}","starred_url":"https://api.github.com/users/strib/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/strib/subscriptions","organizations_url":"https://api.github.com/users/strib/orgs","repos_url":"https://api.github.com/users/strib/repos","events_url":"https://api.github.com/users/strib/events{/privacy}","received_events_url":"https://api.github.com/users/strib/received_events","type":"User","site_admin":false},"body":"This implementation of the root redirector will likely be used for macOS, at least until we figure out the kbfuse+Rust situation.\r\n\r\nNote that I needed some new bazil.org/fuse options, so I forked it to github.comkeybase/fuse and added two new features:\r\n* A NoBrowse() option that keeps the redirector from showing up in the Finder (instead, the specific user's mount will show up).\r\n* Adding the requesting user's UID to the context for every request, since `ReadDirAll` needs to know whether the requesting user has a valid mountpoint or not.  The bazil.org/fuse interface for `ReadDirAll` doesn't pass this down, so putting it in the context seemed like the easiest option for now.\r\n\r\nIssue: KBFS-2774","created_at":"2018-02-28T20:58:07Z","updated_at":"2018-02-28T21:50:47Z","closed_at":null,"merged_at":null,"merge_commit_sha":"437c5c76f895a2fc4092ddecb665a8ea1424e823","assignee":null,"assignees":[],"requested_reviewers":[{"login":"jzila","id":59594,"avatar_url":"https://avatars1.githubusercontent.com/u/59594?v=4","gravatar_id":"","url":"https://api.github.com/users/jzila","html_url":"https://github.com/jzila","followers_url":"https://api.github.com/users/jzila/followers","following_url":"https://api.github.com/users/jzila/following{/other_user}","gists_url":"https://api.github.com/users/jzila/gists{/gist_id}","starred_url":"https://api.github.com/users/jzila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzila/subscriptions","organizations_url":"https://api.github.com/users/jzila/orgs","repos_url":"https://api.github.com/users/jzila/repos","events_url":"https://api.github.com/users/jzila/events{/privacy}","received_events_url":"https://api.github.com/users/jzila/received_events","type":"User","site_admin":false},{"login":"songgao","id":255797,"avatar_url":"https://avatars3.githubusercontent.com/u/255797?v=4","gravatar_id":"","url":"https://api.github.com/users/songgao","html_url":"https://github.com/songgao","followers_url":"https://api.github.com/users/songgao/followers","following_url":"https://api.github.com/users/songgao/following{/other_user}","gists_url":"https://api.github.com/users/songgao/gists{/gist_id}","starred_url":"https://api.github.com/users/songgao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songgao/subscriptions","organizations_url":"https://api.github.com/users/songgao/orgs","repos_url":"https://api.github.com/users/songgao/repos","events_url":"https://api.github.com/users/songgao/events{/privacy}","received_events_url":"https://api.github.com/users/songgao/received_events","type":"User","site_admin":false},{"login":"akalin-keybase","id":13270622,"avatar_url":"https://avatars3.githubusercontent.com/u/13270622?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin-keybase","html_url":"https://github.com/akalin-keybase","followers_url":"https://api.github.com/users/akalin-keybase/followers","following_url":"https://api.github.com/users/akalin-keybase/following{/other_user}","gists_url":"https://api.github.com/users/akalin-keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin-keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin-keybase/subscriptions","organizations_url":"https://api.github.com/users/akalin-keybase/orgs","repos_url":"https://api.github.com/users/akalin-keybase/repos","events_url":"https://api.github.com/users/akalin-keybase/events{/privacy}","received_events_url":"https://api.github.com/users/akalin-keybase/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits","review_comments_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments","review_comment_url":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/a375bbaa852f7c4c5475526da029481d313d80e8","head":{"label":"keybase:strib/KBFS-2774-mount-redirector","ref":"strib/KBFS-2774-mount-redirector","sha":"a375bbaa852f7c4c5475526da029481d313d80e8","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T21:03:09Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48537,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"base":{"label":"keybase:master","ref":"master","sha":"478a58b55a4605e2abe8699e32adc066bf1df7ee","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T21:03:09Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48537,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496"},"issue":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496"},"comments":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments"},"review_comments":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments"},"review_comment":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits"},"statuses":{"href":"https://api.github.com/repos/keybase/kbfs/statuses/a375bbaa852f7c4c5475526da029481d313d80e8"}},"author_association":"CONTRIBUTOR"}},"public":true,"created_at":"2018-02-28T21:50:46Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7312678444","type":"PullRequestReviewCommentEvent","actor":{"id":8516691,"login":"strib","display_login":"strib","gravatar_id":"","url":"https://api.github.com/users/strib","avatar_url":"https://avatars.githubusercontent.com/u/8516691?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/comments/171396177","pull_request_review_id":100242113,"id":171396177,"diff_hunk":"@@ -0,0 +1,267 @@\n+// Copyright 2018 Keybase Inc. All rights reserved.\n+// Use of this source code is governed by a BSD\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"os/signal\"\n+\t\"os/user\"\n+\t\"path/filepath\"\n+\t\"runtime\"\n+\t\"sort\"\n+\t\"strconv\"\n+\t\"strings\"\n+\t\"sync\"\n+\t\"syscall\"\n+\t\"time\"\n+\n+\t\"bazil.org/fuse\"\n+\t\"bazil.org/fuse/fs\"\n+\t\"github.com/strib/gomounts\"\n+)\n+\n+var kbfusePath = fuse.OSXFUSEPaths{\n+\tDevicePrefix: \"/dev/kbfuse\",\n+\tLoad:         \"/Library/Filesystems/kbfuse.fs/Contents/Resources/load_kbfuse\",\n+\tMount:        \"/Library/Filesystems/kbfuse.fs/Contents/Resources/mount_kbfuse\",\n+\tDaemonVar:    \"MOUNT_KBFUSE_DAEMON_PATH\",\n+}\n+\n+const (\n+\tmountpointTimeout = 5 * time.Second\n+)\n+\n+type symlink struct {\n+\tlink string\n+}\n+\n+func (s symlink) Attr(ctx context.Context, a *fuse.Attr) (err error) {\n+\ta.Mode = os.ModeSymlink | a.Mode | 0555\n+\ta.Valid = 0\n+\treturn nil\n+}\n+\n+func (s symlink) Readlink(ctx context.Context, req *fuse.ReadlinkRequest) (\n+\tlink string, err error) {\n+\treturn s.link, nil\n+}\n+\n+type cacheEntry struct {\n+\tmountpoint string\n+\ttime       time.Time\n+}\n+\n+type root struct {\n+\tlock            sync.RWMutex\n+\tmountpointCache map[uint32]cacheEntry\n+}\n+\n+func newRoot() *root {\n+\treturn &root{\n+\t\tmountpointCache: make(map[uint32]cacheEntry),\n+\t}\n+}\n+\n+func (r *root) Root() (fs.Node, error) {\n+\treturn r, nil\n+}\n+\n+func (r *root) Attr(ctx context.Context, attr *fuse.Attr) error {\n+\tattr.Mode = os.ModeDir | 0555\n+\treturn nil\n+}\n+\n+func (r *root) getCachedMountpoint(uid uint32) string {\n+\tr.lock.RLock()\n+\tdefer r.lock.RUnlock()\n+\tentry, ok := r.mountpointCache[uid]\n+\tif !ok {\n+\t\treturn \"\"\n+\t}\n+\tnow := time.Now()\n+\tif now.Sub(entry.time) > mountpointTimeout {\n+\t\t// Don't bother deleting the entry, since the caller should\n+\t\t// just overwrite it.\n+\t\treturn \"\"\n+\t}\n+\treturn entry.mountpoint\n+}\n+\n+func (r *root) findKBFSMount(ctx context.Context) (\n+\tmountpoint string, err error) {\n+\tuid := ctx.Value(fs.CtxHeaderUIDKey).(uint32)\n+\t// Don't let the root see anything here; we don't want a symlink\n+\t// loop back to this mount.\n+\tif uid == 0 {\n+\t\treturn \"\", fuse.ENOENT\n+\t}\n+\n+\tmountpoint = r.getCachedMountpoint(uid)\n+\tif mountpoint != \"\" {\n+\t\treturn mountpoint, nil\n+\t}\n+\n+\tdefer func() {\n+\t\tif err != nil {\n+\t\t\treturn\n+\t\t}\n+\t\t// Cache the entry if we didn't hit an error.\n+\t\tr.lock.Lock()\n+\t\tdefer r.lock.Unlock()\n+\t\tr.mountpointCache[uid] = cacheEntry{\n+\t\t\tmountpoint: mountpoint,\n+\t\t\ttime:       time.Now(),\n+\t\t}\n+\t}()\n+\n+\tu, err := user.LookupId(strconv.FormatUint(uint64(uid), 10))\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\n+\tvols, err := gomounts.GetMountedVolumes()\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\tfuseType := \"fuse\"\n+\tif runtime.GOOS == \"darwin\" {\n+\t\tfuseType = \"kbfuse\"\n+\t}\n+\tvar fuseMountPoints []string\n+\tfor _, v := range vols {\n+\t\tif v.Type != fuseType {\n+\t\t\tcontinue\n+\t\t}\n+\t\tif v.Owner != u.Uid {\n+\t\t\tcontinue\n+\t\t}\n+\t\tfuseMountPoints = append(fuseMountPoints, v.Path)\n+\t}\n+\n+\tif len(fuseMountPoints) == 0 {\n+\t\treturn \"\", fuse.ENOENT\n+\t}\n+\tif len(fuseMountPoints) == 1 {\n+\t\treturn fuseMountPoints[0], nil\n+\t}\n+\n+\t// If there is more than one, pick the first one alphabetically\n+\t// that has \"keybase\" in the path.\n+\tsort.Strings(fuseMountPoints)\n+\tfor _, mp := range fuseMountPoints {\n+\t\t// TODO: a better regexp that will rule out keybase.staging if\n+\t\t// we're in prod mode, etc.\n+\t\tif !strings.Contains(mp, \"keybase\") {\n+\t\t\tcontinue\n+\t\t}\n+\t\t// Double-check that this is a real KBFS mount.\n+\t\tif _, err := os.Stat(filepath.Join(mp, \".kbfs_error\")); err != nil {\n+\t\t\tcontinue\n+\t\t}\n+\t\treturn mp, nil\n+\t}\n+\n+\t// Give up and return the first one.\n+\treturn fuseMountPoints[0], nil\n+}\n+\n+func (r *root) ReadDirAll(ctx context.Context) ([]fuse.Dirent, error) {\n+\t_, err := r.findKBFSMount(ctx)\n+\tif err != nil {\n+\t\tif err == fuse.ENOENT {\n+\t\t\treturn []fuse.Dirent{}, nil\n+\t\t} else {\n+\t\t\treturn []fuse.Dirent{}, err\n+\t\t}\n+\t}\n+\n+\t// TODO: show the `kbfs.error.txt\" and \"kbfs.nologin.txt\" files if\n+\t// they exist?  As root, it is hard to figure out if they're\n+\t// there, though.\n+\treturn []fuse.Dirent{\n+\t\t{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"private\",\n+\t\t},\n+\t\t{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"public\",\n+\t\t},\n+\t\tfuse.Dirent{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"team\",\n+\t\t},\n+\t}, nil\n+}\n+\n+func (r *root) Lookup(\n+\tctx context.Context, req *fuse.LookupRequest, resp *fuse.LookupResponse) (\n+\tn fs.Node, err error) {\n+\tmountpoint, err := r.findKBFSMount(ctx)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tresp.EntryValid = 0\n+\tswitch req.Name {\n+\tcase \"private\", \"public\", \"team\", \".kbfs_error\", \".kbfs_metrics\",\n+\t\t\".kbfs_profiles\", \".kbfs_reset_caches\", \".kbfs_status\",\n+\t\t\"kbfs.error.txt\", \"kbfs.nologin.txt\", \".kbfs_enable_auto_journals\",\n+\t\t\".kbfs_disable_auto_journals\", \".kbfs_enable_block_prefetching\",\n+\t\t\".kbfs_disable_block_prefetching\", \".kbfs_enable_debug_server\",\n+\t\t\".kbfs_disable_debug_server\":\n+\t\treturn symlink{filepath.Join(mountpoint, req.Name)}, nil\n+\t}\n+\treturn nil, fuse.ENOENT\n+}\n+\n+func main() {\n+\tcurrUser, err := user.Current()\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\tif currUser.Uid != \"0\" {\n+\t\truntime.LockOSThread()\n+\t\t_, _, errNo := syscall.Syscall(syscall.SYS_SETUID, 0, 0, 0)","path":"redirector/go/main.go","position":228,"original_position":229,"commit_id":"a375bbaa852f7c4c5475526da029481d313d80e8","original_commit_id":"4a9c54931293f10b5568f92acdec99a7e74547c5","user":{"login":"strib","id":8516691,"avatar_url":"https://avatars0.githubusercontent.com/u/8516691?v=4","gravatar_id":"","url":"https://api.github.com/users/strib","html_url":"https://github.com/strib","followers_url":"https://api.github.com/users/strib/followers","following_url":"https://api.github.com/users/strib/following{/other_user}","gists_url":"https://api.github.com/users/strib/gists{/gist_id}","starred_url":"https://api.github.com/users/strib/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/strib/subscriptions","organizations_url":"https://api.github.com/users/strib/orgs","repos_url":"https://api.github.com/users/strib/repos","events_url":"https://api.github.com/users/strib/events{/privacy}","received_events_url":"https://api.github.com/users/strib/received_events","type":"User","site_admin":false},"body":"Say what?  Yeah you're right, I just tried your branch and it worked for me (in `/tmp/`).  Stumped.","created_at":"2018-02-28T21:48:36Z","updated_at":"2018-02-28T21:48:36Z","html_url":"https://github.com/keybase/kbfs/pull/1496#discussion_r171396177","pull_request_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","author_association":"CONTRIBUTOR","_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments/171396177"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496#discussion_r171396177"},"pull_request":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"}},"in_reply_to_id":171385042},"pull_request":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","id":172070599,"html_url":"https://github.com/keybase/kbfs/pull/1496","diff_url":"https://github.com/keybase/kbfs/pull/1496.diff","patch_url":"https://github.com/keybase/kbfs/pull/1496.patch","issue_url":"https://api.github.com/repos/keybase/kbfs/issues/1496","number":1496,"state":"open","locked":false,"title":"redirector: a Go implementation for the root redirector","user":{"login":"strib","id":8516691,"avatar_url":"https://avatars0.githubusercontent.com/u/8516691?v=4","gravatar_id":"","url":"https://api.github.com/users/strib","html_url":"https://github.com/strib","followers_url":"https://api.github.com/users/strib/followers","following_url":"https://api.github.com/users/strib/following{/other_user}","gists_url":"https://api.github.com/users/strib/gists{/gist_id}","starred_url":"https://api.github.com/users/strib/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/strib/subscriptions","organizations_url":"https://api.github.com/users/strib/orgs","repos_url":"https://api.github.com/users/strib/repos","events_url":"https://api.github.com/users/strib/events{/privacy}","received_events_url":"https://api.github.com/users/strib/received_events","type":"User","site_admin":false},"body":"This implementation of the root redirector will likely be used for macOS, at least until we figure out the kbfuse+Rust situation.\r\n\r\nNote that I needed some new bazil.org/fuse options, so I forked it to github.comkeybase/fuse and added two new features:\r\n* A NoBrowse() option that keeps the redirector from showing up in the Finder (instead, the specific user's mount will show up).\r\n* Adding the requesting user's UID to the context for every request, since `ReadDirAll` needs to know whether the requesting user has a valid mountpoint or not.  The bazil.org/fuse interface for `ReadDirAll` doesn't pass this down, so putting it in the context seemed like the easiest option for now.\r\n\r\nIssue: KBFS-2774","created_at":"2018-02-28T20:58:07Z","updated_at":"2018-02-28T21:48:36Z","closed_at":null,"merged_at":null,"merge_commit_sha":"437c5c76f895a2fc4092ddecb665a8ea1424e823","assignee":null,"assignees":[],"requested_reviewers":[{"login":"jzila","id":59594,"avatar_url":"https://avatars1.githubusercontent.com/u/59594?v=4","gravatar_id":"","url":"https://api.github.com/users/jzila","html_url":"https://github.com/jzila","followers_url":"https://api.github.com/users/jzila/followers","following_url":"https://api.github.com/users/jzila/following{/other_user}","gists_url":"https://api.github.com/users/jzila/gists{/gist_id}","starred_url":"https://api.github.com/users/jzila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzila/subscriptions","organizations_url":"https://api.github.com/users/jzila/orgs","repos_url":"https://api.github.com/users/jzila/repos","events_url":"https://api.github.com/users/jzila/events{/privacy}","received_events_url":"https://api.github.com/users/jzila/received_events","type":"User","site_admin":false},{"login":"songgao","id":255797,"avatar_url":"https://avatars3.githubusercontent.com/u/255797?v=4","gravatar_id":"","url":"https://api.github.com/users/songgao","html_url":"https://github.com/songgao","followers_url":"https://api.github.com/users/songgao/followers","following_url":"https://api.github.com/users/songgao/following{/other_user}","gists_url":"https://api.github.com/users/songgao/gists{/gist_id}","starred_url":"https://api.github.com/users/songgao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songgao/subscriptions","organizations_url":"https://api.github.com/users/songgao/orgs","repos_url":"https://api.github.com/users/songgao/repos","events_url":"https://api.github.com/users/songgao/events{/privacy}","received_events_url":"https://api.github.com/users/songgao/received_events","type":"User","site_admin":false},{"login":"akalin-keybase","id":13270622,"avatar_url":"https://avatars3.githubusercontent.com/u/13270622?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin-keybase","html_url":"https://github.com/akalin-keybase","followers_url":"https://api.github.com/users/akalin-keybase/followers","following_url":"https://api.github.com/users/akalin-keybase/following{/other_user}","gists_url":"https://api.github.com/users/akalin-keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin-keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin-keybase/subscriptions","organizations_url":"https://api.github.com/users/akalin-keybase/orgs","repos_url":"https://api.github.com/users/akalin-keybase/repos","events_url":"https://api.github.com/users/akalin-keybase/events{/privacy}","received_events_url":"https://api.github.com/users/akalin-keybase/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits","review_comments_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments","review_comment_url":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/a375bbaa852f7c4c5475526da029481d313d80e8","head":{"label":"keybase:strib/KBFS-2774-mount-redirector","ref":"strib/KBFS-2774-mount-redirector","sha":"a375bbaa852f7c4c5475526da029481d313d80e8","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T21:03:09Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48520,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"base":{"label":"keybase:master","ref":"master","sha":"478a58b55a4605e2abe8699e32adc066bf1df7ee","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T21:03:09Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48520,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496"},"issue":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496"},"comments":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments"},"review_comments":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments"},"review_comment":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits"},"statuses":{"href":"https://api.github.com/repos/keybase/kbfs/statuses/a375bbaa852f7c4c5475526da029481d313d80e8"}},"author_association":"CONTRIBUTOR"}},"public":true,"created_at":"2018-02-28T21:48:36Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7312673973","type":"PullRequestReviewCommentEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/comments/171395921","pull_request_review_id":100241825,"id":171395921,"diff_hunk":"@@ -0,0 +1,267 @@\n+// Copyright 2018 Keybase Inc. All rights reserved.\n+// Use of this source code is governed by a BSD\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"os/signal\"\n+\t\"os/user\"\n+\t\"path/filepath\"\n+\t\"runtime\"\n+\t\"sort\"\n+\t\"strconv\"\n+\t\"strings\"\n+\t\"sync\"\n+\t\"syscall\"\n+\t\"time\"\n+\n+\t\"bazil.org/fuse\"\n+\t\"bazil.org/fuse/fs\"\n+\t\"github.com/strib/gomounts\"\n+)\n+\n+var kbfusePath = fuse.OSXFUSEPaths{\n+\tDevicePrefix: \"/dev/kbfuse\",\n+\tLoad:         \"/Library/Filesystems/kbfuse.fs/Contents/Resources/load_kbfuse\",\n+\tMount:        \"/Library/Filesystems/kbfuse.fs/Contents/Resources/mount_kbfuse\",\n+\tDaemonVar:    \"MOUNT_KBFUSE_DAEMON_PATH\",\n+}\n+\n+const (\n+\tmountpointTimeout = 5 * time.Second\n+)\n+\n+type symlink struct {\n+\tlink string\n+}\n+\n+func (s symlink) Attr(ctx context.Context, a *fuse.Attr) (err error) {\n+\ta.Mode = os.ModeSymlink | a.Mode | 0555\n+\ta.Valid = 0\n+\treturn nil\n+}\n+\n+func (s symlink) Readlink(ctx context.Context, req *fuse.ReadlinkRequest) (\n+\tlink string, err error) {\n+\treturn s.link, nil\n+}\n+\n+type cacheEntry struct {\n+\tmountpoint string\n+\ttime       time.Time\n+}\n+\n+type root struct {\n+\tlock            sync.RWMutex\n+\tmountpointCache map[uint32]cacheEntry\n+}\n+\n+func newRoot() *root {\n+\treturn &root{\n+\t\tmountpointCache: make(map[uint32]cacheEntry),\n+\t}\n+}\n+\n+func (r *root) Root() (fs.Node, error) {\n+\treturn r, nil\n+}\n+\n+func (r *root) Attr(ctx context.Context, attr *fuse.Attr) error {\n+\tattr.Mode = os.ModeDir | 0555\n+\treturn nil\n+}\n+\n+func (r *root) getCachedMountpoint(uid uint32) string {\n+\tr.lock.RLock()\n+\tdefer r.lock.RUnlock()\n+\tentry, ok := r.mountpointCache[uid]\n+\tif !ok {\n+\t\treturn \"\"\n+\t}\n+\tnow := time.Now()\n+\tif now.Sub(entry.time) > mountpointTimeout {\n+\t\t// Don't bother deleting the entry, since the caller should\n+\t\t// just overwrite it.\n+\t\treturn \"\"\n+\t}\n+\treturn entry.mountpoint\n+}\n+\n+func (r *root) findKBFSMount(ctx context.Context) (\n+\tmountpoint string, err error) {\n+\tuid := ctx.Value(fs.CtxHeaderUIDKey).(uint32)\n+\t// Don't let the root see anything here; we don't want a symlink\n+\t// loop back to this mount.\n+\tif uid == 0 {\n+\t\treturn \"\", fuse.ENOENT\n+\t}\n+\n+\tmountpoint = r.getCachedMountpoint(uid)\n+\tif mountpoint != \"\" {\n+\t\treturn mountpoint, nil\n+\t}\n+\n+\tdefer func() {\n+\t\tif err != nil {\n+\t\t\treturn\n+\t\t}\n+\t\t// Cache the entry if we didn't hit an error.\n+\t\tr.lock.Lock()\n+\t\tdefer r.lock.Unlock()\n+\t\tr.mountpointCache[uid] = cacheEntry{\n+\t\t\tmountpoint: mountpoint,\n+\t\t\ttime:       time.Now(),\n+\t\t}\n+\t}()\n+\n+\tu, err := user.LookupId(strconv.FormatUint(uint64(uid), 10))\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\n+\tvols, err := gomounts.GetMountedVolumes()\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\tfuseType := \"fuse\"\n+\tif runtime.GOOS == \"darwin\" {\n+\t\tfuseType = \"kbfuse\"\n+\t}\n+\tvar fuseMountPoints []string\n+\tfor _, v := range vols {\n+\t\tif v.Type != fuseType {\n+\t\t\tcontinue\n+\t\t}\n+\t\tif v.Owner != u.Uid {\n+\t\t\tcontinue\n+\t\t}\n+\t\tfuseMountPoints = append(fuseMountPoints, v.Path)\n+\t}\n+\n+\tif len(fuseMountPoints) == 0 {\n+\t\treturn \"\", fuse.ENOENT\n+\t}\n+\tif len(fuseMountPoints) == 1 {\n+\t\treturn fuseMountPoints[0], nil\n+\t}\n+\n+\t// If there is more than one, pick the first one alphabetically\n+\t// that has \"keybase\" in the path.\n+\tsort.Strings(fuseMountPoints)\n+\tfor _, mp := range fuseMountPoints {\n+\t\t// TODO: a better regexp that will rule out keybase.staging if\n+\t\t// we're in prod mode, etc.\n+\t\tif !strings.Contains(mp, \"keybase\") {\n+\t\t\tcontinue\n+\t\t}\n+\t\t// Double-check that this is a real KBFS mount.\n+\t\tif _, err := os.Stat(filepath.Join(mp, \".kbfs_error\")); err != nil {\n+\t\t\tcontinue\n+\t\t}\n+\t\treturn mp, nil\n+\t}\n+\n+\t// Give up and return the first one.\n+\treturn fuseMountPoints[0], nil\n+}\n+\n+func (r *root) ReadDirAll(ctx context.Context) ([]fuse.Dirent, error) {\n+\t_, err := r.findKBFSMount(ctx)\n+\tif err != nil {\n+\t\tif err == fuse.ENOENT {\n+\t\t\treturn []fuse.Dirent{}, nil\n+\t\t} else {\n+\t\t\treturn []fuse.Dirent{}, err\n+\t\t}\n+\t}\n+\n+\t// TODO: show the `kbfs.error.txt\" and \"kbfs.nologin.txt\" files if\n+\t// they exist?  As root, it is hard to figure out if they're\n+\t// there, though.\n+\treturn []fuse.Dirent{\n+\t\t{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"private\",\n+\t\t},\n+\t\t{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"public\",\n+\t\t},\n+\t\tfuse.Dirent{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"team\",\n+\t\t},\n+\t}, nil\n+}\n+\n+func (r *root) Lookup(\n+\tctx context.Context, req *fuse.LookupRequest, resp *fuse.LookupResponse) (\n+\tn fs.Node, err error) {\n+\tmountpoint, err := r.findKBFSMount(ctx)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tresp.EntryValid = 0\n+\tswitch req.Name {\n+\tcase \"private\", \"public\", \"team\", \".kbfs_error\", \".kbfs_metrics\",\n+\t\t\".kbfs_profiles\", \".kbfs_reset_caches\", \".kbfs_status\",\n+\t\t\"kbfs.error.txt\", \"kbfs.nologin.txt\", \".kbfs_enable_auto_journals\",\n+\t\t\".kbfs_disable_auto_journals\", \".kbfs_enable_block_prefetching\",\n+\t\t\".kbfs_disable_block_prefetching\", \".kbfs_enable_debug_server\",\n+\t\t\".kbfs_disable_debug_server\":\n+\t\treturn symlink{filepath.Join(mountpoint, req.Name)}, nil\n+\t}\n+\treturn nil, fuse.ENOENT\n+}\n+\n+func main() {\n+\tcurrUser, err := user.Current()\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\tif currUser.Uid != \"0\" {\n+\t\truntime.LockOSThread()\n+\t\t_, _, errNo := syscall.Syscall(syscall.SYS_SETUID, 0, 0, 0)","path":"redirector/go/main.go","position":228,"original_position":229,"commit_id":"a375bbaa852f7c4c5475526da029481d313d80e8","original_commit_id":"4a9c54931293f10b5568f92acdec99a7e74547c5","user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"body":"Another more trivial Go program seems to work just fine with the suid flag. (I just had it create a file in the current directory. Works in root-owned directories without `sudo`.)","created_at":"2018-02-28T21:47:43Z","updated_at":"2018-02-28T21:47:43Z","html_url":"https://github.com/keybase/kbfs/pull/1496#discussion_r171395921","pull_request_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","author_association":"CONTRIBUTOR","_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments/171395921"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496#discussion_r171395921"},"pull_request":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"}},"in_reply_to_id":171385042},"pull_request":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","id":172070599,"html_url":"https://github.com/keybase/kbfs/pull/1496","diff_url":"https://github.com/keybase/kbfs/pull/1496.diff","patch_url":"https://github.com/keybase/kbfs/pull/1496.patch","issue_url":"https://api.github.com/repos/keybase/kbfs/issues/1496","number":1496,"state":"open","locked":false,"title":"redirector: a Go implementation for the root redirector","user":{"login":"strib","id":8516691,"avatar_url":"https://avatars0.githubusercontent.com/u/8516691?v=4","gravatar_id":"","url":"https://api.github.com/users/strib","html_url":"https://github.com/strib","followers_url":"https://api.github.com/users/strib/followers","following_url":"https://api.github.com/users/strib/following{/other_user}","gists_url":"https://api.github.com/users/strib/gists{/gist_id}","starred_url":"https://api.github.com/users/strib/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/strib/subscriptions","organizations_url":"https://api.github.com/users/strib/orgs","repos_url":"https://api.github.com/users/strib/repos","events_url":"https://api.github.com/users/strib/events{/privacy}","received_events_url":"https://api.github.com/users/strib/received_events","type":"User","site_admin":false},"body":"This implementation of the root redirector will likely be used for macOS, at least until we figure out the kbfuse+Rust situation.\r\n\r\nNote that I needed some new bazil.org/fuse options, so I forked it to github.comkeybase/fuse and added two new features:\r\n* A NoBrowse() option that keeps the redirector from showing up in the Finder (instead, the specific user's mount will show up).\r\n* Adding the requesting user's UID to the context for every request, since `ReadDirAll` needs to know whether the requesting user has a valid mountpoint or not.  The bazil.org/fuse interface for `ReadDirAll` doesn't pass this down, so putting it in the context seemed like the easiest option for now.\r\n\r\nIssue: KBFS-2774","created_at":"2018-02-28T20:58:07Z","updated_at":"2018-02-28T21:47:43Z","closed_at":null,"merged_at":null,"merge_commit_sha":"437c5c76f895a2fc4092ddecb665a8ea1424e823","assignee":null,"assignees":[],"requested_reviewers":[{"login":"jzila","id":59594,"avatar_url":"https://avatars1.githubusercontent.com/u/59594?v=4","gravatar_id":"","url":"https://api.github.com/users/jzila","html_url":"https://github.com/jzila","followers_url":"https://api.github.com/users/jzila/followers","following_url":"https://api.github.com/users/jzila/following{/other_user}","gists_url":"https://api.github.com/users/jzila/gists{/gist_id}","starred_url":"https://api.github.com/users/jzila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzila/subscriptions","organizations_url":"https://api.github.com/users/jzila/orgs","repos_url":"https://api.github.com/users/jzila/repos","events_url":"https://api.github.com/users/jzila/events{/privacy}","received_events_url":"https://api.github.com/users/jzila/received_events","type":"User","site_admin":false},{"login":"songgao","id":255797,"avatar_url":"https://avatars3.githubusercontent.com/u/255797?v=4","gravatar_id":"","url":"https://api.github.com/users/songgao","html_url":"https://github.com/songgao","followers_url":"https://api.github.com/users/songgao/followers","following_url":"https://api.github.com/users/songgao/following{/other_user}","gists_url":"https://api.github.com/users/songgao/gists{/gist_id}","starred_url":"https://api.github.com/users/songgao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songgao/subscriptions","organizations_url":"https://api.github.com/users/songgao/orgs","repos_url":"https://api.github.com/users/songgao/repos","events_url":"https://api.github.com/users/songgao/events{/privacy}","received_events_url":"https://api.github.com/users/songgao/received_events","type":"User","site_admin":false},{"login":"akalin-keybase","id":13270622,"avatar_url":"https://avatars3.githubusercontent.com/u/13270622?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin-keybase","html_url":"https://github.com/akalin-keybase","followers_url":"https://api.github.com/users/akalin-keybase/followers","following_url":"https://api.github.com/users/akalin-keybase/following{/other_user}","gists_url":"https://api.github.com/users/akalin-keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin-keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin-keybase/subscriptions","organizations_url":"https://api.github.com/users/akalin-keybase/orgs","repos_url":"https://api.github.com/users/akalin-keybase/repos","events_url":"https://api.github.com/users/akalin-keybase/events{/privacy}","received_events_url":"https://api.github.com/users/akalin-keybase/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits","review_comments_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments","review_comment_url":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/a375bbaa852f7c4c5475526da029481d313d80e8","head":{"label":"keybase:strib/KBFS-2774-mount-redirector","ref":"strib/KBFS-2774-mount-redirector","sha":"a375bbaa852f7c4c5475526da029481d313d80e8","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T21:03:09Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48520,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"base":{"label":"keybase:master","ref":"master","sha":"478a58b55a4605e2abe8699e32adc066bf1df7ee","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T21:03:09Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48520,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496"},"issue":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496"},"comments":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments"},"review_comments":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments"},"review_comment":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits"},"statuses":{"href":"https://api.github.com/repos/keybase/kbfs/statuses/a375bbaa852f7c4c5475526da029481d313d80e8"}},"author_association":"CONTRIBUTOR"}},"public":true,"created_at":"2018-02-28T21:47:43Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7312668269","type":"WatchEvent","actor":{"id":1144310,"login":"ajvb","display_login":"ajvb","gravatar_id":"","url":"https://api.github.com/users/ajvb","avatar_url":"https://avatars.githubusercontent.com/u/1144310?"},"repo":{"id":38980369,"name":"hoodie/toastify","url":"https://api.github.com/repos/hoodie/toastify"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-28T21:46:34Z"},{"id":"7312646812","type":"PullRequestReviewCommentEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/comments/171394506","pull_request_review_id":100240041,"id":171394506,"diff_hunk":"@@ -0,0 +1,267 @@\n+// Copyright 2018 Keybase Inc. All rights reserved.\n+// Use of this source code is governed by a BSD\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"os/signal\"\n+\t\"os/user\"\n+\t\"path/filepath\"\n+\t\"runtime\"\n+\t\"sort\"\n+\t\"strconv\"\n+\t\"strings\"\n+\t\"sync\"\n+\t\"syscall\"\n+\t\"time\"\n+\n+\t\"bazil.org/fuse\"\n+\t\"bazil.org/fuse/fs\"\n+\t\"github.com/strib/gomounts\"\n+)\n+\n+var kbfusePath = fuse.OSXFUSEPaths{\n+\tDevicePrefix: \"/dev/kbfuse\",\n+\tLoad:         \"/Library/Filesystems/kbfuse.fs/Contents/Resources/load_kbfuse\",\n+\tMount:        \"/Library/Filesystems/kbfuse.fs/Contents/Resources/mount_kbfuse\",\n+\tDaemonVar:    \"MOUNT_KBFUSE_DAEMON_PATH\",\n+}\n+\n+const (\n+\tmountpointTimeout = 5 * time.Second\n+)\n+\n+type symlink struct {\n+\tlink string\n+}\n+\n+func (s symlink) Attr(ctx context.Context, a *fuse.Attr) (err error) {\n+\ta.Mode = os.ModeSymlink | a.Mode | 0555\n+\ta.Valid = 0\n+\treturn nil\n+}\n+\n+func (s symlink) Readlink(ctx context.Context, req *fuse.ReadlinkRequest) (\n+\tlink string, err error) {\n+\treturn s.link, nil\n+}\n+\n+type cacheEntry struct {\n+\tmountpoint string\n+\ttime       time.Time\n+}\n+\n+type root struct {\n+\tlock            sync.RWMutex\n+\tmountpointCache map[uint32]cacheEntry\n+}\n+\n+func newRoot() *root {\n+\treturn &root{\n+\t\tmountpointCache: make(map[uint32]cacheEntry),\n+\t}\n+}\n+\n+func (r *root) Root() (fs.Node, error) {\n+\treturn r, nil\n+}\n+\n+func (r *root) Attr(ctx context.Context, attr *fuse.Attr) error {\n+\tattr.Mode = os.ModeDir | 0555\n+\treturn nil\n+}\n+\n+func (r *root) getCachedMountpoint(uid uint32) string {\n+\tr.lock.RLock()\n+\tdefer r.lock.RUnlock()\n+\tentry, ok := r.mountpointCache[uid]\n+\tif !ok {\n+\t\treturn \"\"\n+\t}\n+\tnow := time.Now()\n+\tif now.Sub(entry.time) > mountpointTimeout {\n+\t\t// Don't bother deleting the entry, since the caller should\n+\t\t// just overwrite it.\n+\t\treturn \"\"\n+\t}\n+\treturn entry.mountpoint\n+}\n+\n+func (r *root) findKBFSMount(ctx context.Context) (\n+\tmountpoint string, err error) {\n+\tuid := ctx.Value(fs.CtxHeaderUIDKey).(uint32)\n+\t// Don't let the root see anything here; we don't want a symlink\n+\t// loop back to this mount.\n+\tif uid == 0 {\n+\t\treturn \"\", fuse.ENOENT\n+\t}\n+\n+\tmountpoint = r.getCachedMountpoint(uid)\n+\tif mountpoint != \"\" {\n+\t\treturn mountpoint, nil\n+\t}\n+\n+\tdefer func() {\n+\t\tif err != nil {\n+\t\t\treturn\n+\t\t}\n+\t\t// Cache the entry if we didn't hit an error.\n+\t\tr.lock.Lock()\n+\t\tdefer r.lock.Unlock()\n+\t\tr.mountpointCache[uid] = cacheEntry{\n+\t\t\tmountpoint: mountpoint,\n+\t\t\ttime:       time.Now(),\n+\t\t}\n+\t}()\n+\n+\tu, err := user.LookupId(strconv.FormatUint(uint64(uid), 10))\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\n+\tvols, err := gomounts.GetMountedVolumes()\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\tfuseType := \"fuse\"\n+\tif runtime.GOOS == \"darwin\" {\n+\t\tfuseType = \"kbfuse\"\n+\t}\n+\tvar fuseMountPoints []string\n+\tfor _, v := range vols {\n+\t\tif v.Type != fuseType {\n+\t\t\tcontinue\n+\t\t}\n+\t\tif v.Owner != u.Uid {\n+\t\t\tcontinue\n+\t\t}\n+\t\tfuseMountPoints = append(fuseMountPoints, v.Path)\n+\t}\n+\n+\tif len(fuseMountPoints) == 0 {\n+\t\treturn \"\", fuse.ENOENT\n+\t}\n+\tif len(fuseMountPoints) == 1 {\n+\t\treturn fuseMountPoints[0], nil\n+\t}\n+\n+\t// If there is more than one, pick the first one alphabetically\n+\t// that has \"keybase\" in the path.\n+\tsort.Strings(fuseMountPoints)\n+\tfor _, mp := range fuseMountPoints {\n+\t\t// TODO: a better regexp that will rule out keybase.staging if\n+\t\t// we're in prod mode, etc.\n+\t\tif !strings.Contains(mp, \"keybase\") {\n+\t\t\tcontinue\n+\t\t}\n+\t\t// Double-check that this is a real KBFS mount.\n+\t\tif _, err := os.Stat(filepath.Join(mp, \".kbfs_error\")); err != nil {\n+\t\t\tcontinue\n+\t\t}\n+\t\treturn mp, nil\n+\t}\n+\n+\t// Give up and return the first one.\n+\treturn fuseMountPoints[0], nil\n+}\n+\n+func (r *root) ReadDirAll(ctx context.Context) ([]fuse.Dirent, error) {\n+\t_, err := r.findKBFSMount(ctx)\n+\tif err != nil {\n+\t\tif err == fuse.ENOENT {\n+\t\t\treturn []fuse.Dirent{}, nil\n+\t\t} else {\n+\t\t\treturn []fuse.Dirent{}, err\n+\t\t}\n+\t}\n+\n+\t// TODO: show the `kbfs.error.txt\" and \"kbfs.nologin.txt\" files if\n+\t// they exist?  As root, it is hard to figure out if they're\n+\t// there, though.\n+\treturn []fuse.Dirent{\n+\t\t{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"private\",\n+\t\t},\n+\t\t{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"public\",\n+\t\t},\n+\t\tfuse.Dirent{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"team\",\n+\t\t},\n+\t}, nil\n+}\n+\n+func (r *root) Lookup(\n+\tctx context.Context, req *fuse.LookupRequest, resp *fuse.LookupResponse) (\n+\tn fs.Node, err error) {\n+\tmountpoint, err := r.findKBFSMount(ctx)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tresp.EntryValid = 0\n+\tswitch req.Name {\n+\tcase \"private\", \"public\", \"team\", \".kbfs_error\", \".kbfs_metrics\",\n+\t\t\".kbfs_profiles\", \".kbfs_reset_caches\", \".kbfs_status\",\n+\t\t\"kbfs.error.txt\", \"kbfs.nologin.txt\", \".kbfs_enable_auto_journals\",\n+\t\t\".kbfs_disable_auto_journals\", \".kbfs_enable_block_prefetching\",\n+\t\t\".kbfs_disable_block_prefetching\", \".kbfs_enable_debug_server\",\n+\t\t\".kbfs_disable_debug_server\":\n+\t\treturn symlink{filepath.Join(mountpoint, req.Name)}, nil\n+\t}\n+\treturn nil, fuse.ENOENT\n+}\n+\n+func main() {\n+\tcurrUser, err := user.Current()\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\tif currUser.Uid != \"0\" {\n+\t\truntime.LockOSThread()\n+\t\t_, _, errNo := syscall.Syscall(syscall.SYS_SETUID, 0, 0, 0)","path":"redirector/go/main.go","position":228,"original_position":229,"commit_id":"a375bbaa852f7c4c5475526da029481d313d80e8","original_commit_id":"4a9c54931293f10b5568f92acdec99a7e74547c5","user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"body":"Oof, why does this work with a Rust binary but not a Go binary? I just rechecked that it does. (I wasn't able to use `/tmp` for everything though, because it's a `nosuid` mount on my system. Hopefully that doesn't matter here.)","created_at":"2018-02-28T21:42:05Z","updated_at":"2018-02-28T21:42:05Z","html_url":"https://github.com/keybase/kbfs/pull/1496#discussion_r171394506","pull_request_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","author_association":"CONTRIBUTOR","_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments/171394506"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496#discussion_r171394506"},"pull_request":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"}},"in_reply_to_id":171385042},"pull_request":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","id":172070599,"html_url":"https://github.com/keybase/kbfs/pull/1496","diff_url":"https://github.com/keybase/kbfs/pull/1496.diff","patch_url":"https://github.com/keybase/kbfs/pull/1496.patch","issue_url":"https://api.github.com/repos/keybase/kbfs/issues/1496","number":1496,"state":"open","locked":false,"title":"redirector: a Go implementation for the root redirector","user":{"login":"strib","id":8516691,"avatar_url":"https://avatars0.githubusercontent.com/u/8516691?v=4","gravatar_id":"","url":"https://api.github.com/users/strib","html_url":"https://github.com/strib","followers_url":"https://api.github.com/users/strib/followers","following_url":"https://api.github.com/users/strib/following{/other_user}","gists_url":"https://api.github.com/users/strib/gists{/gist_id}","starred_url":"https://api.github.com/users/strib/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/strib/subscriptions","organizations_url":"https://api.github.com/users/strib/orgs","repos_url":"https://api.github.com/users/strib/repos","events_url":"https://api.github.com/users/strib/events{/privacy}","received_events_url":"https://api.github.com/users/strib/received_events","type":"User","site_admin":false},"body":"This implementation of the root redirector will likely be used for macOS, at least until we figure out the kbfuse+Rust situation.\r\n\r\nNote that I needed some new bazil.org/fuse options, so I forked it to github.comkeybase/fuse and added two new features:\r\n* A NoBrowse() option that keeps the redirector from showing up in the Finder (instead, the specific user's mount will show up).\r\n* Adding the requesting user's UID to the context for every request, since `ReadDirAll` needs to know whether the requesting user has a valid mountpoint or not.  The bazil.org/fuse interface for `ReadDirAll` doesn't pass this down, so putting it in the context seemed like the easiest option for now.\r\n\r\nIssue: KBFS-2774","created_at":"2018-02-28T20:58:07Z","updated_at":"2018-02-28T21:42:05Z","closed_at":null,"merged_at":null,"merge_commit_sha":"437c5c76f895a2fc4092ddecb665a8ea1424e823","assignee":null,"assignees":[],"requested_reviewers":[{"login":"jzila","id":59594,"avatar_url":"https://avatars1.githubusercontent.com/u/59594?v=4","gravatar_id":"","url":"https://api.github.com/users/jzila","html_url":"https://github.com/jzila","followers_url":"https://api.github.com/users/jzila/followers","following_url":"https://api.github.com/users/jzila/following{/other_user}","gists_url":"https://api.github.com/users/jzila/gists{/gist_id}","starred_url":"https://api.github.com/users/jzila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzila/subscriptions","organizations_url":"https://api.github.com/users/jzila/orgs","repos_url":"https://api.github.com/users/jzila/repos","events_url":"https://api.github.com/users/jzila/events{/privacy}","received_events_url":"https://api.github.com/users/jzila/received_events","type":"User","site_admin":false},{"login":"songgao","id":255797,"avatar_url":"https://avatars3.githubusercontent.com/u/255797?v=4","gravatar_id":"","url":"https://api.github.com/users/songgao","html_url":"https://github.com/songgao","followers_url":"https://api.github.com/users/songgao/followers","following_url":"https://api.github.com/users/songgao/following{/other_user}","gists_url":"https://api.github.com/users/songgao/gists{/gist_id}","starred_url":"https://api.github.com/users/songgao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songgao/subscriptions","organizations_url":"https://api.github.com/users/songgao/orgs","repos_url":"https://api.github.com/users/songgao/repos","events_url":"https://api.github.com/users/songgao/events{/privacy}","received_events_url":"https://api.github.com/users/songgao/received_events","type":"User","site_admin":false},{"login":"akalin-keybase","id":13270622,"avatar_url":"https://avatars3.githubusercontent.com/u/13270622?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin-keybase","html_url":"https://github.com/akalin-keybase","followers_url":"https://api.github.com/users/akalin-keybase/followers","following_url":"https://api.github.com/users/akalin-keybase/following{/other_user}","gists_url":"https://api.github.com/users/akalin-keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin-keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin-keybase/subscriptions","organizations_url":"https://api.github.com/users/akalin-keybase/orgs","repos_url":"https://api.github.com/users/akalin-keybase/repos","events_url":"https://api.github.com/users/akalin-keybase/events{/privacy}","received_events_url":"https://api.github.com/users/akalin-keybase/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits","review_comments_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments","review_comment_url":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/a375bbaa852f7c4c5475526da029481d313d80e8","head":{"label":"keybase:strib/KBFS-2774-mount-redirector","ref":"strib/KBFS-2774-mount-redirector","sha":"a375bbaa852f7c4c5475526da029481d313d80e8","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T21:03:09Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48520,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"base":{"label":"keybase:master","ref":"master","sha":"478a58b55a4605e2abe8699e32adc066bf1df7ee","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T21:03:09Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48520,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496"},"issue":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496"},"comments":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments"},"review_comments":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments"},"review_comment":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits"},"statuses":{"href":"https://api.github.com/repos/keybase/kbfs/statuses/a375bbaa852f7c4c5475526da029481d313d80e8"}},"author_association":"CONTRIBUTOR"}},"public":true,"created_at":"2018-02-28T21:42:05Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7312520268","type":"PullRequestReviewCommentEvent","actor":{"id":8516691,"login":"strib","display_login":"strib","gravatar_id":"","url":"https://api.github.com/users/strib","avatar_url":"https://avatars.githubusercontent.com/u/8516691?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/comments/171387634","pull_request_review_id":100231841,"id":171387634,"diff_hunk":"@@ -0,0 +1,267 @@\n+// Copyright 2018 Keybase Inc. All rights reserved.\n+// Use of this source code is governed by a BSD\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"os/signal\"\n+\t\"os/user\"\n+\t\"path/filepath\"\n+\t\"runtime\"\n+\t\"sort\"\n+\t\"strconv\"\n+\t\"strings\"\n+\t\"sync\"\n+\t\"syscall\"\n+\t\"time\"\n+\n+\t\"bazil.org/fuse\"\n+\t\"bazil.org/fuse/fs\"\n+\t\"github.com/strib/gomounts\"\n+)\n+\n+var kbfusePath = fuse.OSXFUSEPaths{\n+\tDevicePrefix: \"/dev/kbfuse\",\n+\tLoad:         \"/Library/Filesystems/kbfuse.fs/Contents/Resources/load_kbfuse\",\n+\tMount:        \"/Library/Filesystems/kbfuse.fs/Contents/Resources/mount_kbfuse\",\n+\tDaemonVar:    \"MOUNT_KBFUSE_DAEMON_PATH\",\n+}\n+\n+const (\n+\tmountpointTimeout = 5 * time.Second\n+)\n+\n+type symlink struct {\n+\tlink string\n+}\n+\n+func (s symlink) Attr(ctx context.Context, a *fuse.Attr) (err error) {\n+\ta.Mode = os.ModeSymlink | a.Mode | 0555\n+\ta.Valid = 0\n+\treturn nil\n+}\n+\n+func (s symlink) Readlink(ctx context.Context, req *fuse.ReadlinkRequest) (\n+\tlink string, err error) {\n+\treturn s.link, nil\n+}\n+\n+type cacheEntry struct {\n+\tmountpoint string\n+\ttime       time.Time\n+}\n+\n+type root struct {\n+\tlock            sync.RWMutex\n+\tmountpointCache map[uint32]cacheEntry\n+}\n+\n+func newRoot() *root {\n+\treturn &root{\n+\t\tmountpointCache: make(map[uint32]cacheEntry),\n+\t}\n+}\n+\n+func (r *root) Root() (fs.Node, error) {\n+\treturn r, nil\n+}\n+\n+func (r *root) Attr(ctx context.Context, attr *fuse.Attr) error {\n+\tattr.Mode = os.ModeDir | 0555\n+\treturn nil\n+}\n+\n+func (r *root) getCachedMountpoint(uid uint32) string {\n+\tr.lock.RLock()\n+\tdefer r.lock.RUnlock()\n+\tentry, ok := r.mountpointCache[uid]\n+\tif !ok {\n+\t\treturn \"\"\n+\t}\n+\tnow := time.Now()\n+\tif now.Sub(entry.time) > mountpointTimeout {\n+\t\t// Don't bother deleting the entry, since the caller should\n+\t\t// just overwrite it.\n+\t\treturn \"\"\n+\t}\n+\treturn entry.mountpoint\n+}\n+\n+func (r *root) findKBFSMount(ctx context.Context) (\n+\tmountpoint string, err error) {\n+\tuid := ctx.Value(fs.CtxHeaderUIDKey).(uint32)\n+\t// Don't let the root see anything here; we don't want a symlink\n+\t// loop back to this mount.\n+\tif uid == 0 {\n+\t\treturn \"\", fuse.ENOENT\n+\t}\n+\n+\tmountpoint = r.getCachedMountpoint(uid)\n+\tif mountpoint != \"\" {\n+\t\treturn mountpoint, nil\n+\t}\n+\n+\tdefer func() {\n+\t\tif err != nil {\n+\t\t\treturn\n+\t\t}\n+\t\t// Cache the entry if we didn't hit an error.\n+\t\tr.lock.Lock()\n+\t\tdefer r.lock.Unlock()\n+\t\tr.mountpointCache[uid] = cacheEntry{\n+\t\t\tmountpoint: mountpoint,\n+\t\t\ttime:       time.Now(),\n+\t\t}\n+\t}()\n+\n+\tu, err := user.LookupId(strconv.FormatUint(uint64(uid), 10))\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\n+\tvols, err := gomounts.GetMountedVolumes()\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\tfuseType := \"fuse\"\n+\tif runtime.GOOS == \"darwin\" {\n+\t\tfuseType = \"kbfuse\"\n+\t}\n+\tvar fuseMountPoints []string\n+\tfor _, v := range vols {\n+\t\tif v.Type != fuseType {\n+\t\t\tcontinue\n+\t\t}\n+\t\tif v.Owner != u.Uid {\n+\t\t\tcontinue\n+\t\t}\n+\t\tfuseMountPoints = append(fuseMountPoints, v.Path)\n+\t}\n+\n+\tif len(fuseMountPoints) == 0 {\n+\t\treturn \"\", fuse.ENOENT\n+\t}\n+\tif len(fuseMountPoints) == 1 {\n+\t\treturn fuseMountPoints[0], nil\n+\t}\n+\n+\t// If there is more than one, pick the first one alphabetically\n+\t// that has \"keybase\" in the path.\n+\tsort.Strings(fuseMountPoints)\n+\tfor _, mp := range fuseMountPoints {\n+\t\t// TODO: a better regexp that will rule out keybase.staging if\n+\t\t// we're in prod mode, etc.\n+\t\tif !strings.Contains(mp, \"keybase\") {\n+\t\t\tcontinue\n+\t\t}\n+\t\t// Double-check that this is a real KBFS mount.\n+\t\tif _, err := os.Stat(filepath.Join(mp, \".kbfs_error\")); err != nil {\n+\t\t\tcontinue\n+\t\t}\n+\t\treturn mp, nil\n+\t}\n+\n+\t// Give up and return the first one.\n+\treturn fuseMountPoints[0], nil\n+}\n+\n+func (r *root) ReadDirAll(ctx context.Context) ([]fuse.Dirent, error) {\n+\t_, err := r.findKBFSMount(ctx)\n+\tif err != nil {\n+\t\tif err == fuse.ENOENT {\n+\t\t\treturn []fuse.Dirent{}, nil\n+\t\t} else {\n+\t\t\treturn []fuse.Dirent{}, err\n+\t\t}\n+\t}\n+\n+\t// TODO: show the `kbfs.error.txt\" and \"kbfs.nologin.txt\" files if\n+\t// they exist?  As root, it is hard to figure out if they're\n+\t// there, though.\n+\treturn []fuse.Dirent{\n+\t\t{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"private\",\n+\t\t},\n+\t\t{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"public\",\n+\t\t},\n+\t\tfuse.Dirent{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"team\",\n+\t\t},\n+\t}, nil\n+}\n+\n+func (r *root) Lookup(\n+\tctx context.Context, req *fuse.LookupRequest, resp *fuse.LookupResponse) (\n+\tn fs.Node, err error) {\n+\tmountpoint, err := r.findKBFSMount(ctx)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tresp.EntryValid = 0\n+\tswitch req.Name {\n+\tcase \"private\", \"public\", \"team\", \".kbfs_error\", \".kbfs_metrics\",\n+\t\t\".kbfs_profiles\", \".kbfs_reset_caches\", \".kbfs_status\",\n+\t\t\"kbfs.error.txt\", \"kbfs.nologin.txt\", \".kbfs_enable_auto_journals\",\n+\t\t\".kbfs_disable_auto_journals\", \".kbfs_enable_block_prefetching\",\n+\t\t\".kbfs_disable_block_prefetching\", \".kbfs_enable_debug_server\",\n+\t\t\".kbfs_disable_debug_server\":\n+\t\treturn symlink{filepath.Join(mountpoint, req.Name)}, nil\n+\t}\n+\treturn nil, fuse.ENOENT\n+}\n+\n+func main() {\n+\tcurrUser, err := user.Current()\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\tif currUser.Uid != \"0\" {\n+\t\truntime.LockOSThread()\n+\t\t_, _, errNo := syscall.Syscall(syscall.SYS_SETUID, 0, 0, 0)","path":"redirector/go/main.go","position":228,"original_position":229,"commit_id":"a375bbaa852f7c4c5475526da029481d313d80e8","original_commit_id":"4a9c54931293f10b5568f92acdec99a7e74547c5","user":{"login":"strib","id":8516691,"avatar_url":"https://avatars0.githubusercontent.com/u/8516691?v=4","gravatar_id":"","url":"https://api.github.com/users/strib","html_url":"https://github.com/strib","followers_url":"https://api.github.com/users/strib/followers","following_url":"https://api.github.com/users/strib/following{/other_user}","gists_url":"https://api.github.com/users/strib/gists{/gist_id}","starred_url":"https://api.github.com/users/strib/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/strib/subscriptions","organizations_url":"https://api.github.com/users/strib/orgs","repos_url":"https://api.github.com/users/strib/repos","events_url":"https://api.github.com/users/strib/events{/privacy}","received_events_url":"https://api.github.com/users/strib/received_events","type":"User","site_admin":false},"body":"@oconnor663: without this call, if you do `./redirector` as a regular user (without using `sudo`), you get an error.  I.e.:\r\n\r\n```sh\r\n$ go build\r\n$ cp go /tmp/redirector\r\n$ cd /tmp/\r\n$ mkdir keybase\r\n$ sudo chown root:root keybase\r\n$ sudo chmod 755 keybase\r\n$ sudo chown root:root redirector\r\n$ sudo chmod 4755 redirector\r\n$ ./redirector /tmp/keybase \r\n2018/02/28 13:15:29 mount helper error: fusermount: user has no write access to mountpoint /tmp/keybase\r\nMount error, exiting cleanly: fusermount: exit status 1\r\n```","created_at":"2018-02-28T21:16:44Z","updated_at":"2018-02-28T21:16:44Z","html_url":"https://github.com/keybase/kbfs/pull/1496#discussion_r171387634","pull_request_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","author_association":"CONTRIBUTOR","_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments/171387634"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496#discussion_r171387634"},"pull_request":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"}},"in_reply_to_id":171385042},"pull_request":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","id":172070599,"html_url":"https://github.com/keybase/kbfs/pull/1496","diff_url":"https://github.com/keybase/kbfs/pull/1496.diff","patch_url":"https://github.com/keybase/kbfs/pull/1496.patch","issue_url":"https://api.github.com/repos/keybase/kbfs/issues/1496","number":1496,"state":"open","locked":false,"title":"redirector: a Go implementation for the root redirector","user":{"login":"strib","id":8516691,"avatar_url":"https://avatars0.githubusercontent.com/u/8516691?v=4","gravatar_id":"","url":"https://api.github.com/users/strib","html_url":"https://github.com/strib","followers_url":"https://api.github.com/users/strib/followers","following_url":"https://api.github.com/users/strib/following{/other_user}","gists_url":"https://api.github.com/users/strib/gists{/gist_id}","starred_url":"https://api.github.com/users/strib/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/strib/subscriptions","organizations_url":"https://api.github.com/users/strib/orgs","repos_url":"https://api.github.com/users/strib/repos","events_url":"https://api.github.com/users/strib/events{/privacy}","received_events_url":"https://api.github.com/users/strib/received_events","type":"User","site_admin":false},"body":"This implementation of the root redirector will likely be used for macOS, at least until we figure out the kbfuse+Rust situation.\r\n\r\nNote that I needed some new bazil.org/fuse options, so I forked it to github.comkeybase/fuse and added two new features:\r\n* A NoBrowse() option that keeps the redirector from showing up in the Finder (instead, the specific user's mount will show up).\r\n* Adding the requesting user's UID to the context for every request, since `ReadDirAll` needs to know whether the requesting user has a valid mountpoint or not.  The bazil.org/fuse interface for `ReadDirAll` doesn't pass this down, so putting it in the context seemed like the easiest option for now.\r\n\r\nIssue: KBFS-2774","created_at":"2018-02-28T20:58:07Z","updated_at":"2018-02-28T21:16:44Z","closed_at":null,"merged_at":null,"merge_commit_sha":"437c5c76f895a2fc4092ddecb665a8ea1424e823","assignee":null,"assignees":[],"requested_reviewers":[{"login":"jzila","id":59594,"avatar_url":"https://avatars1.githubusercontent.com/u/59594?v=4","gravatar_id":"","url":"https://api.github.com/users/jzila","html_url":"https://github.com/jzila","followers_url":"https://api.github.com/users/jzila/followers","following_url":"https://api.github.com/users/jzila/following{/other_user}","gists_url":"https://api.github.com/users/jzila/gists{/gist_id}","starred_url":"https://api.github.com/users/jzila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzila/subscriptions","organizations_url":"https://api.github.com/users/jzila/orgs","repos_url":"https://api.github.com/users/jzila/repos","events_url":"https://api.github.com/users/jzila/events{/privacy}","received_events_url":"https://api.github.com/users/jzila/received_events","type":"User","site_admin":false},{"login":"songgao","id":255797,"avatar_url":"https://avatars3.githubusercontent.com/u/255797?v=4","gravatar_id":"","url":"https://api.github.com/users/songgao","html_url":"https://github.com/songgao","followers_url":"https://api.github.com/users/songgao/followers","following_url":"https://api.github.com/users/songgao/following{/other_user}","gists_url":"https://api.github.com/users/songgao/gists{/gist_id}","starred_url":"https://api.github.com/users/songgao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songgao/subscriptions","organizations_url":"https://api.github.com/users/songgao/orgs","repos_url":"https://api.github.com/users/songgao/repos","events_url":"https://api.github.com/users/songgao/events{/privacy}","received_events_url":"https://api.github.com/users/songgao/received_events","type":"User","site_admin":false},{"login":"akalin-keybase","id":13270622,"avatar_url":"https://avatars3.githubusercontent.com/u/13270622?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin-keybase","html_url":"https://github.com/akalin-keybase","followers_url":"https://api.github.com/users/akalin-keybase/followers","following_url":"https://api.github.com/users/akalin-keybase/following{/other_user}","gists_url":"https://api.github.com/users/akalin-keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin-keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin-keybase/subscriptions","organizations_url":"https://api.github.com/users/akalin-keybase/orgs","repos_url":"https://api.github.com/users/akalin-keybase/repos","events_url":"https://api.github.com/users/akalin-keybase/events{/privacy}","received_events_url":"https://api.github.com/users/akalin-keybase/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits","review_comments_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments","review_comment_url":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/a375bbaa852f7c4c5475526da029481d313d80e8","head":{"label":"keybase:strib/KBFS-2774-mount-redirector","ref":"strib/KBFS-2774-mount-redirector","sha":"a375bbaa852f7c4c5475526da029481d313d80e8","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T21:03:09Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48520,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"base":{"label":"keybase:master","ref":"master","sha":"478a58b55a4605e2abe8699e32adc066bf1df7ee","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T21:03:09Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48520,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496"},"issue":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496"},"comments":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments"},"review_comments":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments"},"review_comment":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits"},"statuses":{"href":"https://api.github.com/repos/keybase/kbfs/statuses/a375bbaa852f7c4c5475526da029481d313d80e8"}},"author_association":"CONTRIBUTOR"}},"public":true,"created_at":"2018-02-28T21:16:44Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7312512251","type":"IssuesEvent","actor":{"id":252280,"login":"mjallday","display_login":"mjallday","gravatar_id":"","url":"https://api.github.com/users/mjallday","avatar_url":"https://avatars.githubusercontent.com/u/252280?"},"repo":{"id":17025114,"name":"keybase/keybase-issues","url":"https://api.github.com/repos/keybase/keybase-issues"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/keybase/keybase-issues/issues/3195","repository_url":"https://api.github.com/repos/keybase/keybase-issues","labels_url":"https://api.github.com/repos/keybase/keybase-issues/issues/3195/labels{/name}","comments_url":"https://api.github.com/repos/keybase/keybase-issues/issues/3195/comments","events_url":"https://api.github.com/repos/keybase/keybase-issues/issues/3195/events","html_url":"https://github.com/keybase/keybase-issues/issues/3195","id":301185861,"number":3195,"title":"Error: Your public key appears corrupted (no header found)","user":{"login":"mjallday","id":252280,"avatar_url":"https://avatars0.githubusercontent.com/u/252280?v=4","gravatar_id":"","url":"https://api.github.com/users/mjallday","html_url":"https://github.com/mjallday","followers_url":"https://api.github.com/users/mjallday/followers","following_url":"https://api.github.com/users/mjallday/following{/other_user}","gists_url":"https://api.github.com/users/mjallday/gists{/gist_id}","starred_url":"https://api.github.com/users/mjallday/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjallday/subscriptions","organizations_url":"https://api.github.com/users/mjallday/orgs","repos_url":"https://api.github.com/users/mjallday/repos","events_url":"https://api.github.com/users/mjallday/events{/privacy}","received_events_url":"https://api.github.com/users/mjallday/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-28T21:15:06Z","updated_at":"2018-02-28T21:15:06Z","closed_at":null,"author_association":"NONE","body":"I'm getting this error when attempting to upload my public GPG key. I previously had the same key on keybase but it was expired.\r\n\r\nThis key appears freshly exported from GPG and looks something like\r\n\r\n```\r\n-----BEGIN PGP PUBLIC KEY BLOCK-----\r\n\r\nmQINBFKmKTkBEADEwkkP4B2KFD5at2PwSsdfVZaASdlmylQ4ZF9AeQzz5dy2woy1\r\n...\r\n-----END PGP PUBLIC KEY BLOCK-----\r\n```\r\n\r\nIf I export the private key it looks something like\r\n\r\n```\r\n-----BEGIN PGP PRIVATE KEY BLOCK-----\r\n\r\nlQdGBFK...\r\n\r\n-----END PGP PRIVATE KEY BLOCK-----\r\n```\r\n\r\nI initially thought this was something similar to #184 but this is a working key that I've been using with GPG since 2013 so I'm pretty sure it's valid. \r\n\r\nYou can find the updated key I'm trying to use on mit key server - `E2804455` http://pgp.mit.edu/pks/lookup?search=E2804455&op=index\r\n\r\nWhen I look at the key it appears to not be expired, am I missing something?\r\n\r\n```\r\n➜ gpg -v < ~/Downloads/Marshall\\ Jones\\ \\(E2804455\\)\\ –\\ Public.asc\r\ngpg: WARNING: no command supplied.  Trying to guess what you mean ...\r\npub   rsa4096 2013-12-09 [SC] [expires: 2020-12-10]\r\n      50433C86AAD6968F3D288F98F439FD97E2804455\r\nuid           Marshall Jones <marshall@offby3.com>\r\nsig        F439FD97E2804455 2013-12-09   [selfsig]\r\nsig        F439FD97E2804455 2013-12-09   [selfsig]\r\nsig        F439FD97E2804455 2017-06-22   [selfsig]\r\nuid           Marshall Jones👨 <marshall.jones.1980@gmail.com>\r\nsig        F439FD97E2804455 2013-12-09   [selfsig]\r\nsig        F439FD97E2804455 2017-06-22   [selfsig]\r\nuid           Marshall Jones👨 <marshall@balancedpayments.com>\r\nsig        F439FD97E2804455 2013-12-09   [selfsig]\r\nrev        F439FD97E2804455 2017-06-22   [selfsig]\r\nsig        F439FD97E2804455 2017-06-22   [selfsig]\r\nuid           Marshall Jones👨 <marshall@vgs.io>\r\nsig        F439FD97E2804455 2015-04-30   [selfsig]\r\nsig        F439FD97E2804455 2017-06-22   [selfsig]\r\nuid           Marshall Jones <marshall@verygoodsecurity.com>\r\nsig        F439FD97E2804455 2016-06-07   [selfsig]\r\nsig        F439FD97E2804455 2017-06-22   [selfsig]\r\nsub   rsa4096 2013-12-09 [E] [expires: 2020-12-21]\r\nsig        F439FD97E2804455 2017-12-20   [keybind]\r\n➜  \r\n```"}},"public":true,"created_at":"2018-02-28T21:15:06Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7312477197","type":"ForkEvent","actor":{"id":14097,"login":"graydon","display_login":"graydon","gravatar_id":"","url":"https://api.github.com/users/graydon","avatar_url":"https://avatars.githubusercontent.com/u/14097?"},"repo":{"id":12255030,"name":"zuiderkwast/nanbox","url":"https://api.github.com/repos/zuiderkwast/nanbox"},"payload":{"forkee":{"id":123342675,"name":"nanbox","full_name":"graydon/nanbox","owner":{"login":"graydon","id":14097,"avatar_url":"https://avatars3.githubusercontent.com/u/14097?v=4","gravatar_id":"","url":"https://api.github.com/users/graydon","html_url":"https://github.com/graydon","followers_url":"https://api.github.com/users/graydon/followers","following_url":"https://api.github.com/users/graydon/following{/other_user}","gists_url":"https://api.github.com/users/graydon/gists{/gist_id}","starred_url":"https://api.github.com/users/graydon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/graydon/subscriptions","organizations_url":"https://api.github.com/users/graydon/orgs","repos_url":"https://api.github.com/users/graydon/repos","events_url":"https://api.github.com/users/graydon/events{/privacy}","received_events_url":"https://api.github.com/users/graydon/received_events","type":"User","site_admin":false},"private":false,"html_url":"https://github.com/graydon/nanbox","description":"NaN-boxing in C","fork":true,"url":"https://api.github.com/repos/graydon/nanbox","forks_url":"https://api.github.com/repos/graydon/nanbox/forks","keys_url":"https://api.github.com/repos/graydon/nanbox/keys{/key_id}","collaborators_url":"https://api.github.com/repos/graydon/nanbox/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/graydon/nanbox/teams","hooks_url":"https://api.github.com/repos/graydon/nanbox/hooks","issue_events_url":"https://api.github.com/repos/graydon/nanbox/issues/events{/number}","events_url":"https://api.github.com/repos/graydon/nanbox/events","assignees_url":"https://api.github.com/repos/graydon/nanbox/assignees{/user}","branches_url":"https://api.github.com/repos/graydon/nanbox/branches{/branch}","tags_url":"https://api.github.com/repos/graydon/nanbox/tags","blobs_url":"https://api.github.com/repos/graydon/nanbox/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/graydon/nanbox/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/graydon/nanbox/git/refs{/sha}","trees_url":"https://api.github.com/repos/graydon/nanbox/git/trees{/sha}","statuses_url":"https://api.github.com/repos/graydon/nanbox/statuses/{sha}","languages_url":"https://api.github.com/repos/graydon/nanbox/languages","stargazers_url":"https://api.github.com/repos/graydon/nanbox/stargazers","contributors_url":"https://api.github.com/repos/graydon/nanbox/contributors","subscribers_url":"https://api.github.com/repos/graydon/nanbox/subscribers","subscription_url":"https://api.github.com/repos/graydon/nanbox/subscription","commits_url":"https://api.github.com/repos/graydon/nanbox/commits{/sha}","git_commits_url":"https://api.github.com/repos/graydon/nanbox/git/commits{/sha}","comments_url":"https://api.github.com/repos/graydon/nanbox/comments{/number}","issue_comment_url":"https://api.github.com/repos/graydon/nanbox/issues/comments{/number}","contents_url":"https://api.github.com/repos/graydon/nanbox/contents/{+path}","compare_url":"https://api.github.com/repos/graydon/nanbox/compare/{base}...{head}","merges_url":"https://api.github.com/repos/graydon/nanbox/merges","archive_url":"https://api.github.com/repos/graydon/nanbox/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/graydon/nanbox/downloads","issues_url":"https://api.github.com/repos/graydon/nanbox/issues{/number}","pulls_url":"https://api.github.com/repos/graydon/nanbox/pulls{/number}","milestones_url":"https://api.github.com/repos/graydon/nanbox/milestones{/number}","notifications_url":"https://api.github.com/repos/graydon/nanbox/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/graydon/nanbox/labels{/name}","releases_url":"https://api.github.com/repos/graydon/nanbox/releases{/id}","deployments_url":"https://api.github.com/repos/graydon/nanbox/deployments","created_at":"2018-02-28T21:07:54Z","updated_at":"2018-02-28T21:07:53Z","pushed_at":"2013-09-11T20:08:38Z","git_url":"git://github.com/graydon/nanbox.git","ssh_url":"git@github.com:graydon/nanbox.git","clone_url":"https://github.com/graydon/nanbox.git","svn_url":"https://github.com/graydon/nanbox","homepage":null,"size":132,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":null,"forks":0,"open_issues":0,"watchers":0,"default_branch":"master","public":true}},"public":true,"created_at":"2018-02-28T21:07:55Z"},{"id":"7312477067","type":"WatchEvent","actor":{"id":14097,"login":"graydon","display_login":"graydon","gravatar_id":"","url":"https://api.github.com/users/graydon","avatar_url":"https://avatars.githubusercontent.com/u/14097?"},"repo":{"id":12255030,"name":"zuiderkwast/nanbox","url":"https://api.github.com/repos/zuiderkwast/nanbox"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-28T21:07:53Z"},{"id":"7312471313","type":"PullRequestReviewCommentEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"action":"created","comment":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/comments/171385042","pull_request_review_id":100228734,"id":171385042,"diff_hunk":"@@ -0,0 +1,267 @@\n+// Copyright 2018 Keybase Inc. All rights reserved.\n+// Use of this source code is governed by a BSD\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import (\n+\t\"context\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"os/signal\"\n+\t\"os/user\"\n+\t\"path/filepath\"\n+\t\"runtime\"\n+\t\"sort\"\n+\t\"strconv\"\n+\t\"strings\"\n+\t\"sync\"\n+\t\"syscall\"\n+\t\"time\"\n+\n+\t\"bazil.org/fuse\"\n+\t\"bazil.org/fuse/fs\"\n+\t\"github.com/strib/gomounts\"\n+)\n+\n+var kbfusePath = fuse.OSXFUSEPaths{\n+\tDevicePrefix: \"/dev/kbfuse\",\n+\tLoad:         \"/Library/Filesystems/kbfuse.fs/Contents/Resources/load_kbfuse\",\n+\tMount:        \"/Library/Filesystems/kbfuse.fs/Contents/Resources/mount_kbfuse\",\n+\tDaemonVar:    \"MOUNT_KBFUSE_DAEMON_PATH\",\n+}\n+\n+const (\n+\tmountpointTimeout = 5 * time.Second\n+)\n+\n+type symlink struct {\n+\tlink string\n+}\n+\n+func (s symlink) Attr(ctx context.Context, a *fuse.Attr) (err error) {\n+\ta.Mode = os.ModeSymlink | a.Mode | 0555\n+\ta.Valid = 0\n+\treturn nil\n+}\n+\n+func (s symlink) Readlink(ctx context.Context, req *fuse.ReadlinkRequest) (\n+\tlink string, err error) {\n+\treturn s.link, nil\n+}\n+\n+type cacheEntry struct {\n+\tmountpoint string\n+\ttime       time.Time\n+}\n+\n+type root struct {\n+\tlock            sync.RWMutex\n+\tmountpointCache map[uint32]cacheEntry\n+}\n+\n+func newRoot() *root {\n+\treturn &root{\n+\t\tmountpointCache: make(map[uint32]cacheEntry),\n+\t}\n+}\n+\n+func (r *root) Root() (fs.Node, error) {\n+\treturn r, nil\n+}\n+\n+func (r *root) Attr(ctx context.Context, attr *fuse.Attr) error {\n+\tattr.Mode = os.ModeDir | 0555\n+\treturn nil\n+}\n+\n+func (r *root) getCachedMountpoint(uid uint32) string {\n+\tr.lock.RLock()\n+\tdefer r.lock.RUnlock()\n+\tentry, ok := r.mountpointCache[uid]\n+\tif !ok {\n+\t\treturn \"\"\n+\t}\n+\tnow := time.Now()\n+\tif now.Sub(entry.time) > mountpointTimeout {\n+\t\t// Don't bother deleting the entry, since the caller should\n+\t\t// just overwrite it.\n+\t\treturn \"\"\n+\t}\n+\treturn entry.mountpoint\n+}\n+\n+func (r *root) findKBFSMount(ctx context.Context) (\n+\tmountpoint string, err error) {\n+\tuid := ctx.Value(fs.CtxHeaderUIDKey).(uint32)\n+\t// Don't let the root see anything here; we don't want a symlink\n+\t// loop back to this mount.\n+\tif uid == 0 {\n+\t\treturn \"\", fuse.ENOENT\n+\t}\n+\n+\tmountpoint = r.getCachedMountpoint(uid)\n+\tif mountpoint != \"\" {\n+\t\treturn mountpoint, nil\n+\t}\n+\n+\tdefer func() {\n+\t\tif err != nil {\n+\t\t\treturn\n+\t\t}\n+\t\t// Cache the entry if we didn't hit an error.\n+\t\tr.lock.Lock()\n+\t\tdefer r.lock.Unlock()\n+\t\tr.mountpointCache[uid] = cacheEntry{\n+\t\t\tmountpoint: mountpoint,\n+\t\t\ttime:       time.Now(),\n+\t\t}\n+\t}()\n+\n+\tu, err := user.LookupId(strconv.FormatUint(uint64(uid), 10))\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\n+\tvols, err := gomounts.GetMountedVolumes()\n+\tif err != nil {\n+\t\treturn \"\", err\n+\t}\n+\tfuseType := \"fuse\"\n+\tif runtime.GOOS == \"darwin\" {\n+\t\tfuseType = \"kbfuse\"\n+\t}\n+\tvar fuseMountPoints []string\n+\tfor _, v := range vols {\n+\t\tif v.Type != fuseType {\n+\t\t\tcontinue\n+\t\t}\n+\t\tif v.Owner != u.Uid {\n+\t\t\tcontinue\n+\t\t}\n+\t\tfuseMountPoints = append(fuseMountPoints, v.Path)\n+\t}\n+\n+\tif len(fuseMountPoints) == 0 {\n+\t\treturn \"\", fuse.ENOENT\n+\t}\n+\tif len(fuseMountPoints) == 1 {\n+\t\treturn fuseMountPoints[0], nil\n+\t}\n+\n+\t// If there is more than one, pick the first one alphabetically\n+\t// that has \"keybase\" in the path.\n+\tsort.Strings(fuseMountPoints)\n+\tfor _, mp := range fuseMountPoints {\n+\t\t// TODO: a better regexp that will rule out keybase.staging if\n+\t\t// we're in prod mode, etc.\n+\t\tif !strings.Contains(mp, \"keybase\") {\n+\t\t\tcontinue\n+\t\t}\n+\t\t// Double-check that this is a real KBFS mount.\n+\t\tif _, err := os.Stat(filepath.Join(mp, \".kbfs_error\")); err != nil {\n+\t\t\tcontinue\n+\t\t}\n+\t\treturn mp, nil\n+\t}\n+\n+\t// Give up and return the first one.\n+\treturn fuseMountPoints[0], nil\n+}\n+\n+func (r *root) ReadDirAll(ctx context.Context) ([]fuse.Dirent, error) {\n+\t_, err := r.findKBFSMount(ctx)\n+\tif err != nil {\n+\t\tif err == fuse.ENOENT {\n+\t\t\treturn []fuse.Dirent{}, nil\n+\t\t} else {\n+\t\t\treturn []fuse.Dirent{}, err\n+\t\t}\n+\t}\n+\n+\t// TODO: show the `kbfs.error.txt\" and \"kbfs.nologin.txt\" files if\n+\t// they exist?  As root, it is hard to figure out if they're\n+\t// there, though.\n+\treturn []fuse.Dirent{\n+\t\t{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"private\",\n+\t\t},\n+\t\t{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"public\",\n+\t\t},\n+\t\tfuse.Dirent{\n+\t\t\tType: fuse.DT_Link,\n+\t\t\tName: \"team\",\n+\t\t},\n+\t}, nil\n+}\n+\n+func (r *root) Lookup(\n+\tctx context.Context, req *fuse.LookupRequest, resp *fuse.LookupResponse) (\n+\tn fs.Node, err error) {\n+\tmountpoint, err := r.findKBFSMount(ctx)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tresp.EntryValid = 0\n+\tswitch req.Name {\n+\tcase \"private\", \"public\", \"team\", \".kbfs_error\", \".kbfs_metrics\",\n+\t\t\".kbfs_profiles\", \".kbfs_reset_caches\", \".kbfs_status\",\n+\t\t\"kbfs.error.txt\", \"kbfs.nologin.txt\", \".kbfs_enable_auto_journals\",\n+\t\t\".kbfs_disable_auto_journals\", \".kbfs_enable_block_prefetching\",\n+\t\t\".kbfs_disable_block_prefetching\", \".kbfs_enable_debug_server\",\n+\t\t\".kbfs_disable_debug_server\":\n+\t\treturn symlink{filepath.Join(mountpoint, req.Name)}, nil\n+\t}\n+\treturn nil, fuse.ENOENT\n+}\n+\n+func main() {\n+\tcurrUser, err := user.Current()\n+\tif err != nil {\n+\t\tpanic(err)\n+\t}\n+\tif currUser.Uid != \"0\" {\n+\t\truntime.LockOSThread()\n+\t\t_, _, errNo := syscall.Syscall(syscall.SYS_SETUID, 0, 0, 0)","path":"redirector/go/main.go","position":228,"original_position":229,"commit_id":"a375bbaa852f7c4c5475526da029481d313d80e8","original_commit_id":"4a9c54931293f10b5568f92acdec99a7e74547c5","user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"body":"Help me understand what happens if we don't make this call? My Rust redirector doesn't do any SUID step, but if I `chmod 4755` the binary, then I'm able to point it at a regular `0x755 root:root` directory and mount with no problems.","created_at":"2018-02-28T21:06:39Z","updated_at":"2018-02-28T21:06:39Z","html_url":"https://github.com/keybase/kbfs/pull/1496#discussion_r171385042","pull_request_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","author_association":"CONTRIBUTOR","_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments/171385042"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496#discussion_r171385042"},"pull_request":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"}}},"pull_request":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","id":172070599,"html_url":"https://github.com/keybase/kbfs/pull/1496","diff_url":"https://github.com/keybase/kbfs/pull/1496.diff","patch_url":"https://github.com/keybase/kbfs/pull/1496.patch","issue_url":"https://api.github.com/repos/keybase/kbfs/issues/1496","number":1496,"state":"open","locked":false,"title":"redirector: a Go implementation for the root redirector","user":{"login":"strib","id":8516691,"avatar_url":"https://avatars0.githubusercontent.com/u/8516691?v=4","gravatar_id":"","url":"https://api.github.com/users/strib","html_url":"https://github.com/strib","followers_url":"https://api.github.com/users/strib/followers","following_url":"https://api.github.com/users/strib/following{/other_user}","gists_url":"https://api.github.com/users/strib/gists{/gist_id}","starred_url":"https://api.github.com/users/strib/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/strib/subscriptions","organizations_url":"https://api.github.com/users/strib/orgs","repos_url":"https://api.github.com/users/strib/repos","events_url":"https://api.github.com/users/strib/events{/privacy}","received_events_url":"https://api.github.com/users/strib/received_events","type":"User","site_admin":false},"body":"This implementation of the root redirector will likely be used for macOS, at least until we figure out the kbfuse+Rust situation.\r\n\r\nNote that I needed some new bazil.org/fuse options, so I forked it to github.comkeybase/fuse and added two new features:\r\n* A NoBrowse() option that keeps the redirector from showing up in the Finder (instead, the specific user's mount will show up).\r\n* Adding the requesting user's UID to the context for every request, since `ReadDirAll` needs to know whether the requesting user has a valid mountpoint or not.  The bazil.org/fuse interface for `ReadDirAll` doesn't pass this down, so putting it in the context seemed like the easiest option for now.\r\n\r\nIssue: KBFS-2774","created_at":"2018-02-28T20:58:07Z","updated_at":"2018-02-28T21:06:39Z","closed_at":null,"merged_at":null,"merge_commit_sha":"437c5c76f895a2fc4092ddecb665a8ea1424e823","assignee":null,"assignees":[],"requested_reviewers":[{"login":"jzila","id":59594,"avatar_url":"https://avatars1.githubusercontent.com/u/59594?v=4","gravatar_id":"","url":"https://api.github.com/users/jzila","html_url":"https://github.com/jzila","followers_url":"https://api.github.com/users/jzila/followers","following_url":"https://api.github.com/users/jzila/following{/other_user}","gists_url":"https://api.github.com/users/jzila/gists{/gist_id}","starred_url":"https://api.github.com/users/jzila/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzila/subscriptions","organizations_url":"https://api.github.com/users/jzila/orgs","repos_url":"https://api.github.com/users/jzila/repos","events_url":"https://api.github.com/users/jzila/events{/privacy}","received_events_url":"https://api.github.com/users/jzila/received_events","type":"User","site_admin":false},{"login":"songgao","id":255797,"avatar_url":"https://avatars3.githubusercontent.com/u/255797?v=4","gravatar_id":"","url":"https://api.github.com/users/songgao","html_url":"https://github.com/songgao","followers_url":"https://api.github.com/users/songgao/followers","following_url":"https://api.github.com/users/songgao/following{/other_user}","gists_url":"https://api.github.com/users/songgao/gists{/gist_id}","starred_url":"https://api.github.com/users/songgao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/songgao/subscriptions","organizations_url":"https://api.github.com/users/songgao/orgs","repos_url":"https://api.github.com/users/songgao/repos","events_url":"https://api.github.com/users/songgao/events{/privacy}","received_events_url":"https://api.github.com/users/songgao/received_events","type":"User","site_admin":false},{"login":"akalin-keybase","id":13270622,"avatar_url":"https://avatars3.githubusercontent.com/u/13270622?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin-keybase","html_url":"https://github.com/akalin-keybase","followers_url":"https://api.github.com/users/akalin-keybase/followers","following_url":"https://api.github.com/users/akalin-keybase/following{/other_user}","gists_url":"https://api.github.com/users/akalin-keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin-keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin-keybase/subscriptions","organizations_url":"https://api.github.com/users/akalin-keybase/orgs","repos_url":"https://api.github.com/users/akalin-keybase/repos","events_url":"https://api.github.com/users/akalin-keybase/events{/privacy}","received_events_url":"https://api.github.com/users/akalin-keybase/received_events","type":"User","site_admin":false}],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits","review_comments_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments","review_comment_url":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/a375bbaa852f7c4c5475526da029481d313d80e8","head":{"label":"keybase:strib/KBFS-2774-mount-redirector","ref":"strib/KBFS-2774-mount-redirector","sha":"a375bbaa852f7c4c5475526da029481d313d80e8","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T21:03:09Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48520,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"base":{"label":"keybase:master","ref":"master","sha":"478a58b55a4605e2abe8699e32adc066bf1df7ee","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T21:03:09Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48520,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496"},"issue":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496"},"comments":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments"},"review_comments":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments"},"review_comment":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits"},"statuses":{"href":"https://api.github.com/repos/keybase/kbfs/statuses/a375bbaa852f7c4c5475526da029481d313d80e8"}},"author_association":"CONTRIBUTOR"}},"public":true,"created_at":"2018-02-28T21:06:39Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7312454227","type":"PushEvent","actor":{"id":8516691,"login":"strib","display_login":"strib","gravatar_id":"","url":"https://api.github.com/users/strib","avatar_url":"https://avatars.githubusercontent.com/u/8516691?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"push_id":2366632962,"size":2,"distinct_size":2,"ref":"refs/heads/strib/KBFS-2774-mount-redirector","head":"a375bbaa852f7c4c5475526da029481d313d80e8","before":"4a9c54931293f10b5568f92acdec99a7e74547c5","commits":[{"sha":"aad5099d3ef67565a30f774d42b2b9d2318ad6ed","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"redirector: fix lint\n\nIssue: KBFS-2774","distinct":true,"url":"https://api.github.com/repos/keybase/kbfs/commits/aad5099d3ef67565a30f774d42b2b9d2318ad6ed"},{"sha":"a375bbaa852f7c4c5475526da029481d313d80e8","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"redirector: use a better fork for \"gomounts\"\n\nIssue: KBFS-2774","distinct":true,"url":"https://api.github.com/repos/keybase/kbfs/commits/a375bbaa852f7c4c5475526da029481d313d80e8"}]},"public":true,"created_at":"2018-02-28T21:03:09Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7312429163","type":"PullRequestEvent","actor":{"id":8516691,"login":"strib","display_login":"strib","gravatar_id":"","url":"https://api.github.com/users/strib","avatar_url":"https://avatars.githubusercontent.com/u/8516691?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"action":"opened","number":1496,"pull_request":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/1496","id":172070599,"html_url":"https://github.com/keybase/kbfs/pull/1496","diff_url":"https://github.com/keybase/kbfs/pull/1496.diff","patch_url":"https://github.com/keybase/kbfs/pull/1496.patch","issue_url":"https://api.github.com/repos/keybase/kbfs/issues/1496","number":1496,"state":"open","locked":false,"title":"redirector: a Go implementation for the root redirector","user":{"login":"strib","id":8516691,"avatar_url":"https://avatars0.githubusercontent.com/u/8516691?v=4","gravatar_id":"","url":"https://api.github.com/users/strib","html_url":"https://github.com/strib","followers_url":"https://api.github.com/users/strib/followers","following_url":"https://api.github.com/users/strib/following{/other_user}","gists_url":"https://api.github.com/users/strib/gists{/gist_id}","starred_url":"https://api.github.com/users/strib/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/strib/subscriptions","organizations_url":"https://api.github.com/users/strib/orgs","repos_url":"https://api.github.com/users/strib/repos","events_url":"https://api.github.com/users/strib/events{/privacy}","received_events_url":"https://api.github.com/users/strib/received_events","type":"User","site_admin":false},"body":"This implementation of the root redirector will likely be used for macOS, at least until we figure out the kbfuse+Rust situation.\r\n\r\nNote that I needed some new bazil.org/fuse options, so I forked it to github.comkeybase/fuse and added two new features:\r\n* A NoBrowse() option that keeps the redirector from showing up in the Finder (instead, the specific user's mount will show up).\r\n* Adding the requesting user's UID to the context for every request, since `ReadDirAll` needs to know whether the requesting user has a valid mountpoint or not.  The bazil.org/fuse interface for `ReadDirAll` doesn't pass this down, so putting it in the context seemed like the easiest option for now.\r\n\r\nIssue: KBFS-2774","created_at":"2018-02-28T20:58:07Z","updated_at":"2018-02-28T20:58:07Z","closed_at":null,"merged_at":null,"merge_commit_sha":null,"assignee":null,"assignees":[],"requested_reviewers":[],"requested_teams":[],"labels":[],"milestone":null,"commits_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits","review_comments_url":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments","review_comment_url":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}","comments_url":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/4a9c54931293f10b5568f92acdec99a7e74547c5","head":{"label":"keybase:strib/KBFS-2774-mount-redirector","ref":"strib/KBFS-2774-mount-redirector","sha":"4a9c54931293f10b5568f92acdec99a7e74547c5","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T20:49:15Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48520,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"base":{"label":"keybase:master","ref":"master","sha":"478a58b55a4605e2abe8699e32adc066bf1df7ee","user":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"repo":{"id":59787605,"name":"kbfs","full_name":"keybase/kbfs","owner":{"login":"keybase","id":5400834,"avatar_url":"https://avatars2.githubusercontent.com/u/5400834?v=4","gravatar_id":"","url":"https://api.github.com/users/keybase","html_url":"https://github.com/keybase","followers_url":"https://api.github.com/users/keybase/followers","following_url":"https://api.github.com/users/keybase/following{/other_user}","gists_url":"https://api.github.com/users/keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keybase/subscriptions","organizations_url":"https://api.github.com/users/keybase/orgs","repos_url":"https://api.github.com/users/keybase/repos","events_url":"https://api.github.com/users/keybase/events{/privacy}","received_events_url":"https://api.github.com/users/keybase/received_events","type":"Organization","site_admin":false},"private":false,"html_url":"https://github.com/keybase/kbfs","description":"Keybase Filesystem (KBFS)","fork":false,"url":"https://api.github.com/repos/keybase/kbfs","forks_url":"https://api.github.com/repos/keybase/kbfs/forks","keys_url":"https://api.github.com/repos/keybase/kbfs/keys{/key_id}","collaborators_url":"https://api.github.com/repos/keybase/kbfs/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/keybase/kbfs/teams","hooks_url":"https://api.github.com/repos/keybase/kbfs/hooks","issue_events_url":"https://api.github.com/repos/keybase/kbfs/issues/events{/number}","events_url":"https://api.github.com/repos/keybase/kbfs/events","assignees_url":"https://api.github.com/repos/keybase/kbfs/assignees{/user}","branches_url":"https://api.github.com/repos/keybase/kbfs/branches{/branch}","tags_url":"https://api.github.com/repos/keybase/kbfs/tags","blobs_url":"https://api.github.com/repos/keybase/kbfs/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/keybase/kbfs/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/keybase/kbfs/git/refs{/sha}","trees_url":"https://api.github.com/repos/keybase/kbfs/git/trees{/sha}","statuses_url":"https://api.github.com/repos/keybase/kbfs/statuses/{sha}","languages_url":"https://api.github.com/repos/keybase/kbfs/languages","stargazers_url":"https://api.github.com/repos/keybase/kbfs/stargazers","contributors_url":"https://api.github.com/repos/keybase/kbfs/contributors","subscribers_url":"https://api.github.com/repos/keybase/kbfs/subscribers","subscription_url":"https://api.github.com/repos/keybase/kbfs/subscription","commits_url":"https://api.github.com/repos/keybase/kbfs/commits{/sha}","git_commits_url":"https://api.github.com/repos/keybase/kbfs/git/commits{/sha}","comments_url":"https://api.github.com/repos/keybase/kbfs/comments{/number}","issue_comment_url":"https://api.github.com/repos/keybase/kbfs/issues/comments{/number}","contents_url":"https://api.github.com/repos/keybase/kbfs/contents/{+path}","compare_url":"https://api.github.com/repos/keybase/kbfs/compare/{base}...{head}","merges_url":"https://api.github.com/repos/keybase/kbfs/merges","archive_url":"https://api.github.com/repos/keybase/kbfs/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/keybase/kbfs/downloads","issues_url":"https://api.github.com/repos/keybase/kbfs/issues{/number}","pulls_url":"https://api.github.com/repos/keybase/kbfs/pulls{/number}","milestones_url":"https://api.github.com/repos/keybase/kbfs/milestones{/number}","notifications_url":"https://api.github.com/repos/keybase/kbfs/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/keybase/kbfs/labels{/name}","releases_url":"https://api.github.com/repos/keybase/kbfs/releases{/id}","deployments_url":"https://api.github.com/repos/keybase/kbfs/deployments","created_at":"2016-05-26T22:37:42Z","updated_at":"2018-02-28T02:25:38Z","pushed_at":"2018-02-28T20:49:15Z","git_url":"git://github.com/keybase/kbfs.git","ssh_url":"git@github.com:keybase/kbfs.git","clone_url":"https://github.com/keybase/kbfs.git","svn_url":"https://github.com/keybase/kbfs","homepage":"https://keybase.io/docs/kbfs","size":48520,"stargazers_count":885,"watchers_count":885,"language":"Go","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":76,"mirror_url":null,"archived":false,"open_issues_count":46,"license":{"key":"bsd-3-clause","name":"BSD 3-Clause \"New\" or \"Revised\" License","spdx_id":"BSD-3-Clause","url":"https://api.github.com/licenses/bsd-3-clause"},"forks":76,"open_issues":46,"watchers":885,"default_branch":"master"}},"_links":{"self":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496"},"html":{"href":"https://github.com/keybase/kbfs/pull/1496"},"issue":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496"},"comments":{"href":"https://api.github.com/repos/keybase/kbfs/issues/1496/comments"},"review_comments":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/comments"},"review_comment":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/comments{/number}"},"commits":{"href":"https://api.github.com/repos/keybase/kbfs/pulls/1496/commits"},"statuses":{"href":"https://api.github.com/repos/keybase/kbfs/statuses/4a9c54931293f10b5568f92acdec99a7e74547c5"}},"author_association":"CONTRIBUTOR","merged":false,"mergeable":null,"rebaseable":null,"mergeable_state":"unknown","merged_by":null,"comments":0,"review_comments":0,"maintainer_can_modify":false,"commits":12,"additions":505,"deletions":3,"changed_files":13}},"public":true,"created_at":"2018-02-28T20:58:07Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7312385221","type":"PushEvent","actor":{"id":8516691,"login":"strib","display_login":"strib","gravatar_id":"","url":"https://api.github.com/users/strib","avatar_url":"https://avatars.githubusercontent.com/u/8516691?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"push_id":2366597306,"size":2,"distinct_size":2,"ref":"refs/heads/strib/KBFS-2774-mount-redirector","head":"4a9c54931293f10b5568f92acdec99a7e74547c5","before":"1fbb8088e8044281adcce35675f255a14e00a64f","commits":[{"sha":"f4a29a192661bd0e7130be1c6dda3a27f0318c26","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"redirector: make the Go redirector production-ready\n\n* Don't show links if KBFS isn't running for the user.\n  * This requires a change to bazil.org/fuse that sends the UID in the\n    context for readdir requests.\n* Redirect all the special files.\n* Attempt a clean unmount on an interrupt signal.\n* Exit cleanly if the mount fails.\n\nIssue: KBFS-2774","distinct":true,"url":"https://api.github.com/repos/keybase/kbfs/commits/f4a29a192661bd0e7130be1c6dda3a27f0318c26"},{"sha":"4a9c54931293f10b5568f92acdec99a7e74547c5","author":{"email":"strib@alum.mit.edu","name":"Jeremy Stribling"},"message":"redirector: move to redirector/go, to make room for Rust\n\nIssue: KBFS-2774","distinct":true,"url":"https://api.github.com/repos/keybase/kbfs/commits/4a9c54931293f10b5568f92acdec99a7e74547c5"}]},"public":true,"created_at":"2018-02-28T20:49:15Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7312217706","type":"WatchEvent","actor":{"id":6292,"login":"shazow","display_login":"shazow","gravatar_id":"","url":"https://api.github.com/users/shazow","avatar_url":"https://avatars.githubusercontent.com/u/6292?"},"repo":{"id":101666157,"name":"pop-os/distinst","url":"https://api.github.com/repos/pop-os/distinst"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-28T20:14:54Z","org":{"id":33131755,"login":"pop-os","gravatar_id":"","url":"https://api.github.com/orgs/pop-os","avatar_url":"https://avatars.githubusercontent.com/u/33131755?"}},{"id":"7311885648","type":"IssueCommentEvent","actor":{"id":710935,"login":"ahnick","display_login":"ahnick","gravatar_id":"","url":"https://api.github.com/users/ahnick","avatar_url":"https://avatars.githubusercontent.com/u/710935?"},"repo":{"id":17025114,"name":"keybase/keybase-issues","url":"https://api.github.com/repos/keybase/keybase-issues"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/keybase/keybase-issues/issues/518","repository_url":"https://api.github.com/repos/keybase/keybase-issues","labels_url":"https://api.github.com/repos/keybase/keybase-issues/issues/518/labels{/name}","comments_url":"https://api.github.com/repos/keybase/keybase-issues/issues/518/comments","events_url":"https://api.github.com/repos/keybase/keybase-issues/issues/518/events","html_url":"https://github.com/keybase/keybase-issues/issues/518","id":30930550,"number":518,"title":"Keybase Verification Suggestions","user":{"login":"zQueal","id":239193,"avatar_url":"https://avatars0.githubusercontent.com/u/239193?v=4","gravatar_id":"","url":"https://api.github.com/users/zQueal","html_url":"https://github.com/zQueal","followers_url":"https://api.github.com/users/zQueal/followers","following_url":"https://api.github.com/users/zQueal/following{/other_user}","gists_url":"https://api.github.com/users/zQueal/gists{/gist_id}","starred_url":"https://api.github.com/users/zQueal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zQueal/subscriptions","organizations_url":"https://api.github.com/users/zQueal/orgs","repos_url":"https://api.github.com/users/zQueal/repos","events_url":"https://api.github.com/users/zQueal/events{/privacy}","received_events_url":"https://api.github.com/users/zQueal/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":262,"created_at":"2014-04-06T05:01:49Z","updated_at":"2018-02-28T19:11:48Z","closed_at":null,"author_association":"MEMBER","body":"**EDIT:** Before you post your suggestions, could you please certify that the service in which you're posting for suggestion is **currently** able to post or display permanently public information on your behalf where _anyone_ can view it without the need of a user account. Any information, such as a signed statement of authenticity which requires a user account severely limits the usage of Keybase. If these requirements are not met, then I will not add your suggestion to our community list. Additionally, please do not request specific communities; StackExchange, and user forums for example. Instead of suggesting `Wilders Security Forums` please suggest the forum software in which it is running, such as Xenforo.\r\n\r\nI've wanted to do this for a while now; but I think we should get a thread going for suggested verification so they can be referenced, and we can kind of get a road-map going here. I'll try to get @malgorithms and @maxtaco to verify or deny as to whether or not they're definite, or simply a possibility.\r\n\r\n**Please only using this thread for suggestions and not discussion.** If you have suggestions on how to process a suggested proof, please open a new issue so it can be discussed in depth.\r\n# Confirmed\r\n\r\n| Completed | Accepted |\r\n| :-- | :-- |\r\n| Github | Tumblr |\r\n| Twitter | Email |\r\n| HTTP/HTTPS | [Facebook](https://github.com/keybase/keybase-issues/issues/97#issuecomment-36684470) |\r\n| DNS |  |\r\n| Reddit |  |\r\n| HackerNews |  |\r\n| Coinbase |  |\r\n| Bitcoin |  |\r\n# Unconfirmed / Suggested\r\n\r\n| Suggestions | Pull Requests |\r\n| :-- | :-- |\r\n| Gitorious / ~~BitBucket~~ / ~~Google Code~~ | [BitBucket](https://github.com/keybase/proofs/pull/18) |\r\n| LiveJournal / Dreamwidth |  |\r\n| Jabber / XMPP |  |\r\n| StackExchange |  |\r\n| LinkedIn |  |\r\n| Threema |  |\r\n| TextSecure |  |\r\n| OpenIDs |  |\r\n| ~~App.net~~ |  |\r\n| Tox |  |\r\n| Google+ |  |\r\n| [ORCID](https://github.com/keybase/keybase-issues/issues/402) |  |\r\n| Medium |  |\r\n| Svbtle |  |\r\n| [Blogger](https://github.com/keybase/keybase-issues/issues/518#issuecomment-147471786) |  |\r\n| WordPress |  |\r\n| Instagram |  |\r\n| Slack |  |\r\n| Flickr |  |\r\n| GnuSocial |  |\r\n| Pump.io |  |\r\n| Diaspora |  |\r\n| Namecoin |  |\r\n| Friendica |  |\r\n| HackerOne |  |\r\n| Etsy |  |\r\n| Circle (Bitcoin) |  |\r\n| Pinterest |  |\r\n| about.me |  |\r\n| Gravatar |  |\r\n| [Wikipedia/Wikimedia](704) |  |\r\n| Twister.net.co |  |\r\n| [BitTorrent Bleep](http://blog.bittorrent.com/2014/07/30/bittorrents-chat-client-unveiled-bittorrent-bleep-now-in-invite-only-pre-alpha/) |  |\r\n| SourceForge |  |\r\n| Pastebin |  |\r\n| geekli.st |  |\r\n| Slashdot |  |\r\n| [Stellar](https://www.stellar.org/blog/introducing-stellar/) |  |\r\n| [MiniLock.io](https://minilock.io/) |  |\r\n| [GreenAddress](https://greenaddress.it/en/) |  |\r\n| [ResearchGate](http://www.researchgate.net/) |  |\r\n| [Academia.edu](http://www.academia.edu/) |  |\r\n| BitMessage |  |\r\n| Last.fm |  |\r\n| Steam |  |\r\n| lobste.rs |  |\r\n| linuxquestions.org |  |\r\n| [Gratipay](https://gratipay.com/) |  |\r\n| [storj.io](http://storj.io/) |  |\r\n| Disqus |  |\r\n| [SlideShare](http://slideshare.net/) |  |\r\n| [Storj.io](http://storj.io/) |  |\r\n| Twitch.tv |  |\r\n| [WikiTree](http://www.wikitree.com/) |  |\r\n| [Geni](https://www.geni.com/) |  |\r\n| [RiseUp](https://we.riseup.net/) |  |\r\n| [I-Names](https://en.wikipedia.org/wiki/I-name) |  |\r\n| [.onion](https://en.wikipedia.org/wiki/.onion) |  |\r\n| [.emc](https://emercoin.com/) |  |\r\n| [Open Humans](https://www.openhumans.org/) |  |\r\n| [Proofile](http://proofile.org/) |  |\r\n| [Transifex](https://www.transifex.com/) |  |\r\n| [Tatoeba](https://tatoeba.org/) |  |\r\n| [WOT](https://www.mywot.com/) |  |\r\n| HackaDay[Test Proof](https://hackaday.io/zQueal) |  |\r\n| Dribbble |  |\r\n| [Peercoin](https://github.com/keybase/keybase-issues/issues/1697) |  |\r\n| Ello |  |\r\n| OKCupid |  |\r\n| [Savannah](https://savannah.nongnu.org/) |  |\r\n| vBulletin |  |\r\n| phpbb |  |\r\n| [Discourse](http://www.discourse.org/) |  |\r\n| Telehack |  |\r\n|[Matrix.org](http://matrix.org/) / [Riot.im](https://riot.im/)||\r\n|[MusicBrainz](https://musicbrainz.org/)||\r\n|[Mastodon / GNUSocial](https://mastodon.social/about)||\r\n|Discord||\r\n\r\n# Denied\r\n| Suggestions |\r\n| :-- |\r\n| None |\r\n\r\nReply to this thread with a suggestion and if it's not already on the list, I'll add it.\r\n"},"comment":{"url":"https://api.github.com/repos/keybase/keybase-issues/issues/comments/369349287","html_url":"https://github.com/keybase/keybase-issues/issues/518#issuecomment-369349287","issue_url":"https://api.github.com/repos/keybase/keybase-issues/issues/518","id":369349287,"user":{"login":"ahnick","id":710935,"avatar_url":"https://avatars0.githubusercontent.com/u/710935?v=4","gravatar_id":"","url":"https://api.github.com/users/ahnick","html_url":"https://github.com/ahnick","followers_url":"https://api.github.com/users/ahnick/followers","following_url":"https://api.github.com/users/ahnick/following{/other_user}","gists_url":"https://api.github.com/users/ahnick/gists{/gist_id}","starred_url":"https://api.github.com/users/ahnick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ahnick/subscriptions","organizations_url":"https://api.github.com/users/ahnick/orgs","repos_url":"https://api.github.com/users/ahnick/repos","events_url":"https://api.github.com/users/ahnick/events{/privacy}","received_events_url":"https://api.github.com/users/ahnick/received_events","type":"User","site_admin":false},"created_at":"2018-02-28T19:11:48Z","updated_at":"2018-02-28T19:11:48Z","author_association":"NONE","body":"What's the status on getting LinkedIn added?  I have a lot of professional connections solely made through that platform."}},"public":true,"created_at":"2018-02-28T19:11:48Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7311355384","type":"ForkEvent","actor":{"id":2601015,"login":"jonboulle","display_login":"jonboulle","gravatar_id":"","url":"https://api.github.com/users/jonboulle","avatar_url":"https://avatars.githubusercontent.com/u/2601015?"},"repo":{"id":68197176,"name":"PalmStoneGames/kube-cert-manager","url":"https://api.github.com/repos/PalmStoneGames/kube-cert-manager"},"payload":{"forkee":{"id":123318740,"name":"kube-cert-manager","full_name":"jonboulle/kube-cert-manager","owner":{"login":"jonboulle","id":2601015,"avatar_url":"https://avatars2.githubusercontent.com/u/2601015?v=4","gravatar_id":"","url":"https://api.github.com/users/jonboulle","html_url":"https://github.com/jonboulle","followers_url":"https://api.github.com/users/jonboulle/followers","following_url":"https://api.github.com/users/jonboulle/following{/other_user}","gists_url":"https://api.github.com/users/jonboulle/gists{/gist_id}","starred_url":"https://api.github.com/users/jonboulle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonboulle/subscriptions","organizations_url":"https://api.github.com/users/jonboulle/orgs","repos_url":"https://api.github.com/users/jonboulle/repos","events_url":"https://api.github.com/users/jonboulle/events{/privacy}","received_events_url":"https://api.github.com/users/jonboulle/received_events","type":"User","site_admin":false},"private":false,"html_url":"https://github.com/jonboulle/kube-cert-manager","description":"Manage Lets Encrypt certificates for a Kubernetes cluster.","fork":true,"url":"https://api.github.com/repos/jonboulle/kube-cert-manager","forks_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/forks","keys_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/keys{/key_id}","collaborators_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/teams","hooks_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/hooks","issue_events_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/issues/events{/number}","events_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/events","assignees_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/assignees{/user}","branches_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/branches{/branch}","tags_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/tags","blobs_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/git/refs{/sha}","trees_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/git/trees{/sha}","statuses_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/statuses/{sha}","languages_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/languages","stargazers_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/stargazers","contributors_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/contributors","subscribers_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/subscribers","subscription_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/subscription","commits_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/commits{/sha}","git_commits_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/git/commits{/sha}","comments_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/comments{/number}","issue_comment_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/issues/comments{/number}","contents_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/contents/{+path}","compare_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/compare/{base}...{head}","merges_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/merges","archive_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/downloads","issues_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/issues{/number}","pulls_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/pulls{/number}","milestones_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/milestones{/number}","notifications_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/labels{/name}","releases_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/releases{/id}","deployments_url":"https://api.github.com/repos/jonboulle/kube-cert-manager/deployments","created_at":"2018-02-28T17:31:39Z","updated_at":"2018-02-26T22:03:03Z","pushed_at":"2018-02-22T09:06:14Z","git_url":"git://github.com/jonboulle/kube-cert-manager.git","ssh_url":"git@github.com:jonboulle/kube-cert-manager.git","clone_url":"https://github.com/jonboulle/kube-cert-manager.git","svn_url":"https://github.com/jonboulle/kube-cert-manager","homepage":null,"size":191,"stargazers_count":0,"watchers_count":0,"language":null,"has_issues":false,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"open_issues_count":0,"license":null,"forks":0,"open_issues":0,"watchers":0,"default_branch":"master","public":true}},"public":true,"created_at":"2018-02-28T17:31:39Z","org":{"id":7920623,"login":"PalmStoneGames","gravatar_id":"","url":"https://api.github.com/orgs/PalmStoneGames","avatar_url":"https://avatars.githubusercontent.com/u/7920623?"}},{"id":"7310767911","type":"WatchEvent","actor":{"id":1963,"login":"rphillips","display_login":"rphillips","gravatar_id":"","url":"https://api.github.com/users/rphillips","avatar_url":"https://avatars.githubusercontent.com/u/1963?"},"repo":{"id":50806714,"name":"drduh/YubiKey-Guide","url":"https://api.github.com/repos/drduh/YubiKey-Guide"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-28T15:52:50Z"},{"id":"7309229891","type":"WatchEvent","actor":{"id":37492,"login":"bketelsen","display_login":"bketelsen","gravatar_id":"","url":"https://api.github.com/users/bketelsen","avatar_url":"https://avatars.githubusercontent.com/u/37492?"},"repo":{"id":50806714,"name":"drduh/YubiKey-Guide","url":"https://api.github.com/repos/drduh/YubiKey-Guide"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-28T11:01:43Z"},{"id":"7309184665","type":"WatchEvent","actor":{"id":37492,"login":"bketelsen","display_login":"bketelsen","gravatar_id":"","url":"https://api.github.com/users/bketelsen","avatar_url":"https://avatars.githubusercontent.com/u/37492?"},"repo":{"id":48610662,"name":"Neilpang/acme.sh","url":"https://api.github.com/repos/Neilpang/acme.sh"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-28T10:52:41Z"},{"id":"7309073397","type":"IssueCommentEvent","actor":{"id":42174,"login":"taruti","display_login":"taruti","gravatar_id":"","url":"https://api.github.com/users/taruti","avatar_url":"https://avatars.githubusercontent.com/u/42174?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/keybase/kbfs/issues/1494","repository_url":"https://api.github.com/repos/keybase/kbfs","labels_url":"https://api.github.com/repos/keybase/kbfs/issues/1494/labels{/name}","comments_url":"https://api.github.com/repos/keybase/kbfs/issues/1494/comments","events_url":"https://api.github.com/repos/keybase/kbfs/issues/1494/events","html_url":"https://github.com/keybase/kbfs/issues/1494","id":300755407,"number":1494,"title":"File not overwritten by >file under Cygwin","user":{"login":"mortenkjarulff","id":32191001,"avatar_url":"https://avatars2.githubusercontent.com/u/32191001?v=4","gravatar_id":"","url":"https://api.github.com/users/mortenkjarulff","html_url":"https://github.com/mortenkjarulff","followers_url":"https://api.github.com/users/mortenkjarulff/followers","following_url":"https://api.github.com/users/mortenkjarulff/following{/other_user}","gists_url":"https://api.github.com/users/mortenkjarulff/gists{/gist_id}","starred_url":"https://api.github.com/users/mortenkjarulff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mortenkjarulff/subscriptions","organizations_url":"https://api.github.com/users/mortenkjarulff/orgs","repos_url":"https://api.github.com/users/mortenkjarulff/repos","events_url":"https://api.github.com/users/mortenkjarulff/events{/privacy}","received_events_url":"https://api.github.com/users/mortenkjarulff/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":{"login":"taruti","id":42174,"avatar_url":"https://avatars3.githubusercontent.com/u/42174?v=4","gravatar_id":"","url":"https://api.github.com/users/taruti","html_url":"https://github.com/taruti","followers_url":"https://api.github.com/users/taruti/followers","following_url":"https://api.github.com/users/taruti/following{/other_user}","gists_url":"https://api.github.com/users/taruti/gists{/gist_id}","starred_url":"https://api.github.com/users/taruti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taruti/subscriptions","organizations_url":"https://api.github.com/users/taruti/orgs","repos_url":"https://api.github.com/users/taruti/repos","events_url":"https://api.github.com/users/taruti/events{/privacy}","received_events_url":"https://api.github.com/users/taruti/received_events","type":"User","site_admin":false},"assignees":[{"login":"taruti","id":42174,"avatar_url":"https://avatars3.githubusercontent.com/u/42174?v=4","gravatar_id":"","url":"https://api.github.com/users/taruti","html_url":"https://github.com/taruti","followers_url":"https://api.github.com/users/taruti/followers","following_url":"https://api.github.com/users/taruti/following{/other_user}","gists_url":"https://api.github.com/users/taruti/gists{/gist_id}","starred_url":"https://api.github.com/users/taruti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taruti/subscriptions","organizations_url":"https://api.github.com/users/taruti/orgs","repos_url":"https://api.github.com/users/taruti/repos","events_url":"https://api.github.com/users/taruti/events{/privacy}","received_events_url":"https://api.github.com/users/taruti/received_events","type":"User","site_admin":false}],"milestone":null,"comments":2,"created_at":"2018-02-27T19:08:46Z","updated_at":"2018-02-28T10:30:48Z","closed_at":null,"author_association":"NONE","body":"I use Cygwin on windows, tjek this:\r\n\r\n```\r\n$ printf \"A\\nB\\n\">t\r\n\r\n$ cat t\r\nA\r\nB\r\n\r\n$ printf \"Z\\n\">t\r\n\r\n$ cat t\r\nZ\r\nB\r\n```"},"comment":{"url":"https://api.github.com/repos/keybase/kbfs/issues/comments/369196751","html_url":"https://github.com/keybase/kbfs/issues/1494#issuecomment-369196751","issue_url":"https://api.github.com/repos/keybase/kbfs/issues/1494","id":369196751,"user":{"login":"taruti","id":42174,"avatar_url":"https://avatars3.githubusercontent.com/u/42174?v=4","gravatar_id":"","url":"https://api.github.com/users/taruti","html_url":"https://github.com/taruti","followers_url":"https://api.github.com/users/taruti/followers","following_url":"https://api.github.com/users/taruti/following{/other_user}","gists_url":"https://api.github.com/users/taruti/gists{/gist_id}","starred_url":"https://api.github.com/users/taruti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taruti/subscriptions","organizations_url":"https://api.github.com/users/taruti/orgs","repos_url":"https://api.github.com/users/taruti/repos","events_url":"https://api.github.com/users/taruti/events{/privacy}","received_events_url":"https://api.github.com/users/taruti/received_events","type":"User","site_admin":false},"created_at":"2018-02-28T10:30:48Z","updated_at":"2018-02-28T10:30:48Z","author_association":"CONTRIBUTOR","body":"This is specific to cygwin/mingwin/msys, e.g. cmd exe works correctly. The redirection does a bunch of fs calls but ends up doing an FILE_OPEN_IF instead of e.g. FILE_OVERWRITE_IF. Investigating further and will fix.\r\n\r\nThank you @mortenkjarulff for an issue so easy to reproduce.\r\n"}},"public":true,"created_at":"2018-02-28T10:30:48Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7308653103","type":"IssueCommentEvent","actor":{"id":42174,"login":"taruti","display_login":"taruti","gravatar_id":"","url":"https://api.github.com/users/taruti","avatar_url":"https://avatars.githubusercontent.com/u/42174?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/keybase/kbfs/issues/1494","repository_url":"https://api.github.com/repos/keybase/kbfs","labels_url":"https://api.github.com/repos/keybase/kbfs/issues/1494/labels{/name}","comments_url":"https://api.github.com/repos/keybase/kbfs/issues/1494/comments","events_url":"https://api.github.com/repos/keybase/kbfs/issues/1494/events","html_url":"https://github.com/keybase/kbfs/issues/1494","id":300755407,"number":1494,"title":"File not overwritten by >file under Cygwin","user":{"login":"mortenkjarulff","id":32191001,"avatar_url":"https://avatars2.githubusercontent.com/u/32191001?v=4","gravatar_id":"","url":"https://api.github.com/users/mortenkjarulff","html_url":"https://github.com/mortenkjarulff","followers_url":"https://api.github.com/users/mortenkjarulff/followers","following_url":"https://api.github.com/users/mortenkjarulff/following{/other_user}","gists_url":"https://api.github.com/users/mortenkjarulff/gists{/gist_id}","starred_url":"https://api.github.com/users/mortenkjarulff/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mortenkjarulff/subscriptions","organizations_url":"https://api.github.com/users/mortenkjarulff/orgs","repos_url":"https://api.github.com/users/mortenkjarulff/repos","events_url":"https://api.github.com/users/mortenkjarulff/events{/privacy}","received_events_url":"https://api.github.com/users/mortenkjarulff/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-02-27T19:08:46Z","updated_at":"2018-02-28T09:09:39Z","closed_at":null,"author_association":"NONE","body":"I use Cygwin on windows, tjek this:\r\n\r\n```\r\n$ printf \"A\\nB\\n\">t\r\n\r\n$ cat t\r\nA\r\nB\r\n\r\n$ printf \"Z\\n\">t\r\n\r\n$ cat t\r\nZ\r\nB\r\n```"},"comment":{"url":"https://api.github.com/repos/keybase/kbfs/issues/comments/369169143","html_url":"https://github.com/keybase/kbfs/issues/1494#issuecomment-369169143","issue_url":"https://api.github.com/repos/keybase/kbfs/issues/1494","id":369169143,"user":{"login":"taruti","id":42174,"avatar_url":"https://avatars3.githubusercontent.com/u/42174?v=4","gravatar_id":"","url":"https://api.github.com/users/taruti","html_url":"https://github.com/taruti","followers_url":"https://api.github.com/users/taruti/followers","following_url":"https://api.github.com/users/taruti/following{/other_user}","gists_url":"https://api.github.com/users/taruti/gists{/gist_id}","starred_url":"https://api.github.com/users/taruti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/taruti/subscriptions","organizations_url":"https://api.github.com/users/taruti/orgs","repos_url":"https://api.github.com/users/taruti/repos","events_url":"https://api.github.com/users/taruti/events{/privacy}","received_events_url":"https://api.github.com/users/taruti/received_events","type":"User","site_admin":false},"created_at":"2018-02-28T09:09:39Z","updated_at":"2018-02-28T09:09:39Z","author_association":"CONTRIBUTOR","body":"Can replicate this, will fix."}},"public":true,"created_at":"2018-02-28T09:09:40Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7307704972","type":"IssueCommentEvent","actor":{"id":13270622,"login":"akalin-keybase","display_login":"akalin-keybase","gravatar_id":"","url":"https://api.github.com/users/akalin-keybase","avatar_url":"https://avatars.githubusercontent.com/u/13270622?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/keybase/kbfs/issues/1488","repository_url":"https://api.github.com/repos/keybase/kbfs","labels_url":"https://api.github.com/repos/keybase/kbfs/issues/1488/labels{/name}","comments_url":"https://api.github.com/repos/keybase/kbfs/issues/1488/comments","events_url":"https://api.github.com/repos/keybase/kbfs/issues/1488/events","html_url":"https://github.com/keybase/kbfs/pull/1488","id":299638059,"number":1488,"title":"Add test for omitempty for structs (WriterMetadataV2)","user":{"login":"akalin-keybase","id":13270622,"avatar_url":"https://avatars3.githubusercontent.com/u/13270622?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin-keybase","html_url":"https://github.com/akalin-keybase","followers_url":"https://api.github.com/users/akalin-keybase/followers","following_url":"https://api.github.com/users/akalin-keybase/following{/other_user}","gists_url":"https://api.github.com/users/akalin-keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin-keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin-keybase/subscriptions","organizations_url":"https://api.github.com/users/akalin-keybase/orgs","repos_url":"https://api.github.com/users/akalin-keybase/repos","events_url":"https://api.github.com/users/akalin-keybase/events{/privacy}","received_events_url":"https://api.github.com/users/akalin-keybase/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-23T08:48:50Z","updated_at":"2018-02-28T04:21:31Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/1488","html_url":"https://github.com/keybase/kbfs/pull/1488","diff_url":"https://github.com/keybase/kbfs/pull/1488.diff","patch_url":"https://github.com/keybase/kbfs/pull/1488.patch"},"body":"Turns out this is only used in a single place.\r\n\r\nAdd TODO to remove omitemptycheckstruct once we use a newer version of\r\ngo-codec that supports omitempty for structs."},"comment":{"url":"https://api.github.com/repos/keybase/kbfs/issues/comments/369117010","html_url":"https://github.com/keybase/kbfs/pull/1488#issuecomment-369117010","issue_url":"https://api.github.com/repos/keybase/kbfs/issues/1488","id":369117010,"user":{"login":"akalin-keybase","id":13270622,"avatar_url":"https://avatars3.githubusercontent.com/u/13270622?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin-keybase","html_url":"https://github.com/akalin-keybase","followers_url":"https://api.github.com/users/akalin-keybase/followers","following_url":"https://api.github.com/users/akalin-keybase/following{/other_user}","gists_url":"https://api.github.com/users/akalin-keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin-keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin-keybase/subscriptions","organizations_url":"https://api.github.com/users/akalin-keybase/orgs","repos_url":"https://api.github.com/users/akalin-keybase/repos","events_url":"https://api.github.com/users/akalin-keybase/events{/privacy}","received_events_url":"https://api.github.com/users/akalin-keybase/received_events","type":"User","site_admin":false},"created_at":"2018-02-28T04:21:31Z","updated_at":"2018-02-28T04:21:31Z","author_association":"CONTRIBUTOR","body":"Ping!"}},"public":true,"created_at":"2018-02-28T04:21:31Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7307704704","type":"IssueCommentEvent","actor":{"id":13270622,"login":"akalin-keybase","display_login":"akalin-keybase","gravatar_id":"","url":"https://api.github.com/users/akalin-keybase","avatar_url":"https://avatars.githubusercontent.com/u/13270622?"},"repo":{"id":59787605,"name":"keybase/kbfs","url":"https://api.github.com/repos/keybase/kbfs"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/keybase/kbfs/issues/1491","repository_url":"https://api.github.com/repos/keybase/kbfs","labels_url":"https://api.github.com/repos/keybase/kbfs/issues/1491/labels{/name}","comments_url":"https://api.github.com/repos/keybase/kbfs/issues/1491/comments","events_url":"https://api.github.com/repos/keybase/kbfs/issues/1491/events","html_url":"https://github.com/keybase/kbfs/pull/1491","id":300373454,"number":1491,"title":"initial Linux-only implementation of the Rust redirector","user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-02-26T19:53:14Z","updated_at":"2018-02-28T04:21:25Z","closed_at":null,"author_association":"CONTRIBUTOR","pull_request":{"url":"https://api.github.com/repos/keybase/kbfs/pulls/1491","html_url":"https://github.com/keybase/kbfs/pull/1491","diff_url":"https://github.com/keybase/kbfs/pull/1491.diff","patch_url":"https://github.com/keybase/kbfs/pull/1491.patch"},"body":"r? @strib @akalin-keybase \r\n\r\ncc @jzila "},"comment":{"url":"https://api.github.com/repos/keybase/kbfs/issues/comments/369116991","html_url":"https://github.com/keybase/kbfs/pull/1491#issuecomment-369116991","issue_url":"https://api.github.com/repos/keybase/kbfs/issues/1491","id":369116991,"user":{"login":"akalin-keybase","id":13270622,"avatar_url":"https://avatars3.githubusercontent.com/u/13270622?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin-keybase","html_url":"https://github.com/akalin-keybase","followers_url":"https://api.github.com/users/akalin-keybase/followers","following_url":"https://api.github.com/users/akalin-keybase/following{/other_user}","gists_url":"https://api.github.com/users/akalin-keybase/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin-keybase/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin-keybase/subscriptions","organizations_url":"https://api.github.com/users/akalin-keybase/orgs","repos_url":"https://api.github.com/users/akalin-keybase/repos","events_url":"https://api.github.com/users/akalin-keybase/events{/privacy}","received_events_url":"https://api.github.com/users/akalin-keybase/received_events","type":"User","site_admin":false},"created_at":"2018-02-28T04:21:25Z","updated_at":"2018-02-28T04:21:25Z","author_association":"CONTRIBUTOR","body":"Still owe you a review on this -- I have to get up to speed on the go implementation first. I'll try to do that tomorrow on the plane!"}},"public":true,"created_at":"2018-02-28T04:21:25Z","org":{"id":5400834,"login":"keybase","gravatar_id":"","url":"https://api.github.com/orgs/keybase","avatar_url":"https://avatars.githubusercontent.com/u/5400834?"}},{"id":"7307483438","type":"WatchEvent","actor":{"id":37492,"login":"bketelsen","display_login":"bketelsen","gravatar_id":"","url":"https://api.github.com/users/bketelsen","avatar_url":"https://avatars.githubusercontent.com/u/37492?"},"repo":{"id":114025506,"name":"Azure/blackbelt-aks-hackfest","url":"https://api.github.com/repos/Azure/blackbelt-aks-hackfest"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-28T03:00:56Z","org":{"id":6844498,"login":"Azure","gravatar_id":"","url":"https://api.github.com/orgs/Azure","avatar_url":"https://avatars.githubusercontent.com/u/6844498?"}}]