[{"id":"6887172498","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":96272523,"name":"akalin/gopar","url":"https://api.github.com/repos/akalin/gopar"},"payload":{"push_id":2141172636,"size":60,"distinct_size":4,"ref":"refs/heads/stat-util","head":"2151de73f95f3e4b6565656f221f917f63fde543","before":"77f6a1583e69991f3fe40d90110b9e305382e7e8","commits":[{"sha":"4286d00c970a4334f200391a8d70befcd68e1ae3","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Write recovery packets in ascending exponent order","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/4286d00c970a4334f200391a8d70befcd68e1ae3"},{"sha":"b7a20b1fb31b96ba4874c71f1ab804ce28e226c6","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Update PAR2 status in README.md\n\nFeature-End: par2","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/b7a20b1fb31b96ba4874c71f1ab804ce28e226c6"},{"sha":"da518f57b9ee7b78287a3a38753539757dfaa061","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add switch for CPU profile\n\nFeature-Start: par2-perf","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/da518f57b9ee7b78287a3a38753539757dfaa061"},{"sha":"eb08678f1e0a057d427bb9edccf3e91772ef3a99","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Handle SIGINT in par executable\n\nMake it stop the CPU profile, if any.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/eb08678f1e0a057d427bb9edccf3e91772ef3a99"},{"sha":"bbba3e3312777a0214ded0fa34218997b0f8396f","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add unit test for applyMatrix\n\nAlso add length check to applyMatrix.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/bbba3e3312777a0214ded0fa34218997b0f8396f"},{"sha":"6f4289f2eefb559d7b3255fed441cdf76038b924","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add benchmark for applyMatrix","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/6f4289f2eefb559d7b3255fed441cdf76038b924"},{"sha":"b863c7a4b35f02fd4e01628249f8211c32a54812","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Rewrite applyMatrix to use gf2p16 slice methods\n\nThis increases performance by roughly 10x, as measured by the\napplyMatrix benchmark.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/b863c7a4b35f02fd4e01628249f8211c32a54812"},{"sha":"f7c3249cae5d1a5e4e82775a0effd899ee22e787","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Remove optimization-related TODO\n\nBenchmarks show that it has a negative effect.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/f7c3249cae5d1a5e4e82775a0effd899ee22e787"},{"sha":"01af49eefd3724608815b04dc116c620aa5af32e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Avoid conversions to and from []uint16\n\nThis essentially moves all the work to MulByteSliceLE and\nMulAndAddByteSliceLE.\n\nNote that this slows down the benchmarks for applyMatrix by about 30%.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/01af49eefd3724608815b04dc116c620aa5af32e"},{"sha":"55aea6814a5a301c3dd41e4846febf1fcd583737","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Pull out inner loop of fillFileIntegrityInfos\n\nAlso add unit test and benchmark for it (fillShardInfos).","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/55aea6814a5a301c3dd41e4846febf1fcd583737"},{"sha":"f160cd8a54cb8fa86d1ad1ea27c3fb6aaf829625","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Speed up common case of fillShardInfos\n\nIncrement by sliceByteCount on a hit. This speeds up the common case of\nan uncorrupted file by 100x. This slows down the worst case of an\nunrelated file by ~6%.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/f160cd8a54cb8fa86d1ad1ea27c3fb6aaf829625"},{"sha":"65fe537ab6ac96ed431105d8a67f70762920810f","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add benchmark for gf2p16.Matrix.Inverse","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/65fe537ab6ac96ed431105d8a67f70762920810f"},{"sha":"aa39be5da62300d7021d9a9acbe8c3eae9586c51","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Reduce memory usage of gf2p16.Matrix.Inverse\n\nThis doesn't seem to help the benchmarks, though.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/aa39be5da62300d7021d9a9acbe8c3eae9586c51"},{"sha":"28141ec5282105af77ae7166ed28798ea204ce59","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Pull out reconstruction matrix construction\n\nAdd unit test and benchmark for it.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/28141ec5282105af77ae7166ed28798ea204ce59"},{"sha":"7b6eac080b6b4a4a6e240a438bea44cf1e6d0ca0","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Speed up makeReconstructionMatrix\n\nAdd a new function gf2p16.Matrix.RowReduceForInverse, and use that in\nmakeReconstructionMatrix to avoid having to row-reduce a large matrix.\n\nThis speeds up makeReconstructionMatrix by about 100x.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/7b6eac080b6b4a4a6e240a438bea44cf1e6d0ca0"},{"sha":"0892a638217acefcba03111ce06c80881ccad25c","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Don't verify parity files by default\n\nThis is to match the behavior of par2cmdline.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/0892a638217acefcba03111ce06c80881ccad25c"},{"sha":"23c91735cbfab1dc08255849f81b06386178952e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Don't check parity files by default when repairing","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/23c91735cbfab1dc08255849f81b06386178952e"},{"sha":"2da6afb7e723c702b4a5fef55062de7d7af1ef06","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement parallel version of applyMatrix\n\nAdd tests and benchmarks. Benchmarks show that hyperthreading doesn't\nhelp applyMatrix, and indeed setting the goroutine count to the number\nof physical cores is slightly faster than setting it to the number of\nvirtual cores.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/2da6afb7e723c702b4a5fef55062de7d7af1ef06"},{"sha":"67ecfcd97694eb19c50e98632c5c498c7ff5eabf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement another parallel version of applyMatrix\n\nBenchmarks show that it performs similarly to the existing parallel\nversion.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/67ecfcd97694eb19c50e98632c5c498c7ff5eabf"},{"sha":"fab7bde5c977fc9d006403b3ab41cfbfc7cab4bc","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Make rsec16.Coder use parallel applyMatrix","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/fab7bde5c977fc9d006403b3ab41cfbfc7cab4bc"}]},"public":true,"created_at":"2017-11-21T22:15:28Z"},{"id":"6887172454","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":96272523,"name":"akalin/gopar","url":"https://api.github.com/repos/akalin/gopar"},"payload":{"push_id":2141172616,"size":56,"distinct_size":0,"ref":"refs/heads/master","head":"9609327d05a9f56b851a72b6704b0480b70055c0","before":"56f45a95ac78f6c71b79a4df0e689c54497551e1","commits":[{"sha":"4286d00c970a4334f200391a8d70befcd68e1ae3","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Write recovery packets in ascending exponent order","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/4286d00c970a4334f200391a8d70befcd68e1ae3"},{"sha":"b7a20b1fb31b96ba4874c71f1ab804ce28e226c6","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Update PAR2 status in README.md\n\nFeature-End: par2","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/b7a20b1fb31b96ba4874c71f1ab804ce28e226c6"},{"sha":"da518f57b9ee7b78287a3a38753539757dfaa061","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add switch for CPU profile\n\nFeature-Start: par2-perf","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/da518f57b9ee7b78287a3a38753539757dfaa061"},{"sha":"eb08678f1e0a057d427bb9edccf3e91772ef3a99","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Handle SIGINT in par executable\n\nMake it stop the CPU profile, if any.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/eb08678f1e0a057d427bb9edccf3e91772ef3a99"},{"sha":"bbba3e3312777a0214ded0fa34218997b0f8396f","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add unit test for applyMatrix\n\nAlso add length check to applyMatrix.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/bbba3e3312777a0214ded0fa34218997b0f8396f"},{"sha":"6f4289f2eefb559d7b3255fed441cdf76038b924","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add benchmark for applyMatrix","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/6f4289f2eefb559d7b3255fed441cdf76038b924"},{"sha":"b863c7a4b35f02fd4e01628249f8211c32a54812","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Rewrite applyMatrix to use gf2p16 slice methods\n\nThis increases performance by roughly 10x, as measured by the\napplyMatrix benchmark.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/b863c7a4b35f02fd4e01628249f8211c32a54812"},{"sha":"f7c3249cae5d1a5e4e82775a0effd899ee22e787","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Remove optimization-related TODO\n\nBenchmarks show that it has a negative effect.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/f7c3249cae5d1a5e4e82775a0effd899ee22e787"},{"sha":"01af49eefd3724608815b04dc116c620aa5af32e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Avoid conversions to and from []uint16\n\nThis essentially moves all the work to MulByteSliceLE and\nMulAndAddByteSliceLE.\n\nNote that this slows down the benchmarks for applyMatrix by about 30%.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/01af49eefd3724608815b04dc116c620aa5af32e"},{"sha":"55aea6814a5a301c3dd41e4846febf1fcd583737","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Pull out inner loop of fillFileIntegrityInfos\n\nAlso add unit test and benchmark for it (fillShardInfos).","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/55aea6814a5a301c3dd41e4846febf1fcd583737"},{"sha":"f160cd8a54cb8fa86d1ad1ea27c3fb6aaf829625","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Speed up common case of fillShardInfos\n\nIncrement by sliceByteCount on a hit. This speeds up the common case of\nan uncorrupted file by 100x. This slows down the worst case of an\nunrelated file by ~6%.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/f160cd8a54cb8fa86d1ad1ea27c3fb6aaf829625"},{"sha":"65fe537ab6ac96ed431105d8a67f70762920810f","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add benchmark for gf2p16.Matrix.Inverse","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/65fe537ab6ac96ed431105d8a67f70762920810f"},{"sha":"aa39be5da62300d7021d9a9acbe8c3eae9586c51","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Reduce memory usage of gf2p16.Matrix.Inverse\n\nThis doesn't seem to help the benchmarks, though.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/aa39be5da62300d7021d9a9acbe8c3eae9586c51"},{"sha":"28141ec5282105af77ae7166ed28798ea204ce59","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Pull out reconstruction matrix construction\n\nAdd unit test and benchmark for it.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/28141ec5282105af77ae7166ed28798ea204ce59"},{"sha":"7b6eac080b6b4a4a6e240a438bea44cf1e6d0ca0","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Speed up makeReconstructionMatrix\n\nAdd a new function gf2p16.Matrix.RowReduceForInverse, and use that in\nmakeReconstructionMatrix to avoid having to row-reduce a large matrix.\n\nThis speeds up makeReconstructionMatrix by about 100x.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/7b6eac080b6b4a4a6e240a438bea44cf1e6d0ca0"},{"sha":"0892a638217acefcba03111ce06c80881ccad25c","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Don't verify parity files by default\n\nThis is to match the behavior of par2cmdline.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/0892a638217acefcba03111ce06c80881ccad25c"},{"sha":"23c91735cbfab1dc08255849f81b06386178952e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Don't check parity files by default when repairing","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/23c91735cbfab1dc08255849f81b06386178952e"},{"sha":"2da6afb7e723c702b4a5fef55062de7d7af1ef06","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement parallel version of applyMatrix\n\nAdd tests and benchmarks. Benchmarks show that hyperthreading doesn't\nhelp applyMatrix, and indeed setting the goroutine count to the number\nof physical cores is slightly faster than setting it to the number of\nvirtual cores.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/2da6afb7e723c702b4a5fef55062de7d7af1ef06"},{"sha":"67ecfcd97694eb19c50e98632c5c498c7ff5eabf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement another parallel version of applyMatrix\n\nBenchmarks show that it performs similarly to the existing parallel\nversion.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/67ecfcd97694eb19c50e98632c5c498c7ff5eabf"},{"sha":"fab7bde5c977fc9d006403b3ab41cfbfc7cab4bc","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Make rsec16.Coder use parallel applyMatrix","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/fab7bde5c977fc9d006403b3ab41cfbfc7cab4bc"}]},"public":true,"created_at":"2017-11-21T22:15:28Z"},{"id":"6887172442","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":96272523,"name":"akalin/gopar","url":"https://api.github.com/repos/akalin/gopar"},"payload":{"push_id":2141172608,"size":60,"distinct_size":4,"ref":"refs/heads/par2-e2e-bench","head":"afe5cb87565f64d0a328efcbe6a98e9f34b5830b","before":"d496da67031c6eac38fcf7022db1bbe3dcddda05","commits":[{"sha":"4286d00c970a4334f200391a8d70befcd68e1ae3","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Write recovery packets in ascending exponent order","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/4286d00c970a4334f200391a8d70befcd68e1ae3"},{"sha":"b7a20b1fb31b96ba4874c71f1ab804ce28e226c6","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Update PAR2 status in README.md\n\nFeature-End: par2","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/b7a20b1fb31b96ba4874c71f1ab804ce28e226c6"},{"sha":"da518f57b9ee7b78287a3a38753539757dfaa061","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add switch for CPU profile\n\nFeature-Start: par2-perf","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/da518f57b9ee7b78287a3a38753539757dfaa061"},{"sha":"eb08678f1e0a057d427bb9edccf3e91772ef3a99","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Handle SIGINT in par executable\n\nMake it stop the CPU profile, if any.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/eb08678f1e0a057d427bb9edccf3e91772ef3a99"},{"sha":"bbba3e3312777a0214ded0fa34218997b0f8396f","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add unit test for applyMatrix\n\nAlso add length check to applyMatrix.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/bbba3e3312777a0214ded0fa34218997b0f8396f"},{"sha":"6f4289f2eefb559d7b3255fed441cdf76038b924","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add benchmark for applyMatrix","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/6f4289f2eefb559d7b3255fed441cdf76038b924"},{"sha":"b863c7a4b35f02fd4e01628249f8211c32a54812","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Rewrite applyMatrix to use gf2p16 slice methods\n\nThis increases performance by roughly 10x, as measured by the\napplyMatrix benchmark.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/b863c7a4b35f02fd4e01628249f8211c32a54812"},{"sha":"f7c3249cae5d1a5e4e82775a0effd899ee22e787","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Remove optimization-related TODO\n\nBenchmarks show that it has a negative effect.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/f7c3249cae5d1a5e4e82775a0effd899ee22e787"},{"sha":"01af49eefd3724608815b04dc116c620aa5af32e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Avoid conversions to and from []uint16\n\nThis essentially moves all the work to MulByteSliceLE and\nMulAndAddByteSliceLE.\n\nNote that this slows down the benchmarks for applyMatrix by about 30%.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/01af49eefd3724608815b04dc116c620aa5af32e"},{"sha":"55aea6814a5a301c3dd41e4846febf1fcd583737","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Pull out inner loop of fillFileIntegrityInfos\n\nAlso add unit test and benchmark for it (fillShardInfos).","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/55aea6814a5a301c3dd41e4846febf1fcd583737"},{"sha":"f160cd8a54cb8fa86d1ad1ea27c3fb6aaf829625","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Speed up common case of fillShardInfos\n\nIncrement by sliceByteCount on a hit. This speeds up the common case of\nan uncorrupted file by 100x. This slows down the worst case of an\nunrelated file by ~6%.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/f160cd8a54cb8fa86d1ad1ea27c3fb6aaf829625"},{"sha":"65fe537ab6ac96ed431105d8a67f70762920810f","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add benchmark for gf2p16.Matrix.Inverse","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/65fe537ab6ac96ed431105d8a67f70762920810f"},{"sha":"aa39be5da62300d7021d9a9acbe8c3eae9586c51","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Reduce memory usage of gf2p16.Matrix.Inverse\n\nThis doesn't seem to help the benchmarks, though.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/aa39be5da62300d7021d9a9acbe8c3eae9586c51"},{"sha":"28141ec5282105af77ae7166ed28798ea204ce59","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Pull out reconstruction matrix construction\n\nAdd unit test and benchmark for it.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/28141ec5282105af77ae7166ed28798ea204ce59"},{"sha":"7b6eac080b6b4a4a6e240a438bea44cf1e6d0ca0","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Speed up makeReconstructionMatrix\n\nAdd a new function gf2p16.Matrix.RowReduceForInverse, and use that in\nmakeReconstructionMatrix to avoid having to row-reduce a large matrix.\n\nThis speeds up makeReconstructionMatrix by about 100x.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/7b6eac080b6b4a4a6e240a438bea44cf1e6d0ca0"},{"sha":"0892a638217acefcba03111ce06c80881ccad25c","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Don't verify parity files by default\n\nThis is to match the behavior of par2cmdline.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/0892a638217acefcba03111ce06c80881ccad25c"},{"sha":"23c91735cbfab1dc08255849f81b06386178952e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Don't check parity files by default when repairing","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/23c91735cbfab1dc08255849f81b06386178952e"},{"sha":"2da6afb7e723c702b4a5fef55062de7d7af1ef06","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement parallel version of applyMatrix\n\nAdd tests and benchmarks. Benchmarks show that hyperthreading doesn't\nhelp applyMatrix, and indeed setting the goroutine count to the number\nof physical cores is slightly faster than setting it to the number of\nvirtual cores.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/2da6afb7e723c702b4a5fef55062de7d7af1ef06"},{"sha":"67ecfcd97694eb19c50e98632c5c498c7ff5eabf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement another parallel version of applyMatrix\n\nBenchmarks show that it performs similarly to the existing parallel\nversion.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/67ecfcd97694eb19c50e98632c5c498c7ff5eabf"},{"sha":"fab7bde5c977fc9d006403b3ab41cfbfc7cab4bc","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Make rsec16.Coder use parallel applyMatrix","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/fab7bde5c977fc9d006403b3ab41cfbfc7cab4bc"}]},"public":true,"created_at":"2017-11-21T22:15:28Z"},{"id":"6887172398","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":96272523,"name":"akalin/gopar","url":"https://api.github.com/repos/akalin/gopar"},"payload":{"push_id":2141172591,"size":57,"distinct_size":1,"ref":"refs/heads/par2-avx2-amd64","head":"b2971e6f57550f53dcc392b5fc1a13b6c09d125e","before":"2028ecce6cdb02ea4c8a4c0af17163b6f047482d","commits":[{"sha":"4286d00c970a4334f200391a8d70befcd68e1ae3","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Write recovery packets in ascending exponent order","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/4286d00c970a4334f200391a8d70befcd68e1ae3"},{"sha":"b7a20b1fb31b96ba4874c71f1ab804ce28e226c6","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Update PAR2 status in README.md\n\nFeature-End: par2","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/b7a20b1fb31b96ba4874c71f1ab804ce28e226c6"},{"sha":"da518f57b9ee7b78287a3a38753539757dfaa061","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add switch for CPU profile\n\nFeature-Start: par2-perf","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/da518f57b9ee7b78287a3a38753539757dfaa061"},{"sha":"eb08678f1e0a057d427bb9edccf3e91772ef3a99","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Handle SIGINT in par executable\n\nMake it stop the CPU profile, if any.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/eb08678f1e0a057d427bb9edccf3e91772ef3a99"},{"sha":"bbba3e3312777a0214ded0fa34218997b0f8396f","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add unit test for applyMatrix\n\nAlso add length check to applyMatrix.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/bbba3e3312777a0214ded0fa34218997b0f8396f"},{"sha":"6f4289f2eefb559d7b3255fed441cdf76038b924","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add benchmark for applyMatrix","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/6f4289f2eefb559d7b3255fed441cdf76038b924"},{"sha":"b863c7a4b35f02fd4e01628249f8211c32a54812","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Rewrite applyMatrix to use gf2p16 slice methods\n\nThis increases performance by roughly 10x, as measured by the\napplyMatrix benchmark.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/b863c7a4b35f02fd4e01628249f8211c32a54812"},{"sha":"f7c3249cae5d1a5e4e82775a0effd899ee22e787","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Remove optimization-related TODO\n\nBenchmarks show that it has a negative effect.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/f7c3249cae5d1a5e4e82775a0effd899ee22e787"},{"sha":"01af49eefd3724608815b04dc116c620aa5af32e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Avoid conversions to and from []uint16\n\nThis essentially moves all the work to MulByteSliceLE and\nMulAndAddByteSliceLE.\n\nNote that this slows down the benchmarks for applyMatrix by about 30%.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/01af49eefd3724608815b04dc116c620aa5af32e"},{"sha":"55aea6814a5a301c3dd41e4846febf1fcd583737","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Pull out inner loop of fillFileIntegrityInfos\n\nAlso add unit test and benchmark for it (fillShardInfos).","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/55aea6814a5a301c3dd41e4846febf1fcd583737"},{"sha":"f160cd8a54cb8fa86d1ad1ea27c3fb6aaf829625","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Speed up common case of fillShardInfos\n\nIncrement by sliceByteCount on a hit. This speeds up the common case of\nan uncorrupted file by 100x. This slows down the worst case of an\nunrelated file by ~6%.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/f160cd8a54cb8fa86d1ad1ea27c3fb6aaf829625"},{"sha":"65fe537ab6ac96ed431105d8a67f70762920810f","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add benchmark for gf2p16.Matrix.Inverse","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/65fe537ab6ac96ed431105d8a67f70762920810f"},{"sha":"aa39be5da62300d7021d9a9acbe8c3eae9586c51","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Reduce memory usage of gf2p16.Matrix.Inverse\n\nThis doesn't seem to help the benchmarks, though.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/aa39be5da62300d7021d9a9acbe8c3eae9586c51"},{"sha":"28141ec5282105af77ae7166ed28798ea204ce59","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Pull out reconstruction matrix construction\n\nAdd unit test and benchmark for it.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/28141ec5282105af77ae7166ed28798ea204ce59"},{"sha":"7b6eac080b6b4a4a6e240a438bea44cf1e6d0ca0","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Speed up makeReconstructionMatrix\n\nAdd a new function gf2p16.Matrix.RowReduceForInverse, and use that in\nmakeReconstructionMatrix to avoid having to row-reduce a large matrix.\n\nThis speeds up makeReconstructionMatrix by about 100x.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/7b6eac080b6b4a4a6e240a438bea44cf1e6d0ca0"},{"sha":"0892a638217acefcba03111ce06c80881ccad25c","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Don't verify parity files by default\n\nThis is to match the behavior of par2cmdline.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/0892a638217acefcba03111ce06c80881ccad25c"},{"sha":"23c91735cbfab1dc08255849f81b06386178952e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Don't check parity files by default when repairing","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/23c91735cbfab1dc08255849f81b06386178952e"},{"sha":"2da6afb7e723c702b4a5fef55062de7d7af1ef06","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement parallel version of applyMatrix\n\nAdd tests and benchmarks. Benchmarks show that hyperthreading doesn't\nhelp applyMatrix, and indeed setting the goroutine count to the number\nof physical cores is slightly faster than setting it to the number of\nvirtual cores.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/2da6afb7e723c702b4a5fef55062de7d7af1ef06"},{"sha":"67ecfcd97694eb19c50e98632c5c498c7ff5eabf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement another parallel version of applyMatrix\n\nBenchmarks show that it performs similarly to the existing parallel\nversion.","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/67ecfcd97694eb19c50e98632c5c498c7ff5eabf"},{"sha":"fab7bde5c977fc9d006403b3ab41cfbfc7cab4bc","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Make rsec16.Coder use parallel applyMatrix","distinct":false,"url":"https://api.github.com/repos/akalin/gopar/commits/fab7bde5c977fc9d006403b3ab41cfbfc7cab4bc"}]},"public":true,"created_at":"2017-11-21T22:15:27Z"}]