[{"id":"7304217471","type":"IssueCommentEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/187","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/187/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/187/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/187/events","html_url":"https://github.com/buildinspace/peru/issues/187","id":299950131,"number":187,"title":"How to use `override`?","user":{"login":"loveencounterflow","id":1170565,"avatar_url":"https://avatars2.githubusercontent.com/u/1170565?v=4","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","html_url":"https://github.com/loveencounterflow","followers_url":"https://api.github.com/users/loveencounterflow/followers","following_url":"https://api.github.com/users/loveencounterflow/following{/other_user}","gists_url":"https://api.github.com/users/loveencounterflow/gists{/gist_id}","starred_url":"https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loveencounterflow/subscriptions","organizations_url":"https://api.github.com/users/loveencounterflow/orgs","repos_url":"https://api.github.com/users/loveencounterflow/repos","events_url":"https://api.github.com/users/loveencounterflow/events{/privacy}","received_events_url":"https://api.github.com/users/loveencounterflow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-02-24T15:48:04Z","updated_at":"2018-02-27T15:22:05Z","closed_at":null,"author_association":"NONE","body":"In the discussion of #186 I learned that `peru override` is the way to go when you want to develop an included ('guest') project from an including ('host') project; seen from the file layout, this would look like\r\n\r\n```\r\nguest-repo/\r\n  .git/\r\n  somefile\r\n  ...\r\nhost/\r\n  peru.yaml\r\n  guest-copy/\r\n    somefile\r\n    ...\r\n  ...\r\n```\r\n\r\nThe readme only states that `override` \"Replace[s] the contents of a module with a local directory path, usually a clone you've made of the same repo. This lets you test changes to imported modules without needing to push your changes upstream or edit `peru.yaml`.\" which leaves me puzzled how to organize my workflow. \r\n\r\nI'd greatly appreciate any help here because what I'm doing now is editing files in my local copy (`host/guest-copy/somefile`), seeing that the changed guest code works in the intended habitat, and then use `meld` to shuffle changes back to the guest repo (`guest-repo/somefile`). Clearly, that's less than ideal."},"comment":{"url":"https://api.github.com/repos/buildinspace/peru/issues/comments/368914033","html_url":"https://github.com/buildinspace/peru/issues/187#issuecomment-368914033","issue_url":"https://api.github.com/repos/buildinspace/peru/issues/187","id":368914033,"user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"created_at":"2018-02-27T15:22:05Z","updated_at":"2018-02-27T15:22:05Z","author_association":"OWNER","body":"OT: I'm convinced that the future is going to be something like [Bazel](https://bazel.build/) or [Buck](https://buckbuild.com/), but yeah, making a general purpose build tool is really hard. There are a lot of ways in which it's easier than it used to be (standardized formats like JSON/YAML/TOML are huge), but also the tools are expected to do more (run tests, compile docs, package for Android/iOS). It's hard to hit a sweet spot where your tool is being really helpful, without forcing projects to be organized some very specific way that not everyone likes."}},"public":true,"created_at":"2018-02-27T15:22:06Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7303930188","type":"WatchEvent","actor":{"id":2513393,"login":"justinpersaud","display_login":"justinpersaud","gravatar_id":"","url":"https://api.github.com/users/justinpersaud","avatar_url":"https://avatars.githubusercontent.com/u/2513393?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-27T14:36:34Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7303104961","type":"IssueCommentEvent","actor":{"id":1170565,"login":"loveencounterflow","display_login":"loveencounterflow","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","avatar_url":"https://avatars.githubusercontent.com/u/1170565?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/187","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/187/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/187/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/187/events","html_url":"https://github.com/buildinspace/peru/issues/187","id":299950131,"number":187,"title":"How to use `override`?","user":{"login":"loveencounterflow","id":1170565,"avatar_url":"https://avatars2.githubusercontent.com/u/1170565?v=4","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","html_url":"https://github.com/loveencounterflow","followers_url":"https://api.github.com/users/loveencounterflow/followers","following_url":"https://api.github.com/users/loveencounterflow/following{/other_user}","gists_url":"https://api.github.com/users/loveencounterflow/gists{/gist_id}","starred_url":"https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loveencounterflow/subscriptions","organizations_url":"https://api.github.com/users/loveencounterflow/orgs","repos_url":"https://api.github.com/users/loveencounterflow/repos","events_url":"https://api.github.com/users/loveencounterflow/events{/privacy}","received_events_url":"https://api.github.com/users/loveencounterflow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-02-24T15:48:04Z","updated_at":"2018-02-27T11:58:05Z","closed_at":null,"author_association":"NONE","body":"In the discussion of #186 I learned that `peru override` is the way to go when you want to develop an included ('guest') project from an including ('host') project; seen from the file layout, this would look like\r\n\r\n```\r\nguest-repo/\r\n  .git/\r\n  somefile\r\n  ...\r\nhost/\r\n  peru.yaml\r\n  guest-copy/\r\n    somefile\r\n    ...\r\n  ...\r\n```\r\n\r\nThe readme only states that `override` \"Replace[s] the contents of a module with a local directory path, usually a clone you've made of the same repo. This lets you test changes to imported modules without needing to push your changes upstream or edit `peru.yaml`.\" which leaves me puzzled how to organize my workflow. \r\n\r\nI'd greatly appreciate any help here because what I'm doing now is editing files in my local copy (`host/guest-copy/somefile`), seeing that the changed guest code works in the intended habitat, and then use `meld` to shuffle changes back to the guest repo (`guest-repo/somefile`). Clearly, that's less than ideal."},"comment":{"url":"https://api.github.com/repos/buildinspace/peru/issues/comments/368850751","html_url":"https://github.com/buildinspace/peru/issues/187#issuecomment-368850751","issue_url":"https://api.github.com/repos/buildinspace/peru/issues/187","id":368850751,"user":{"login":"loveencounterflow","id":1170565,"avatar_url":"https://avatars2.githubusercontent.com/u/1170565?v=4","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","html_url":"https://github.com/loveencounterflow","followers_url":"https://api.github.com/users/loveencounterflow/followers","following_url":"https://api.github.com/users/loveencounterflow/following{/other_user}","gists_url":"https://api.github.com/users/loveencounterflow/gists{/gist_id}","starred_url":"https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loveencounterflow/subscriptions","organizations_url":"https://api.github.com/users/loveencounterflow/orgs","repos_url":"https://api.github.com/users/loveencounterflow/repos","events_url":"https://api.github.com/users/loveencounterflow/events{/privacy}","received_events_url":"https://api.github.com/users/loveencounterflow/received_events","type":"User","site_admin":false},"created_at":"2018-02-27T11:58:05Z","updated_at":"2018-02-27T11:58:05Z","author_association":"NONE","body":"I'm doing exactly as you say as I'm writing this, so give me a few hours before I come back to you with my experiences in this new way of doing this. I guess I will be able to live with the extra sync step; after all, I can always do `peru sync && run-host-tests` so I don't have to, erh, manually think about that each time I run a test. It's definitely great if I can avoid the roundtrip to and from the guest repo, b/c apart from being several extra steps in different folders, it also means a lot of nonce commits (i.e. commits that happened before testing and have to be fixed or amended or whatever). \r\n\r\nBTW my guest repo here is https://github.com/loveencounterflow/intershop, and when you look at the commit history you'll see it has already suffered from a lot of `update` and `pull in changes from m3`, so I'm glad to find a way to avoid both wholesale and nonce commits as far as feasible).\r\n\r\nTotally OT but just want to add that reading about how to build things and do stuff with peru I started to look into makefiles, first time of all. I must say tho I'm totally aghast as for the syntax of makefiles as well as all the built-in silent assumptions and the dirty tricks you have to play to make non-file targets work, the lack of `if`/`else` branching in the original version that later caused conflicting standards, and and and. I've since re-discovered `rake` for doing everything that peru can't, won't and shouldn't provide, and I'm quite happy with it."}},"public":true,"created_at":"2018-02-27T11:58:05Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7298712388","type":"WatchEvent","actor":{"id":176253,"login":"stevenscg","display_login":"stevenscg","gravatar_id":"","url":"https://api.github.com/users/stevenscg","avatar_url":"https://avatars.githubusercontent.com/u/176253?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-26T17:47:08Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7293985241","type":"IssueCommentEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/187","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/187/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/187/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/187/events","html_url":"https://github.com/buildinspace/peru/issues/187","id":299950131,"number":187,"title":"How to use `override`?","user":{"login":"loveencounterflow","id":1170565,"avatar_url":"https://avatars2.githubusercontent.com/u/1170565?v=4","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","html_url":"https://github.com/loveencounterflow","followers_url":"https://api.github.com/users/loveencounterflow/followers","following_url":"https://api.github.com/users/loveencounterflow/following{/other_user}","gists_url":"https://api.github.com/users/loveencounterflow/gists{/gist_id}","starred_url":"https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loveencounterflow/subscriptions","organizations_url":"https://api.github.com/users/loveencounterflow/orgs","repos_url":"https://api.github.com/users/loveencounterflow/repos","events_url":"https://api.github.com/users/loveencounterflow/events{/privacy}","received_events_url":"https://api.github.com/users/loveencounterflow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-24T15:48:04Z","updated_at":"2018-02-25T19:27:22Z","closed_at":null,"author_association":"NONE","body":"In the discussion of #186 I learned that `peru override` is the way to go when you want to develop an included ('guest') project from an including ('host') project; seen from the file layout, this would look like\r\n\r\n```\r\nguest-repo/\r\n  .git/\r\n  somefile\r\n  ...\r\nhost/\r\n  peru.yaml\r\n  guest-copy/\r\n    somefile\r\n    ...\r\n  ...\r\n```\r\n\r\nThe readme only states that `override` \"Replace[s] the contents of a module with a local directory path, usually a clone you've made of the same repo. This lets you test changes to imported modules without needing to push your changes upstream or edit `peru.yaml`.\" which leaves me puzzled how to organize my workflow. \r\n\r\nI'd greatly appreciate any help here because what I'm doing now is editing files in my local copy (`host/guest-copy/somefile`), seeing that the changed guest code works in the intended habitat, and then use `meld` to shuffle changes back to the guest repo (`guest-repo/somefile`). Clearly, that's less than ideal."},"comment":{"url":"https://api.github.com/repos/buildinspace/peru/issues/comments/368336967","html_url":"https://github.com/buildinspace/peru/issues/187#issuecomment-368336967","issue_url":"https://api.github.com/repos/buildinspace/peru/issues/187","id":368336967,"user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"created_at":"2018-02-25T19:27:22Z","updated_at":"2018-02-25T19:27:22Z","author_association":"OWNER","body":"Sorry for not having any examples of this available. Maybe by thinking about your workflow together, we can come up with a good example and add it to the docs?\r\n\r\nThe idea is that you would run:\r\n\r\n    # `guest` is whatever you named your module in peru.yaml\r\n    peru override add guest ../guest-repo\r\n\r\nThen you make your edits in `guest-repo/somefile`, and you rerun `peru sync` in your `host` project to pull them in. Rather than fetching the latest commit from`guest`'s GitHub url (or whatever), `peru` will just read whatever files are sitting at the `../guest-repo` path.\r\n\r\nRunning `peru sync` manually to pull in the changes can be a little bit annoying. However, the goal is that it should be easy to integrate `peru` into whatever script or testing command you were about to run afterwards. So for example, if you normally call `make test` in your `host` repo after you've pulled in changes, you might consider putting `peru sync` at the top of the list of commands that `make test` runs. (Some [more interesting integrations with `make`](https://github.com/buildinspace/peru/tree/master/docs/make_examples) are possible too.)"}},"public":true,"created_at":"2018-02-25T19:27:22Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7292773978","type":"WatchEvent","actor":{"id":9158722,"login":"gionniboy","display_login":"gionniboy","gravatar_id":"","url":"https://api.github.com/users/gionniboy","avatar_url":"https://avatars.githubusercontent.com/u/9158722?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-25T05:56:48Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7291593131","type":"IssuesEvent","actor":{"id":1170565,"login":"loveencounterflow","display_login":"loveencounterflow","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","avatar_url":"https://avatars.githubusercontent.com/u/1170565?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/187","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/187/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/187/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/187/events","html_url":"https://github.com/buildinspace/peru/issues/187","id":299950131,"number":187,"title":"How to use `override`?","user":{"login":"loveencounterflow","id":1170565,"avatar_url":"https://avatars2.githubusercontent.com/u/1170565?v=4","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","html_url":"https://github.com/loveencounterflow","followers_url":"https://api.github.com/users/loveencounterflow/followers","following_url":"https://api.github.com/users/loveencounterflow/following{/other_user}","gists_url":"https://api.github.com/users/loveencounterflow/gists{/gist_id}","starred_url":"https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loveencounterflow/subscriptions","organizations_url":"https://api.github.com/users/loveencounterflow/orgs","repos_url":"https://api.github.com/users/loveencounterflow/repos","events_url":"https://api.github.com/users/loveencounterflow/events{/privacy}","received_events_url":"https://api.github.com/users/loveencounterflow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-24T15:48:04Z","updated_at":"2018-02-24T15:48:04Z","closed_at":null,"author_association":"NONE","body":"In the discussion of #186 I learned that `peru override` is the way to go when you want to develop an included ('guest') project from an including ('host') project; seen from the file layout, this would look like\r\n\r\n```\r\nhost-repo/\r\n  .git/"}},"public":true,"created_at":"2018-02-24T15:48:04Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7291587876","type":"IssuesEvent","actor":{"id":1170565,"login":"loveencounterflow","display_login":"loveencounterflow","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","avatar_url":"https://avatars.githubusercontent.com/u/1170565?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/186","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/186/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/186/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/186/events","html_url":"https://github.com/buildinspace/peru/issues/186","id":298963576,"number":186,"title":"Use `sha1sum` to detect changes","user":{"login":"loveencounterflow","id":1170565,"avatar_url":"https://avatars2.githubusercontent.com/u/1170565?v=4","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","html_url":"https://github.com/loveencounterflow","followers_url":"https://api.github.com/users/loveencounterflow/followers","following_url":"https://api.github.com/users/loveencounterflow/following{/other_user}","gists_url":"https://api.github.com/users/loveencounterflow/gists{/gist_id}","starred_url":"https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loveencounterflow/subscriptions","organizations_url":"https://api.github.com/users/loveencounterflow/orgs","repos_url":"https://api.github.com/users/loveencounterflow/repos","events_url":"https://api.github.com/users/loveencounterflow/events{/privacy}","received_events_url":"https://api.github.com/users/loveencounterflow/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2018-02-21T13:09:16Z","updated_at":"2018-02-24T15:44:45Z","closed_at":"2018-02-24T15:44:45Z","author_association":"NONE","body":"I have a workflow where I develop a 'guest' project that lives in a subfolder of a 'host' project. When I want to make changes in the guest, it is much easier and straightforward to not do them in the guest's original repository but right in the subfolder within the host; that way, a test run immediately shows me whether my updates work. I then use a diff/merge tool (`meld`) to merge all changes back into the guest's repository, from where I commit and push to remote. \r\n\r\nAt that moment in time, the contentent of the referenced guest repo and the contents of the guest subfolder are 100% identical. Sadly, when I then do `peru reup`, `peru` will complain that 'imported files have been modified', which is sort of true and sort of false. It's true that I did touch those files, but their contents are bit-identical with the ones that peru will only import with `--force`. IMHO this is questionable behavior; if I want to do `cp A B` but avoid to overwrite changes, then, clearly, when `sha1sum A` equals `sha1sum B`, I can totally do or not do `cp A B` (the only difference being possibly the file dates on `B`). At any rate, it should *not* cause `peru` to abort as no content changes will be effected either way.\r\n\r\nMy suggestion is to first check both the new and the old files' `sha1sum`s, and never opt out when both are identical."}},"public":true,"created_at":"2018-02-24T15:44:45Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7277366412","type":"IssueCommentEvent","actor":{"id":1170565,"login":"loveencounterflow","display_login":"loveencounterflow","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","avatar_url":"https://avatars.githubusercontent.com/u/1170565?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/186","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/186/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/186/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/186/events","html_url":"https://github.com/buildinspace/peru/issues/186","id":298963576,"number":186,"title":"Use `sha1sum` to detect changes","user":{"login":"loveencounterflow","id":1170565,"avatar_url":"https://avatars2.githubusercontent.com/u/1170565?v=4","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","html_url":"https://github.com/loveencounterflow","followers_url":"https://api.github.com/users/loveencounterflow/followers","following_url":"https://api.github.com/users/loveencounterflow/following{/other_user}","gists_url":"https://api.github.com/users/loveencounterflow/gists{/gist_id}","starred_url":"https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loveencounterflow/subscriptions","organizations_url":"https://api.github.com/users/loveencounterflow/orgs","repos_url":"https://api.github.com/users/loveencounterflow/repos","events_url":"https://api.github.com/users/loveencounterflow/events{/privacy}","received_events_url":"https://api.github.com/users/loveencounterflow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-02-21T13:09:16Z","updated_at":"2018-02-21T19:14:32Z","closed_at":null,"author_association":"NONE","body":"I have a workflow where I develop a 'guest' project that lives in a subfolder of a 'host' project. When I want to make changes in the guest, it is much easier and straightforward to not do them in the guest's original repository but right in the subfolder within the host; that way, a test run immediately shows me whether my updates work. I then use a diff/merge tool (`meld`) to merge all changes back into the guest's repository, from where I commit and push to remote. \r\n\r\nAt that moment in time, the contentent of the referenced guest repo and the contents of the guest subfolder are 100% identical. Sadly, when I then do `peru reup`, `peru` will complain that 'imported files have been modified', which is sort of true and sort of false. It's true that I did touch those files, but their contents are bit-identical with the ones that peru will only import with `--force`. IMHO this is questionable behavior; if I want to do `cp A B` but avoid to overwrite changes, then, clearly, when `sha1sum A` equals `sha1sum B`, I can totally do or not do `cp A B` (the only difference being possibly the file dates on `B`). At any rate, it should *not* cause `peru` to abort as no content changes will be effected either way.\r\n\r\nMy suggestion is to first check both the new and the old files' `sha1sum`s, and never opt out when both are identical."},"comment":{"url":"https://api.github.com/repos/buildinspace/peru/issues/comments/367437704","html_url":"https://github.com/buildinspace/peru/issues/186#issuecomment-367437704","issue_url":"https://api.github.com/repos/buildinspace/peru/issues/186","id":367437704,"user":{"login":"loveencounterflow","id":1170565,"avatar_url":"https://avatars2.githubusercontent.com/u/1170565?v=4","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","html_url":"https://github.com/loveencounterflow","followers_url":"https://api.github.com/users/loveencounterflow/followers","following_url":"https://api.github.com/users/loveencounterflow/following{/other_user}","gists_url":"https://api.github.com/users/loveencounterflow/gists{/gist_id}","starred_url":"https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loveencounterflow/subscriptions","organizations_url":"https://api.github.com/users/loveencounterflow/orgs","repos_url":"https://api.github.com/users/loveencounterflow/repos","events_url":"https://api.github.com/users/loveencounterflow/events{/privacy}","received_events_url":"https://api.github.com/users/loveencounterflow/received_events","type":"User","site_admin":false},"created_at":"2018-02-21T19:14:32Z","updated_at":"2018-02-21T19:14:32Z","author_association":"NONE","body":"Thanks for your detailed answer. I do not claim I fully understand your scenario, though. \r\n\r\nA year ago or so I was on the brink of writing a dependency resolution module myself and I'm now happy that it went quickly over my head and I never came around to actually doing it. What that stint taught me tho is that file modification dates are a relatively poor proxy for like anything; on the one hand, there are file systems with a granularity of one entire second (OSX HPFS used to be among them), and on the other, a mere `touch`-like action can make a file look arbitrarily new anytime (not to speak of the vagaries that come with unpacking from archives or explicit setting of dates to the past or future). \r\n\r\nHence, I've come to use file dates only as cheap excuse or last straw; the only real thing to me is file contents. I fully understand that Peru does and should resist the urge to manage in-situ dependency edits or do merges, with or without supervision. But this is not my point; my suggestion is to obtain a `sha1sum` from each file in the newly obtained (or cached) copy of the guest project, and then check each of those content hashes against those in the already installed copy of the guest. A correspondence of all hashes cannot possibly allow for any undetected change in the installed copy.\r\n\r\nBTW I just tried and deleted a file from an installed guest copy, then did `peru reup`, and voila, I did get it back without even a notice; I gather this is the intended behavior. But then I did `touch` that same file, and `peru reup` ran without complaints. Then I changed one character (Peru complains) and changed it back (Peru is silent). Tried the same with a minimally updated guest version in the repo, same. Now I'm confused, because hours ago I did an `sah1sum` on each of the files in question, and they were source-identical, and yet Peru complained. That looked like file dates being to new, but the experiment I did as I'm writing this would indicate otherwise. "}},"public":true,"created_at":"2018-02-21T19:14:32Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7276538443","type":"IssueCommentEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/186","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/186/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/186/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/186/events","html_url":"https://github.com/buildinspace/peru/issues/186","id":298963576,"number":186,"title":"Use `sha1sum` to detect changes","user":{"login":"loveencounterflow","id":1170565,"avatar_url":"https://avatars2.githubusercontent.com/u/1170565?v=4","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","html_url":"https://github.com/loveencounterflow","followers_url":"https://api.github.com/users/loveencounterflow/followers","following_url":"https://api.github.com/users/loveencounterflow/following{/other_user}","gists_url":"https://api.github.com/users/loveencounterflow/gists{/gist_id}","starred_url":"https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loveencounterflow/subscriptions","organizations_url":"https://api.github.com/users/loveencounterflow/orgs","repos_url":"https://api.github.com/users/loveencounterflow/repos","events_url":"https://api.github.com/users/loveencounterflow/events{/privacy}","received_events_url":"https://api.github.com/users/loveencounterflow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-21T13:09:16Z","updated_at":"2018-02-21T16:39:00Z","closed_at":null,"author_association":"NONE","body":"I have a workflow where I develop a 'guest' project that lives in a subfolder of a 'host' project. When I want to make changes in the guest, it is much easier and straightforward to not do them in the guest's original repository but right in the subfolder within the host; that way, a test run immediately shows me whether my updates work. I then use a diff/merge tool (`meld`) to merge all changes back into the guest's repository, from where I commit and push to remote. \r\n\r\nAt that moment in time, the contentent of the referenced guest repo and the contents of the guest subfolder are 100% identical. Sadly, when I then do `peru reup`, `peru` will complain that 'imported files have been modified', which is sort of true and sort of false. It's true that I did touch those files, but their contents are bit-identical with the ones that peru will only import with `--force`. IMHO this is questionable behavior; if I want to do `cp A B` but avoid to overwrite changes, then, clearly, when `sha1sum A` equals `sha1sum B`, I can totally do or not do `cp A B` (the only difference being possibly the file dates on `B`). At any rate, it should *not* cause `peru` to abort as no content changes will be effected either way.\r\n\r\nMy suggestion is to first check both the new and the old files' `sha1sum`s, and never opt out when both are identical."},"comment":{"url":"https://api.github.com/repos/buildinspace/peru/issues/comments/367388164","html_url":"https://github.com/buildinspace/peru/issues/186#issuecomment-367388164","issue_url":"https://api.github.com/repos/buildinspace/peru/issues/186","id":367388164,"user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"created_at":"2018-02-21T16:39:00Z","updated_at":"2018-02-21T16:39:00Z","author_association":"OWNER","body":"I thought about this a little when we were first coding the `sync` rules, and the reason I chose what we have now is that I'm a little worried about peru implicitly \"taking ownership\" of your changes. For example, consider the following flow:\r\n\r\n1. I do a `peru reup`, and it pulls in some new line X in one of my dependencies, which breaks something.\r\n2. I manually delete X to see what happens without it. My peru files are now dirty.\r\n3. I checkout an older commit to do more testing. I run `peru sync`, maybe just as part of my test scripts.\r\n4. I checkout the latest commit again, and `peru sync`.\r\n\r\nThere are two different things that could happen in this flow. With the current behavior, step 3 is an error, because I've edited dependency files relative to the _last version that was synced_. But if we change the current behavior in the way you're describing, perhaps step 3 will work, if line X was the only difference between the old dependencies and the new ones. That means that in step 4, `peru sync` will _undo_ my deletion of X. Essentially, peru \"forgot\" that that change was \"mine\" in step 3.\r\n\r\nThis is a kind of trivial example, but I worry it could lead to surprising behavior under the right conditions. Since the `--force` flag is a relatively clean way to make this work today, I lean towards keeping the current defaults.\r\n\r\nI'm also curious whether you've tried a workflow based on `peru override`. An \"edit dependencies in place\" workflow is by far the most commonly requested feature, but it's also one of the very first things we decided _not_ to do with peru, because it gets very complicated very quickly. The override mechanism fits more cleanly into peru's model, and I'm curious whether it might work for you."}},"public":true,"created_at":"2018-02-21T16:39:01Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7275305598","type":"IssuesEvent","actor":{"id":1170565,"login":"loveencounterflow","display_login":"loveencounterflow","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","avatar_url":"https://avatars.githubusercontent.com/u/1170565?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/186","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/186/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/186/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/186/events","html_url":"https://github.com/buildinspace/peru/issues/186","id":298963576,"number":186,"title":"Use `sha1sum` to detect changes","user":{"login":"loveencounterflow","id":1170565,"avatar_url":"https://avatars2.githubusercontent.com/u/1170565?v=4","gravatar_id":"","url":"https://api.github.com/users/loveencounterflow","html_url":"https://github.com/loveencounterflow","followers_url":"https://api.github.com/users/loveencounterflow/followers","following_url":"https://api.github.com/users/loveencounterflow/following{/other_user}","gists_url":"https://api.github.com/users/loveencounterflow/gists{/gist_id}","starred_url":"https://api.github.com/users/loveencounterflow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/loveencounterflow/subscriptions","organizations_url":"https://api.github.com/users/loveencounterflow/orgs","repos_url":"https://api.github.com/users/loveencounterflow/repos","events_url":"https://api.github.com/users/loveencounterflow/events{/privacy}","received_events_url":"https://api.github.com/users/loveencounterflow/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-21T13:09:16Z","updated_at":"2018-02-21T13:09:16Z","closed_at":null,"author_association":"NONE","body":"I have a workflow where I develop a 'guest' project that lives in a subfolder of a 'host' project. When I want to make changes in the guest, it is much easier and straightforward to not do them in the guest's original repository but right in the subfolder within the host; that way, a test run immediately shows me whether my updates work. I then use a diff/merge tool (`meld`) to merge all changes back into the guest's repository, from where I commit and push to remote. \r\n\r\nAt that moment in time, the contentent of the referenced guest repo and the contents of the guest subfolder are 100% identical. Sadly, when I then do `peru reup`, `peru` will complain that 'imported files have been modified', which is sort of true and sort of false. It's true that I did touch those files, but their contents are bit-identical with the ones that peru will only import with `--force`. IMHO this is questionable behavior; if I want to do `cp A B` but avoid to overwrite changes, then, clearly, `sha1sum A` equals `sha1sum B` I can totally do or not do `cp A B`, the only difference being possibly the file dates on `B` that get updated on copy. At any rate, it should cause an opt-out as no content changes will be effected either way.\r\n\r\nMy suggestion is to first check both the new and the old files' `sha1sum`s, and never opt out when both are identical."}},"public":true,"created_at":"2018-02-21T13:09:17Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7193146949","type":"WatchEvent","actor":{"id":4984415,"login":"MyIsaak","display_login":"MyIsaak","gravatar_id":"","url":"https://api.github.com/users/MyIsaak","avatar_url":"https://avatars.githubusercontent.com/u/4984415?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-03T13:18:59Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7190158819","type":"WatchEvent","actor":{"id":103670,"login":"hebertialmeida","display_login":"hebertialmeida","gravatar_id":"","url":"https://api.github.com/users/hebertialmeida","avatar_url":"https://avatars.githubusercontent.com/u/103670?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-02T16:20:23Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7057366510","type":"WatchEvent","actor":{"id":965353,"login":"mkly","display_login":"mkly","gravatar_id":"","url":"https://api.github.com/users/mkly","avatar_url":"https://avatars.githubusercontent.com/u/965353?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"started"},"public":true,"created_at":"2018-01-04T16:12:33Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7050968620","type":"WatchEvent","actor":{"id":6493022,"login":"JohanSpaedtke","display_login":"JohanSpaedtke","gravatar_id":"","url":"https://api.github.com/users/JohanSpaedtke","avatar_url":"https://avatars.githubusercontent.com/u/6493022?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"started"},"public":true,"created_at":"2018-01-03T09:35:16Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7037049199","type":"WatchEvent","actor":{"id":849165,"login":"kazuph","display_login":"kazuph","gravatar_id":"","url":"https://api.github.com/users/kazuph","avatar_url":"https://avatars.githubusercontent.com/u/849165?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"started"},"public":true,"created_at":"2017-12-28T12:33:35Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"7025042466","type":"WatchEvent","actor":{"id":800355,"login":"jbrubake","display_login":"jbrubake","gravatar_id":"","url":"https://api.github.com/users/jbrubake","avatar_url":"https://avatars.githubusercontent.com/u/800355?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"started"},"public":true,"created_at":"2017-12-23T03:26:47Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6986623568","type":"WatchEvent","actor":{"id":11281966,"login":"dcarastan","display_login":"dcarastan","gravatar_id":"","url":"https://api.github.com/users/dcarastan","avatar_url":"https://avatars.githubusercontent.com/u/11281966?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"started"},"public":true,"created_at":"2017-12-14T04:46:24Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6969116547","type":"WatchEvent","actor":{"id":451178,"login":"specious","display_login":"specious","gravatar_id":"","url":"https://api.github.com/users/specious","avatar_url":"https://avatars.githubusercontent.com/u/451178?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"started"},"public":true,"created_at":"2017-12-11T02:56:21Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6964364274","type":"IssuesEvent","actor":{"id":25551436,"login":"larsdabney","display_login":"larsdabney","gravatar_id":"","url":"https://api.github.com/users/larsdabney","avatar_url":"https://avatars.githubusercontent.com/u/25551436?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/185","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/185/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/185/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/185/events","html_url":"https://github.com/buildinspace/peru/issues/185","id":280620400,"number":185,"title":"an","user":{"login":"larsdabney","id":25551436,"avatar_url":"https://avatars1.githubusercontent.com/u/25551436?v=4","gravatar_id":"","url":"https://api.github.com/users/larsdabney","html_url":"https://github.com/larsdabney","followers_url":"https://api.github.com/users/larsdabney/followers","following_url":"https://api.github.com/users/larsdabney/following{/other_user}","gists_url":"https://api.github.com/users/larsdabney/gists{/gist_id}","starred_url":"https://api.github.com/users/larsdabney/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/larsdabney/subscriptions","organizations_url":"https://api.github.com/users/larsdabney/orgs","repos_url":"https://api.github.com/users/larsdabney/repos","events_url":"https://api.github.com/users/larsdabney/events{/privacy}","received_events_url":"https://api.github.com/users/larsdabney/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-12-08T21:20:38Z","updated_at":"2017-12-08T21:20:38Z","closed_at":null,"author_association":"NONE","body":""}},"public":true,"created_at":"2017-12-08T21:20:38Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6928468784","type":"PushEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"push_id":2163248302,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"391f18cdc5bec51ff33920f879138945056d0d81","before":"b80e0b3c4518168159b6ea800f3476a0ad7f286f","commits":[{"sha":"391f18cdc5bec51ff33920f879138945056d0d81","author":{"email":"oconnor663@gmail.com","name":"Jack O'Connor"},"message":"add a PyPI badge to the README","distinct":true,"url":"https://api.github.com/repos/buildinspace/peru/commits/391f18cdc5bec51ff33920f879138945056d0d81"}]},"public":true,"created_at":"2017-12-01T05:07:41Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6928457103","type":"WatchEvent","actor":{"id":1553398,"login":"sitkevij","display_login":"sitkevij","gravatar_id":"","url":"https://api.github.com/users/sitkevij","avatar_url":"https://avatars.githubusercontent.com/u/1553398?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"started"},"public":true,"created_at":"2017-12-01T05:02:28Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6928409934","type":"IssueCommentEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/181","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/181/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/181/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/181/events","html_url":"https://github.com/buildinspace/peru/issues/181","id":250960917,"number":181,"title":"a `peru diff` command, which shows dirty files","user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2017-08-17T14:21:20Z","updated_at":"2017-12-01T04:41:12Z","closed_at":null,"author_association":"OWNER","body":"This should be a natural extension of the dirty file detection. Just call `git diff` with the synced tree."},"comment":{"url":"https://api.github.com/repos/buildinspace/peru/issues/comments/348399619","html_url":"https://github.com/buildinspace/peru/issues/181#issuecomment-348399619","issue_url":"https://api.github.com/repos/buildinspace/peru/issues/181","id":348399619,"user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"created_at":"2017-12-01T04:41:11Z","updated_at":"2017-12-01T04:41:11Z","author_association":"OWNER","body":"Not to be confused with the..._other_ `peru diff` command I've considered adding :p https://github.com/buildinspace/peru/issues/56"}},"public":true,"created_at":"2017-12-01T04:41:12Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6928407448","type":"IssuesEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/128","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/128/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/128/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/128/events","html_url":"https://github.com/buildinspace/peru/issues/128","id":104239021,"number":128,"title":"total lack of useful context in error messages","user":{"login":"oryband","id":115387,"avatar_url":"https://avatars2.githubusercontent.com/u/115387?v=4","gravatar_id":"","url":"https://api.github.com/users/oryband","html_url":"https://github.com/oryband","followers_url":"https://api.github.com/users/oryband/followers","following_url":"https://api.github.com/users/oryband/following{/other_user}","gists_url":"https://api.github.com/users/oryband/gists{/gist_id}","starred_url":"https://api.github.com/users/oryband/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oryband/subscriptions","organizations_url":"https://api.github.com/users/oryband/orgs","repos_url":"https://api.github.com/users/oryband/repos","events_url":"https://api.github.com/users/oryband/events{/privacy}","received_events_url":"https://api.github.com/users/oryband/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2015-09-01T10:47:09Z","updated_at":"2017-12-01T04:40:03Z","closed_at":"2017-12-01T04:40:03Z","author_association":"NONE","body":"using the following `peru.yaml`:\n\n``` yaml\nimports:\n  repo: dir/\n\ngit module repo:\n  url: git@github.com:me/repo.git\n  pick: inner_dir/**\n```\n\nand then invoking `peru sync` results in:\n\n```\nThe \"files\" field is no longer supported. Use \"pick\" instead.\n```\n\nas you can see i'm not using `fields` at all. this also happens if I remove the `pick:` line.\n\nany idea?\n"}},"public":true,"created_at":"2017-12-01T04:40:03Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6928393264","type":"IssuesEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/169","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/169/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/169/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/169/events","html_url":"https://github.com/buildinspace/peru/issues/169","id":179266006,"number":169,"title":"Please catch your exceptions","user":{"login":"kergoth","id":9367,"avatar_url":"https://avatars2.githubusercontent.com/u/9367?v=4","gravatar_id":"","url":"https://api.github.com/users/kergoth","html_url":"https://github.com/kergoth","followers_url":"https://api.github.com/users/kergoth/followers","following_url":"https://api.github.com/users/kergoth/following{/other_user}","gists_url":"https://api.github.com/users/kergoth/gists{/gist_id}","starred_url":"https://api.github.com/users/kergoth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kergoth/subscriptions","organizations_url":"https://api.github.com/users/kergoth/orgs","repos_url":"https://api.github.com/users/kergoth/repos","events_url":"https://api.github.com/users/kergoth/events{/privacy}","received_events_url":"https://api.github.com/users/kergoth/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"assignees":[{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false}],"milestone":null,"comments":8,"created_at":"2016-09-26T15:48:21Z","updated_at":"2017-12-01T04:34:07Z","closed_at":"2017-12-01T04:34:07Z","author_association":"NONE","body":"I'm tired of seeing screenfuls of tons of stack traces every time there's a problem, and then wasting a ton of time digging through it to figure out what's wrong.\n\nAs one example:\n\n```\n  Traceback (most recent call last):\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/urllib/request.py\", line 1254, in do_open\n      h.request(req.get_method(), req.selector, req.data, headers)\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/client.py\", line 1106, in request\n      self._send_request(method, url, body, headers)\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/client.py\", line 1151, in _send_request\n      self.endheaders(body)\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/client.py\", line 1102, in endheaders\n      self._send_output(message_body)\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/client.py\", line 934, in _send_output\n      self.send(msg)\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/client.py\", line 877, in send\n      self.connect()\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/client.py\", line 849, in connect\n      (self.host,self.port), self.timeout, self.source_address)\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/socket.py\", line 711, in create_connection\n      raise err\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/socket.py\", line 702, in create_connection\n      sock.connect(sa)\n  OSError: [Errno 65] No route to host\n```\n"}},"public":true,"created_at":"2017-12-01T04:34:07Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6928393259","type":"IssueCommentEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/169","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/169/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/169/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/169/events","html_url":"https://github.com/buildinspace/peru/issues/169","id":179266006,"number":169,"title":"Please catch your exceptions","user":{"login":"kergoth","id":9367,"avatar_url":"https://avatars2.githubusercontent.com/u/9367?v=4","gravatar_id":"","url":"https://api.github.com/users/kergoth","html_url":"https://github.com/kergoth","followers_url":"https://api.github.com/users/kergoth/followers","following_url":"https://api.github.com/users/kergoth/following{/other_user}","gists_url":"https://api.github.com/users/kergoth/gists{/gist_id}","starred_url":"https://api.github.com/users/kergoth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kergoth/subscriptions","organizations_url":"https://api.github.com/users/kergoth/orgs","repos_url":"https://api.github.com/users/kergoth/repos","events_url":"https://api.github.com/users/kergoth/events{/privacy}","received_events_url":"https://api.github.com/users/kergoth/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"assignees":[{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false}],"milestone":null,"comments":7,"created_at":"2016-09-26T15:48:21Z","updated_at":"2017-12-01T04:34:07Z","closed_at":"2017-12-01T04:34:07Z","author_association":"NONE","body":"I'm tired of seeing screenfuls of tons of stack traces every time there's a problem, and then wasting a ton of time digging through it to figure out what's wrong.\n\nAs one example:\n\n```\n  Traceback (most recent call last):\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/urllib/request.py\", line 1254, in do_open\n      h.request(req.get_method(), req.selector, req.data, headers)\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/client.py\", line 1106, in request\n      self._send_request(method, url, body, headers)\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/client.py\", line 1151, in _send_request\n      self.endheaders(body)\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/client.py\", line 1102, in endheaders\n      self._send_output(message_body)\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/client.py\", line 934, in _send_output\n      self.send(msg)\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/client.py\", line 877, in send\n      self.connect()\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/http/client.py\", line 849, in connect\n      (self.host,self.port), self.timeout, self.source_address)\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/socket.py\", line 711, in create_connection\n      raise err\n    File \"/opt/homebrew/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/socket.py\", line 702, in create_connection\n      sock.connect(sa)\n  OSError: [Errno 65] No route to host\n```\n"},"comment":{"url":"https://api.github.com/repos/buildinspace/peru/issues/comments/348398846","html_url":"https://github.com/buildinspace/peru/issues/169#issuecomment-348398846","issue_url":"https://api.github.com/repos/buildinspace/peru/issues/169","id":348398846,"user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"created_at":"2017-12-01T04:34:07Z","updated_at":"2017-12-01T04:34:07Z","author_association":"OWNER","body":"This should be fixed now, and I've just released version 1.1.3. Apologies for the...extended incubation period."}},"public":true,"created_at":"2017-12-01T04:34:07Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6928390120","type":"IssueCommentEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/178","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/178/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/178/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/178/events","html_url":"https://github.com/buildinspace/peru/issues/178","id":246856449,"number":178,"title":"startup is 4x as expensive in the packaged version","user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"assignees":[{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2017-07-31T19:19:31Z","updated_at":"2017-12-01T04:32:52Z","closed_at":"2017-12-01T04:13:09Z","author_association":"OWNER","body":"In my local repo:\r\n\r\n```\r\n$ pacman -Qo /usr/bin/peru\r\n/usr/bin/peru is owned by peru-git 605.1610b46-1\r\n$ time /usr/bin/peru > /dev/null\r\n/usr/bin/peru > /dev/null  0.41s user 0.02s system 99% cpu 0.429 total\r\n$ time ./peru.py > /dev/null\r\n./peru.py > /dev/null  0.11s user 0.00s system 99% cpu 0.115 total\r\n```"},"comment":{"url":"https://api.github.com/repos/buildinspace/peru/issues/comments/348398713","html_url":"https://github.com/buildinspace/peru/issues/178#issuecomment-348398713","issue_url":"https://api.github.com/repos/buildinspace/peru/issues/178","id":348398713,"user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"created_at":"2017-12-01T04:32:52Z","updated_at":"2017-12-01T04:32:52Z","author_association":"OWNER","body":"Tested on both Linux and Windows with peru version 1.1.3. Seems to run twice as fast as 1.1.2, and equally as fast as `python -m peru`. (Not sure what happened to the 4x multiple.)"}},"public":true,"created_at":"2017-12-01T04:32:53Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6928360776","type":"CreateEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"ref":"1.1.3","ref_type":"tag","master_branch":"master","description":"a tool for including other people's code in your projects","pusher_type":"user"},"public":true,"created_at":"2017-12-01T04:19:07Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6928360686","type":"PushEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"push_id":2163191366,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"b80e0b3c4518168159b6ea800f3476a0ad7f286f","before":"ba92556d0e4881008720cc3c61f1cefc6d383723","commits":[{"sha":"b80e0b3c4518168159b6ea800f3476a0ad7f286f","author":{"email":"oconnor663@gmail.com","name":"Jack O'Connor"},"message":"bump version to 1.1.3\n\nChanges since 1.1.2:\n- Errors in the curl module are less spammy.\n- The reup command prints the module as context for errors.\n- Use fastentrypoints.py to fix slow startup times in generated scripts.","distinct":true,"url":"https://api.github.com/repos/buildinspace/peru/commits/b80e0b3c4518168159b6ea800f3476a0ad7f286f"}]},"public":true,"created_at":"2017-12-01T04:19:05Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}},{"id":"6928348356","type":"IssuesEvent","actor":{"id":860932,"login":"oconnor663","display_login":"oconnor663","gravatar_id":"","url":"https://api.github.com/users/oconnor663","avatar_url":"https://avatars.githubusercontent.com/u/860932?"},"repo":{"id":13880738,"name":"buildinspace/peru","url":"https://api.github.com/repos/buildinspace/peru"},"payload":{"action":"closed","issue":{"url":"https://api.github.com/repos/buildinspace/peru/issues/178","repository_url":"https://api.github.com/repos/buildinspace/peru","labels_url":"https://api.github.com/repos/buildinspace/peru/issues/178/labels{/name}","comments_url":"https://api.github.com/repos/buildinspace/peru/issues/178/comments","events_url":"https://api.github.com/repos/buildinspace/peru/issues/178/events","html_url":"https://github.com/buildinspace/peru/issues/178","id":246856449,"number":178,"title":"startup is 4x as expensive in the packaged version","user":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false},"assignees":[{"login":"oconnor663","id":860932,"avatar_url":"https://avatars0.githubusercontent.com/u/860932?v=4","gravatar_id":"","url":"https://api.github.com/users/oconnor663","html_url":"https://github.com/oconnor663","followers_url":"https://api.github.com/users/oconnor663/followers","following_url":"https://api.github.com/users/oconnor663/following{/other_user}","gists_url":"https://api.github.com/users/oconnor663/gists{/gist_id}","starred_url":"https://api.github.com/users/oconnor663/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/oconnor663/subscriptions","organizations_url":"https://api.github.com/users/oconnor663/orgs","repos_url":"https://api.github.com/users/oconnor663/repos","events_url":"https://api.github.com/users/oconnor663/events{/privacy}","received_events_url":"https://api.github.com/users/oconnor663/received_events","type":"User","site_admin":false}],"milestone":null,"comments":5,"created_at":"2017-07-31T19:19:31Z","updated_at":"2017-12-01T04:13:09Z","closed_at":"2017-12-01T04:13:09Z","author_association":"OWNER","body":"In my local repo:\r\n\r\n```\r\n$ pacman -Qo /usr/bin/peru\r\n/usr/bin/peru is owned by peru-git 605.1610b46-1\r\n$ time /usr/bin/peru > /dev/null\r\n/usr/bin/peru > /dev/null  0.41s user 0.02s system 99% cpu 0.429 total\r\n$ time ./peru.py > /dev/null\r\n./peru.py > /dev/null  0.11s user 0.00s system 99% cpu 0.115 total\r\n```"}},"public":true,"created_at":"2017-12-01T04:13:09Z","org":{"id":8107815,"login":"buildinspace","gravatar_id":"","url":"https://api.github.com/orgs/buildinspace","avatar_url":"https://avatars.githubusercontent.com/u/8107815?"}}]