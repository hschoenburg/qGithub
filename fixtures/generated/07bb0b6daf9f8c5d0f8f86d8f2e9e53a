[{"id":"7312115081","type":"IssueCommentEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":23096959,"name":"golang/go","url":"https://api.github.com/repos/golang/go"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/golang/go/issues/24160","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24160/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24160/comments","events_url":"https://api.github.com/repos/golang/go/issues/24160/events","html_url":"https://github.com/golang/go/issues/24160","id":300776238,"number":24160,"title":"proposal: crypto/rand: guard against mutation of Reader variable","user":{"login":"akalin","id":425576,"avatar_url":"https://avatars0.githubusercontent.com/u/425576?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin","html_url":"https://github.com/akalin","followers_url":"https://api.github.com/users/akalin/followers","following_url":"https://api.github.com/users/akalin/following{/other_user}","gists_url":"https://api.github.com/users/akalin/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin/subscriptions","organizations_url":"https://api.github.com/users/akalin/orgs","repos_url":"https://api.github.com/users/akalin/repos","events_url":"https://api.github.com/users/akalin/events{/privacy}","received_events_url":"https://api.github.com/users/akalin/received_events","type":"User","site_admin":false},"labels":[{"id":236419512,"url":"https://api.github.com/repos/golang/go/labels/Proposal","name":"Proposal","color":"ededed","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/30","html_url":"https://github.com/golang/go/milestone/30","labels_url":"https://api.github.com/repos/golang/go/milestones/30/labels","id":1373555,"number":30,"title":"Proposal","description":"Proposals that are pending (not yet accepted/rejected).\r\n","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":224,"closed_issues":380,"state":"open","created_at":"2015-10-24T01:40:49Z","updated_at":"2018-02-28T16:20:53Z","due_on":null,"closed_at":null},"comments":4,"created_at":"2018-02-27T20:12:39Z","updated_at":"2018-02-28T19:54:40Z","closed_at":null,"author_association":"NONE","body":"`crypto/rand` exposes an `io.Reader` variable `Reader` as \"a global, shared instance of a cryptographically strong pseudo-random generator.\" Furthermore, `crypto/rand.Read` implicitly uses `Reader` for its crypto source.\r\n\r\nThis seems problematic to me because then any package can just overwrite `crypto/rand.Reader` to point to some other object, affecting the security of any packages that rely on `crypto/rand.Read` or `crypto/rand.Reader` for security, e.g. `x/crypto/nacl`.\r\n\r\nOne can say that a language can never ultimately defend against code running in your same process, but I think it should be possible to write something that depends on `crypto/rand` for security that wouldn't require auditing other packages for a single malicious variable write.[1]\r\n\r\nThe main API flaw here, IMO, is that `Reader` is an `io.Reader` variable, whereas it should be a function that returns an `io.Reader`. A new API would look something like:\r\n\r\n```\r\n// Reader returns an io.Reader that reads from a cryptographically strong pseudo-random number generator.\r\nfunc Reader() io.Reader\r\n\r\n// Read is a helper function that calls Reader() and then passes it to io.ReadFull. \r\nfunc Read(b []byte) (n int, err error)\r\n```\r\n\r\nAlas, with the Go 1 compatibility guarantee `Reader` would have to remain, and `Read` would still have to use `Reader`. But the above could be added as new functions, say `MakeReader()` and `SafeRead()`. And the standard library (and other important external packages like `x/crypto/nacl`) could be changed to use those safe functions.\r\n\r\n[1] Without this flaw, a malicious package would have to use the unsafe package to poke around in the internals of `crypto/rand`, or call out to the external OS to e.g. try to redirect access to the random device, which seems easier to audit for than a write to `crypto/rand.Reader`. Of course, I'm already assuming that a project worried about this is vendoring all of its dependencies."},"comment":{"url":"https://api.github.com/repos/golang/go/issues/comments/369362508","html_url":"https://github.com/golang/go/issues/24160#issuecomment-369362508","issue_url":"https://api.github.com/repos/golang/go/issues/24160","id":369362508,"user":{"login":"akalin","id":425576,"avatar_url":"https://avatars0.githubusercontent.com/u/425576?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin","html_url":"https://github.com/akalin","followers_url":"https://api.github.com/users/akalin/followers","following_url":"https://api.github.com/users/akalin/following{/other_user}","gists_url":"https://api.github.com/users/akalin/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin/subscriptions","organizations_url":"https://api.github.com/users/akalin/orgs","repos_url":"https://api.github.com/users/akalin/repos","events_url":"https://api.github.com/users/akalin/events{/privacy}","received_events_url":"https://api.github.com/users/akalin/received_events","type":"User","site_admin":false},"created_at":"2018-02-28T19:54:40Z","updated_at":"2018-02-28T19:54:40Z","author_association":"NONE","body":"Well, it depends what you mean by 'secure', and what other languages you're talking about. I agree that, say, private variables in C++ are easy to work around, as well as dynamic languages like Ruby/Python/Javascript. However, for example, in Go, unexported variables are inaccessible outside of package scope by code that doesn't use unsafe, cgo, reflect, or some other similar magic, and assuming there isn't some bug in the go runtime/compiler. In that sense one could say that unexported variables are 'safer' than exported ones.\r\n\r\nNote that my threat model isn't arbitrary untrusted code, so the comparison to OS-level security isn't really applicable -- it's third-party code that has to be audited before inclusion in a project. It's reasonably easy to audit the dependencies of a package, i.e. to check that it doesn't use unsafe, cgo, reflect, etc., and to perform greater scrutiny if so. It's a bit harder to audit its access of external package variables, and this bug demonstrates that the potential consequences of something slipping through the cracks isn't just weird stuff happening (like setting `io.EOF` to `nil`), but a compromise of a RNG that packages depend on for security.\r\n\r\nSomeone else mentioned that this has been brought up before for e.g. `http.DefaultClient`. The difference in this case is that one could create their own instance of `http.Client` and be diligent about using that. However, that's impossible in the case of `crypto/rand`.\r\n\r\nOn the other hand, it's not infeasible to write a tool that automates looking for code that modifies external package variables (except for reflection, unsafe, etc.). Although it's unfortunate that such a tool has to be written.\r\n"}},"public":true,"created_at":"2018-02-28T19:54:40Z","org":{"id":4314092,"login":"golang","gravatar_id":"","url":"https://api.github.com/orgs/golang","avatar_url":"https://avatars.githubusercontent.com/u/4314092?"}},{"id":"7306094083","type":"IssueCommentEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":23096959,"name":"golang/go","url":"https://api.github.com/repos/golang/go"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/golang/go/issues/24160","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24160/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24160/comments","events_url":"https://api.github.com/repos/golang/go/issues/24160/events","html_url":"https://github.com/golang/go/issues/24160","id":300776238,"number":24160,"title":"proposal: crypto/rand: guard against mutation of Reader variable","user":{"login":"akalin","id":425576,"avatar_url":"https://avatars0.githubusercontent.com/u/425576?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin","html_url":"https://github.com/akalin","followers_url":"https://api.github.com/users/akalin/followers","following_url":"https://api.github.com/users/akalin/following{/other_user}","gists_url":"https://api.github.com/users/akalin/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin/subscriptions","organizations_url":"https://api.github.com/users/akalin/orgs","repos_url":"https://api.github.com/users/akalin/repos","events_url":"https://api.github.com/users/akalin/events{/privacy}","received_events_url":"https://api.github.com/users/akalin/received_events","type":"User","site_admin":false},"labels":[{"id":236419512,"url":"https://api.github.com/repos/golang/go/labels/Proposal","name":"Proposal","color":"ededed","default":false}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":{"url":"https://api.github.com/repos/golang/go/milestones/30","html_url":"https://github.com/golang/go/milestone/30","labels_url":"https://api.github.com/repos/golang/go/milestones/30/labels","id":1373555,"number":30,"title":"Proposal","description":"Proposals that are pending (not yet accepted/rejected).\r\n","creator":{"login":"rsc","id":104030,"avatar_url":"https://avatars1.githubusercontent.com/u/104030?v=4","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"open_issues":228,"closed_issues":374,"state":"open","created_at":"2015-10-24T01:40:49Z","updated_at":"2018-02-27T20:12:41Z","due_on":null,"closed_at":null},"comments":1,"created_at":"2018-02-27T20:12:39Z","updated_at":"2018-02-27T20:56:36Z","closed_at":null,"author_association":"NONE","body":"`crypto/rand` exposes an `io.Reader` variable `Reader` as \"a global, shared instance of a cryptographically strong pseudo-random generator.\" Furthermore, `crypto/rand.Read` implicitly uses `Reader` for its crypto source.\r\n\r\nThis seems problematic to me because then any package can just overwrite `crypto/rand.Reader` to point to some other object, affecting the security of any packages that rely on `crypto/rand.Read` or `crypto/rand.Reader` for security, e.g. `x/crypto/nacl`.\r\n\r\nOne can say that a language can never ultimately defend against code running in your same process, but I think it should be possible to write something that depends on `crypto/rand` for security that wouldn't require auditing other packages for a single malicious variable write.[1]\r\n\r\nThe main API flaw here, IMO, is that `Reader` is an `io.Reader` variable, whereas it should be a function that returns an `io.Reader`. A new API would look something like:\r\n\r\n```\r\n// Reader returns an io.Reader that reads from a cryptographically strong pseudo-random number generator.\r\nfunc Reader() io.Reader\r\n\r\n// Read is a helper function that calls Reader() and then passes it to io.ReadFull. \r\nfunc Read(b []byte) (n int, err error)\r\n```\r\n\r\nAlas, with the Go 1 compatibility guarantee `Reader` would have to remain, and `Read` would still have to use `Reader`. But the above could be added as new functions, say `MakeReader()` and `SafeRead()`. And the standard library (and other important external packages like `x/crypto/nacl`) could be changed to use those safe functions.\r\n\r\n[1] Without this flaw, a malicious package would have to use the unsafe package to poke around in the internals of `crypto/rand`, or call out to the external OS to e.g. try to redirect access to the random device, which seems easier to audit for than a write to `crypto/rand.Reader`. Of course, I'm already assuming that a project worried about this is vendoring all of its dependencies."},"comment":{"url":"https://api.github.com/repos/golang/go/issues/comments/369023063","html_url":"https://github.com/golang/go/issues/24160#issuecomment-369023063","issue_url":"https://api.github.com/repos/golang/go/issues/24160","id":369023063,"user":{"login":"akalin","id":425576,"avatar_url":"https://avatars0.githubusercontent.com/u/425576?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin","html_url":"https://github.com/akalin","followers_url":"https://api.github.com/users/akalin/followers","following_url":"https://api.github.com/users/akalin/following{/other_user}","gists_url":"https://api.github.com/users/akalin/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin/subscriptions","organizations_url":"https://api.github.com/users/akalin/orgs","repos_url":"https://api.github.com/users/akalin/repos","events_url":"https://api.github.com/users/akalin/events{/privacy}","received_events_url":"https://api.github.com/users/akalin/received_events","type":"User","site_admin":false},"created_at":"2018-02-27T20:56:36Z","updated_at":"2018-02-27T20:56:36Z","author_association":"NONE","body":"Yes, if you care about security, you're already auditing all vendored/dependency code. However, there's a difference in required effort between auditing for packages that e.g. make calls to `unsafe`, try to make system calls, or load DLLs, and auditing for packages that try to sneak in a single write to a global variable.\r\n\r\nI don't think the benefits of overriding crypto/rand.Reader globally for tests outweigh the downsides of having one package's crypto be breakable by another package. It is easy enough to plumb through an io.Reader through the code you want to test."}},"public":true,"created_at":"2018-02-27T20:56:36Z","org":{"id":4314092,"login":"golang","gravatar_id":"","url":"https://api.github.com/orgs/golang","avatar_url":"https://avatars.githubusercontent.com/u/4314092?"}},{"id":"7305876849","type":"IssuesEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":23096959,"name":"golang/go","url":"https://api.github.com/repos/golang/go"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/golang/go/issues/24160","repository_url":"https://api.github.com/repos/golang/go","labels_url":"https://api.github.com/repos/golang/go/issues/24160/labels{/name}","comments_url":"https://api.github.com/repos/golang/go/issues/24160/comments","events_url":"https://api.github.com/repos/golang/go/issues/24160/events","html_url":"https://github.com/golang/go/issues/24160","id":300776238,"number":24160,"title":"proposal: crypto/rand: guard against mutation of Reader variable","user":{"login":"akalin","id":425576,"avatar_url":"https://avatars0.githubusercontent.com/u/425576?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin","html_url":"https://github.com/akalin","followers_url":"https://api.github.com/users/akalin/followers","following_url":"https://api.github.com/users/akalin/following{/other_user}","gists_url":"https://api.github.com/users/akalin/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin/subscriptions","organizations_url":"https://api.github.com/users/akalin/orgs","repos_url":"https://api.github.com/users/akalin/repos","events_url":"https://api.github.com/users/akalin/events{/privacy}","received_events_url":"https://api.github.com/users/akalin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-27T20:12:39Z","updated_at":"2018-02-27T20:12:39Z","closed_at":null,"author_association":"NONE","body":"`crypto/rand` exposes an `io.Reader` variable `Reader` as \"a global, shared instance of a cryptographically strong pseudo-random generator.\" Furthermore, `crypto/rand.Read` implicitly uses `Reader` for its crypto source.\r\n\r\nThis seems problematic to me because then any package can just overwrite `crypto/rand.Reader` to point to some other object, affecting the security of any packages that rely on `crypto/rand.Read` or `crypto/rand.Reader` for security, e.g. `x/crypto/nacl`.\r\n\r\nOne can say that a language can never ultimately defend against code running in your same process, but I think it should be possible to write something that depends on `crypto/rand` for security that wouldn't require auditing other packages for a single malicious variable write.[1]\r\n\r\nThe main API flaw here, IMO, is that `Reader` is an `io.Reader` variable, whereas it should be a function that returns an `io.Reader`. A new API would look something like:\r\n\r\n```\r\n// Reader returns an io.Reader that reads from a cryptographically strong pseudo-random number generator.\r\nfunc Reader() io.Reader\r\n\r\n// Read is a helper function that calls Reader() and then passes it to io.ReadFull. \r\nfunc Read(b []byte) (n int, err error)\r\n```\r\n\r\nAlas, with the Go 1 compatibility guarantee `Reader` would have to remain, and `Read` would still have to use `Reader`. But the above could be added as new functions, say `MakeReader()` and `SafeRead()`. And the standard library (and other important external packages like `x/crypto/nacl`) could be changed to use those safe functions.\r\n\r\n[1] Without this flaw, a malicious package would have to use the unsafe package to poke around in the internals of `crypto/rand`, or call out to the external OS to e.g. try to redirect access to the random device, which seems easier to audit for than a write to `crypto/rand.Reader`. Of course, I'm already assuming that a project worried about this is vendoring all of its dependencies."}},"public":true,"created_at":"2018-02-27T20:12:39Z","org":{"id":4314092,"login":"golang","gravatar_id":"","url":"https://api.github.com/orgs/golang","avatar_url":"https://avatars.githubusercontent.com/u/4314092?"}},{"id":"7299027675","type":"IssueCommentEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":25880891,"name":"facebook/flow","url":"https://api.github.com/repos/facebook/flow"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/facebook/flow/issues/5870","repository_url":"https://api.github.com/repos/facebook/flow","labels_url":"https://api.github.com/repos/facebook/flow/issues/5870/labels{/name}","comments_url":"https://api.github.com/repos/facebook/flow/issues/5870/comments","events_url":"https://api.github.com/repos/facebook/flow/issues/5870/events","html_url":"https://github.com/facebook/flow/issues/5870","id":300068884,"number":5870,"title":"flow status sometimes hangs with 0.66.0","user":{"login":"akalin","id":425576,"avatar_url":"https://avatars0.githubusercontent.com/u/425576?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin","html_url":"https://github.com/akalin","followers_url":"https://api.github.com/users/akalin/followers","following_url":"https://api.github.com/users/akalin/following{/other_user}","gists_url":"https://api.github.com/users/akalin/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin/subscriptions","organizations_url":"https://api.github.com/users/akalin/orgs","repos_url":"https://api.github.com/users/akalin/repos","events_url":"https://api.github.com/users/akalin/events{/privacy}","received_events_url":"https://api.github.com/users/akalin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2018-02-25T22:41:02Z","updated_at":"2018-02-26T18:48:28Z","closed_at":null,"author_association":"NONE","body":"https://github.com/akalin/flow-hang is a repro with as minimal a test case as I could get.\r\n\r\nIn that repo, you can repro with:\r\n\r\n```\r\n> yarn\r\nyarn install v1.3.2\r\nwarning package.json: No license field\r\nwarning No license field\r\n[1/4] 🔍  Resolving packages...\r\nsuccess Already up-to-date.\r\n✨  Done in 0.08s.\r\n\r\n> node_modules/.bin/flow version\r\nFlow, a static type checker for JavaScript, version 0.66.0\r\n\r\n> node_modules/.bin/flow status\r\nLaunching Flow server for /Users/akalin/src/flow-hang-bug\r\nSpawned flow server (pid=81350)\r\nLogs will go to /private/tmp/flow/zSUserszSakalinzSsrczSflow-hang-bug.log\r\nMonitor logs will go to /private/tmp/flow/zSUserszSakalinzSsrczSflow-hang-bug.monitor_log\r\nPlease wait. Server is initializing (merged files 3/4 (75.0%)): \\\r\n\r\n<hangs>\r\n```\r\n\r\nThings that cause flow to work again:\r\n\r\n- Downgrading flow-bin to 0.65.0.\r\n- Inlining the code in matrix.js into row-reduce.js.\r\n- Removing an unused case from the RowReduceState type.\r\n- Simplifying rowReduceNextState."},"comment":{"url":"https://api.github.com/repos/facebook/flow/issues/comments/368606393","html_url":"https://github.com/facebook/flow/issues/5870#issuecomment-368606393","issue_url":"https://api.github.com/repos/facebook/flow/issues/5870","id":368606393,"user":{"login":"akalin","id":425576,"avatar_url":"https://avatars0.githubusercontent.com/u/425576?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin","html_url":"https://github.com/akalin","followers_url":"https://api.github.com/users/akalin/followers","following_url":"https://api.github.com/users/akalin/following{/other_user}","gists_url":"https://api.github.com/users/akalin/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin/subscriptions","organizations_url":"https://api.github.com/users/akalin/orgs","repos_url":"https://api.github.com/users/akalin/repos","events_url":"https://api.github.com/users/akalin/events{/privacy}","received_events_url":"https://api.github.com/users/akalin/received_events","type":"User","site_admin":false},"created_at":"2018-02-26T18:48:28Z","updated_at":"2018-02-26T18:48:28Z","author_association":"NONE","body":"It times out:\r\n\r\n```\r\n> node_modules/.bin/flow\r\nLaunching Flow server for /home/akalin/src/flow-hang\r\nSpawned flow server (pid=8384)\r\nLogs will go to /tmp/flow/zShomezSakalinzSsrczSflow-hang.log\r\nMonitor logs will go to /tmp/flow/zShomezSakalinzSsrczSflow-hang.monitor_log\r\nError ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈ row_reduce.js:0:1\r\n\r\nInternal error: merge job timed out after 105.00 seconds\r\n\r\n\r\n\r\nFound 1 error\r\n\r\n```"}},"public":true,"created_at":"2018-02-26T18:48:28Z","org":{"id":69631,"login":"facebook","gravatar_id":"","url":"https://api.github.com/orgs/facebook","avatar_url":"https://avatars.githubusercontent.com/u/69631?"}},{"id":"7294346631","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":103730348,"name":"akalin/intro-erasure-codes","url":"https://api.github.com/repos/akalin/intro-erasure-codes"},"payload":{"push_id":2357335197,"size":19,"distinct_size":0,"ref":"refs/heads/master","head":"ae48ea6d6edc3a5b511201c6d09b9d1ed66cad20","before":"98e15f2edee4412cdc18267817acab2f9cdcb30c","commits":[{"sha":"88156367bf32e2543ed31701429c06fda8875163","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Downgrade flow-bin to work around a bug\n\nSee https://github.com/facebook/flow/issues/5870 .","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/88156367bf32e2543ed31701429c06fda8875163"},{"sha":"bdbfc3c458a61352ff71c7e3309f16571e0e752e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Start RowReduce stepper","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/bdbfc3c458a61352ff71c7e3309f16571e0e752e"},{"sha":"92e832eedcdd37bf2c6ab9d9ea12f8b6b1726c8a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add button for previous step","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/92e832eedcdd37bf2c6ab9d9ea12f8b6b1726c8a"},{"sha":"4d146df723f461005abcfe798b77f7e989f03d8b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Keep track of iterated-over matrix entry","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4d146df723f461005abcfe798b77f7e989f03d8b"},{"sha":"6606eb3200836c6ade27247007fabe716ef39efe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add details when we get a matrix in a special form","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/6606eb3200836c6ade27247007fabe716ef39efe"},{"sha":"ba7a76466cb5c1a7429c6d53a582ebb558442da5","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add colors to rows for RowReduce","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ba7a76466cb5c1a7429c6d53a582ebb558442da5"},{"sha":"4c53c03576fd48a15a54bcfdb08184003cbfbeec","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Color matrix rows in RowReduce","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4c53c03576fd48a15a54bcfdb08184003cbfbeec"},{"sha":"d86e0421be555bbf6c9e6e410bc1c69a2cb57d49","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add option to disallow field type changes\n\n...for matrix demos.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d86e0421be555bbf6c9e6e410bc1c69a2cb57d49"},{"sha":"1411d5b76598a1ca7bae559044b8bf5c221c3678","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add hook for styling buttons","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/1411d5b76598a1ca7bae559044b8bf5c221c3678"},{"sha":"26a19bc3e4de59fd1e7eab9cb8b7701041454263","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Allow wrapping of displayed matrix ops\n\nThis provides a better viewing experience on mobile.\n\nFeature-End: matrix-demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/26a19bc3e4de59fd1e7eab9cb8b7701041454263"},{"sha":"9a405346918718444034948b69a16bd96f399f21","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example for ComputeParity\n\nFeature-Start: erasure-code-demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/9a405346918718444034948b69a16bd96f399f21"},{"sha":"46af432108c6928a95890feafa53f9a2e27c288a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement computeParityMatrix and add tests","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/46af432108c6928a95890feafa53f9a2e27c288a"},{"sha":"14991c2d04b4ebd8b1411a39c21c3fc8170ff978","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement computeParity and add tests","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/14991c2d04b4ebd8b1411a39c21c3fc8170ff978"},{"sha":"6c5cfae1e9003725b1697611047fe8ce8a1319ee","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add interactive example for ComputeParity","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/6c5cfae1e9003725b1697611047fe8ce8a1319ee"},{"sha":"c5a1e9ba067619135b449e584491f74b8e19fc8e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example for ReconstructData","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/c5a1e9ba067619135b449e584491f74b8e19fc8e"},{"sha":"ced031e196ceee12cf73140f313762c42921c347","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement reconstructData and add tests","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ced031e196ceee12cf73140f313762c42921c347"},{"sha":"5f119eadb72963840e6d8511831a78405dddc168","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add interactive example for ReconstructData","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/5f119eadb72963840e6d8511831a78405dddc168"},{"sha":"4eb9c3ba73902812e6a1922634e6c61a15bbc2ec","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add non-detailed versions of erasure code demos","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4eb9c3ba73902812e6a1922634e6c61a15bbc2ec"},{"sha":"ae48ea6d6edc3a5b511201c6d09b9d1ed66cad20","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Let output arrays wrap\n\nThis provides a better viewing experience on mobile.\n\nFeature-End: erasure-code-demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ae48ea6d6edc3a5b511201c6d09b9d1ed66cad20"}]},"public":true,"created_at":"2018-02-25T22:44:15Z"},{"id":"7294346414","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":103730348,"name":"akalin/intro-erasure-codes","url":"https://api.github.com/repos/akalin/intro-erasure-codes"},"payload":{"push_id":2357335069,"size":19,"distinct_size":9,"ref":"refs/heads/erasure-code","head":"ae48ea6d6edc3a5b511201c6d09b9d1ed66cad20","before":"98e15f2edee4412cdc18267817acab2f9cdcb30c","commits":[{"sha":"88156367bf32e2543ed31701429c06fda8875163","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Downgrade flow-bin to work around a bug\n\nSee https://github.com/facebook/flow/issues/5870 .","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/88156367bf32e2543ed31701429c06fda8875163"},{"sha":"bdbfc3c458a61352ff71c7e3309f16571e0e752e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Start RowReduce stepper","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/bdbfc3c458a61352ff71c7e3309f16571e0e752e"},{"sha":"92e832eedcdd37bf2c6ab9d9ea12f8b6b1726c8a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add button for previous step","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/92e832eedcdd37bf2c6ab9d9ea12f8b6b1726c8a"},{"sha":"4d146df723f461005abcfe798b77f7e989f03d8b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Keep track of iterated-over matrix entry","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4d146df723f461005abcfe798b77f7e989f03d8b"},{"sha":"6606eb3200836c6ade27247007fabe716ef39efe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add details when we get a matrix in a special form","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/6606eb3200836c6ade27247007fabe716ef39efe"},{"sha":"ba7a76466cb5c1a7429c6d53a582ebb558442da5","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add colors to rows for RowReduce","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ba7a76466cb5c1a7429c6d53a582ebb558442da5"},{"sha":"4c53c03576fd48a15a54bcfdb08184003cbfbeec","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Color matrix rows in RowReduce","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4c53c03576fd48a15a54bcfdb08184003cbfbeec"},{"sha":"d86e0421be555bbf6c9e6e410bc1c69a2cb57d49","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add option to disallow field type changes\n\n...for matrix demos.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d86e0421be555bbf6c9e6e410bc1c69a2cb57d49"},{"sha":"1411d5b76598a1ca7bae559044b8bf5c221c3678","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add hook for styling buttons","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/1411d5b76598a1ca7bae559044b8bf5c221c3678"},{"sha":"26a19bc3e4de59fd1e7eab9cb8b7701041454263","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Allow wrapping of displayed matrix ops\n\nThis provides a better viewing experience on mobile.\n\nFeature-End: matrix-demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/26a19bc3e4de59fd1e7eab9cb8b7701041454263"},{"sha":"9a405346918718444034948b69a16bd96f399f21","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example for ComputeParity\n\nFeature-Start: erasure-code-demo","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/9a405346918718444034948b69a16bd96f399f21"},{"sha":"46af432108c6928a95890feafa53f9a2e27c288a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement computeParityMatrix and add tests","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/46af432108c6928a95890feafa53f9a2e27c288a"},{"sha":"14991c2d04b4ebd8b1411a39c21c3fc8170ff978","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement computeParity and add tests","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/14991c2d04b4ebd8b1411a39c21c3fc8170ff978"},{"sha":"6c5cfae1e9003725b1697611047fe8ce8a1319ee","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add interactive example for ComputeParity","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/6c5cfae1e9003725b1697611047fe8ce8a1319ee"},{"sha":"c5a1e9ba067619135b449e584491f74b8e19fc8e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example for ReconstructData","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/c5a1e9ba067619135b449e584491f74b8e19fc8e"},{"sha":"ced031e196ceee12cf73140f313762c42921c347","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement reconstructData and add tests","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ced031e196ceee12cf73140f313762c42921c347"},{"sha":"5f119eadb72963840e6d8511831a78405dddc168","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add interactive example for ReconstructData","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/5f119eadb72963840e6d8511831a78405dddc168"},{"sha":"4eb9c3ba73902812e6a1922634e6c61a15bbc2ec","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add non-detailed versions of erasure code demos","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4eb9c3ba73902812e6a1922634e6c61a15bbc2ec"},{"sha":"ae48ea6d6edc3a5b511201c6d09b9d1ed66cad20","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Let output arrays wrap\n\nThis provides a better viewing experience on mobile.\n\nFeature-End: erasure-code-demo","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ae48ea6d6edc3a5b511201c6d09b9d1ed66cad20"}]},"public":true,"created_at":"2018-02-25T22:44:08Z"},{"id":"7294346275","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":103730348,"name":"akalin/intro-erasure-codes","url":"https://api.github.com/repos/akalin/intro-erasure-codes"},"payload":{"push_id":2357334992,"size":10,"distinct_size":10,"ref":"refs/heads/matrix","head":"26a19bc3e4de59fd1e7eab9cb8b7701041454263","before":"d237885c6b4e015058918837523fec8db32f523d","commits":[{"sha":"88156367bf32e2543ed31701429c06fda8875163","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Downgrade flow-bin to work around a bug\n\nSee https://github.com/facebook/flow/issues/5870 .","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/88156367bf32e2543ed31701429c06fda8875163"},{"sha":"bdbfc3c458a61352ff71c7e3309f16571e0e752e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Start RowReduce stepper","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/bdbfc3c458a61352ff71c7e3309f16571e0e752e"},{"sha":"92e832eedcdd37bf2c6ab9d9ea12f8b6b1726c8a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add button for previous step","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/92e832eedcdd37bf2c6ab9d9ea12f8b6b1726c8a"},{"sha":"4d146df723f461005abcfe798b77f7e989f03d8b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Keep track of iterated-over matrix entry","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4d146df723f461005abcfe798b77f7e989f03d8b"},{"sha":"6606eb3200836c6ade27247007fabe716ef39efe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add details when we get a matrix in a special form","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/6606eb3200836c6ade27247007fabe716ef39efe"},{"sha":"ba7a76466cb5c1a7429c6d53a582ebb558442da5","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add colors to rows for RowReduce","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ba7a76466cb5c1a7429c6d53a582ebb558442da5"},{"sha":"4c53c03576fd48a15a54bcfdb08184003cbfbeec","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Color matrix rows in RowReduce","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4c53c03576fd48a15a54bcfdb08184003cbfbeec"},{"sha":"d86e0421be555bbf6c9e6e410bc1c69a2cb57d49","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add option to disallow field type changes\n\n...for matrix demos.","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d86e0421be555bbf6c9e6e410bc1c69a2cb57d49"},{"sha":"1411d5b76598a1ca7bae559044b8bf5c221c3678","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add hook for styling buttons","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/1411d5b76598a1ca7bae559044b8bf5c221c3678"},{"sha":"26a19bc3e4de59fd1e7eab9cb8b7701041454263","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Allow wrapping of displayed matrix ops\n\nThis provides a better viewing experience on mobile.\n\nFeature-End: matrix-demo","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/26a19bc3e4de59fd1e7eab9cb8b7701041454263"}]},"public":true,"created_at":"2018-02-25T22:44:03Z"},{"id":"7294343923","type":"CreateEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":103730348,"name":"akalin/intro-erasure-codes","url":"https://api.github.com/repos/akalin/intro-erasure-codes"},"payload":{"ref":"flow-bug","ref_type":"branch","master_branch":"master","description":"This repository contains demos of algorithms related to erasure codes.","pusher_type":"user"},"public":true,"created_at":"2018-02-25T22:42:38Z"},{"id":"7294341205","type":"IssuesEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":25880891,"name":"facebook/flow","url":"https://api.github.com/repos/facebook/flow"},"payload":{"action":"opened","issue":{"url":"https://api.github.com/repos/facebook/flow/issues/5870","repository_url":"https://api.github.com/repos/facebook/flow","labels_url":"https://api.github.com/repos/facebook/flow/issues/5870/labels{/name}","comments_url":"https://api.github.com/repos/facebook/flow/issues/5870/comments","events_url":"https://api.github.com/repos/facebook/flow/issues/5870/events","html_url":"https://github.com/facebook/flow/issues/5870","id":300068884,"number":5870,"title":"flow status sometimes hangs with 0.66.0","user":{"login":"akalin","id":425576,"avatar_url":"https://avatars0.githubusercontent.com/u/425576?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin","html_url":"https://github.com/akalin","followers_url":"https://api.github.com/users/akalin/followers","following_url":"https://api.github.com/users/akalin/following{/other_user}","gists_url":"https://api.github.com/users/akalin/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin/subscriptions","organizations_url":"https://api.github.com/users/akalin/orgs","repos_url":"https://api.github.com/users/akalin/repos","events_url":"https://api.github.com/users/akalin/events{/privacy}","received_events_url":"https://api.github.com/users/akalin/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2018-02-25T22:41:02Z","updated_at":"2018-02-25T22:41:02Z","closed_at":null,"author_association":"NONE","body":"https://github.com/akalin/flow-hang is a repro with as minimal a test case as I could get.\r\n\r\nIn that repo, you can repro with:\r\n\r\n```\r\n> yarn\r\nyarn install v1.3.2\r\nwarning package.json: No license field\r\nwarning No license field\r\n[1/4] 🔍  Resolving packages...\r\nsuccess Already up-to-date.\r\n✨  Done in 0.08s.\r\n\r\n> node_modules/.bin/flow version\r\nFlow, a static type checker for JavaScript, version 0.66.0\r\n\r\n> node_modules/.bin/flow status\r\nLaunching Flow server for /Users/akalin/src/flow-hang-bug\r\nSpawned flow server (pid=81350)\r\nLogs will go to /private/tmp/flow/zSUserszSakalinzSsrczSflow-hang-bug.log\r\nMonitor logs will go to /private/tmp/flow/zSUserszSakalinzSsrczSflow-hang-bug.monitor_log\r\nPlease wait. Server is initializing (merged files 3/4 (75.0%)): \\\r\n\r\n<hangs>\r\n```\r\n\r\nThings that cause flow to work again:\r\n\r\n- Downgrading flow-bin to 0.65.0.\r\n- Inlining the code in matrix.js into row-reduce.js.\r\n- Removing an unused case from the RowReduceState type.\r\n- Simplifying rowReduceNextState."}},"public":true,"created_at":"2018-02-25T22:41:03Z","org":{"id":69631,"login":"facebook","gravatar_id":"","url":"https://api.github.com/orgs/facebook","avatar_url":"https://avatars.githubusercontent.com/u/69631?"}},{"id":"7294338469","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":122884020,"name":"akalin/flow-hang","url":"https://api.github.com/repos/akalin/flow-hang"},"payload":{"push_id":2357330180,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"d235930c30a24e60bedaef8c2ac3b4d1d1ecbd31","before":"67036091ddbc9cb1c9a5404fc2beba8796305928","commits":[{"sha":"d235930c30a24e60bedaef8c2ac3b4d1d1ecbd31","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add readme","distinct":true,"url":"https://api.github.com/repos/akalin/flow-hang/commits/d235930c30a24e60bedaef8c2ac3b4d1d1ecbd31"}]},"public":true,"created_at":"2018-02-25T22:39:27Z"},{"id":"7294328082","type":"CreateEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":122884020,"name":"akalin/flow-hang","url":"https://api.github.com/repos/akalin/flow-hang"},"payload":{"ref":"master","ref_type":"branch","master_branch":"master","description":"Minimal test case for flow hang bug","pusher_type":"user"},"public":true,"created_at":"2018-02-25T22:33:21Z"},{"id":"7294327652","type":"CreateEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":122884020,"name":"akalin/flow-hang","url":"https://api.github.com/repos/akalin/flow-hang"},"payload":{"ref":null,"ref_type":"repository","master_branch":"master","description":"Minimal test case for flow hang bug","pusher_type":"user"},"public":true,"created_at":"2018-02-25T22:33:07Z"},{"id":"7294278895","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":103730348,"name":"akalin/intro-erasure-codes","url":"https://api.github.com/repos/akalin/intro-erasure-codes"},"payload":{"push_id":2357294140,"size":24,"distinct_size":0,"ref":"refs/heads/master","head":"98e15f2edee4412cdc18267817acab2f9cdcb30c","before":"42e4f53f3c1cefb85f5896eb81531f6d0e618c23","commits":[{"sha":"0707dac87782b1bfea414786384846e74079224a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement matrix inversion","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0707dac87782b1bfea414786384846e74079224a"},{"sha":"0f4711a6aa15bbbe61b289baf032635e9c48aa83","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Show inverse in interactive Cauchy matrix demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0f4711a6aa15bbbe61b289baf032635e9c48aa83"},{"sha":"73cb7296e6ad83c22ce081bdf76d1533275dedcf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example for row reduction","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/73cb7296e6ad83c22ce081bdf76d1533275dedcf"},{"sha":"e62fa3d28e7e499c77e64b59bffb4ee241d3825d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add colors to static row reduction example","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/e62fa3d28e7e499c77e64b59bffb4ee241d3825d"},{"sha":"4f984a335f77fcdf6cfc514809f0e99691eff74e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Start interactive row reduction example","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4f984a335f77fcdf6cfc514809f0e99691eff74e"},{"sha":"84edaf164c2c8e8ba942846f2d9c58d94e450d1e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Start RowReduce element","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/84edaf164c2c8e8ba942846f2d9c58d94e450d1e"},{"sha":"fccf10a28778eacdeda4f5a31c7d23e5dbea5fbf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Start RowReduce stepper","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/fccf10a28778eacdeda4f5a31c7d23e5dbea5fbf"},{"sha":"ce24f9cd60210224c889fbe033bbf0978ca6023d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add button for previous step","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ce24f9cd60210224c889fbe033bbf0978ca6023d"},{"sha":"5804cccc1c3245f86d304763b04fadf31343a3c6","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Keep track of iterated-over matrix entry","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/5804cccc1c3245f86d304763b04fadf31343a3c6"},{"sha":"3a7da6e1b872e29380c6ec81374d4908be8ff76e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add details when we get a matrix in a special form","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/3a7da6e1b872e29380c6ec81374d4908be8ff76e"},{"sha":"a2ae14dad79e0ac10055bfe0fa42c3aeccfd1345","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add colors to rows for RowReduce","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/a2ae14dad79e0ac10055bfe0fa42c3aeccfd1345"},{"sha":"4010d4cdc98f29da04beec9f483f12c6c6b2fd1b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Color matrix rows in RowReduce","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4010d4cdc98f29da04beec9f483f12c6c6b2fd1b"},{"sha":"8013544df0bba398088e86a16bbfecc77d8dcf7d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add option to disallow field type changes\n\n...for matrix demos.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8013544df0bba398088e86a16bbfecc77d8dcf7d"},{"sha":"6cb68794cc3b9cbc1b77a5853a645c2330575609","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add hook for styling buttons","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/6cb68794cc3b9cbc1b77a5853a645c2330575609"},{"sha":"d237885c6b4e015058918837523fec8db32f523d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Allow wrapping of displayed matrix ops\n\nThis provides a better viewing experience on mobile.\n\nFeature-End: matrix-demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d237885c6b4e015058918837523fec8db32f523d"},{"sha":"718e28c221e0bcc3f2e5b56563b7e0fdbbee5755","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example for ComputeParity\n\nFeature-Start: erasure-code-demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/718e28c221e0bcc3f2e5b56563b7e0fdbbee5755"},{"sha":"d294d8272c60afdb6ce153369204d703da608314","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement computeParityMatrix and add tests","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d294d8272c60afdb6ce153369204d703da608314"},{"sha":"297fe840e9d77cd804e391f55611ad39fabeaf39","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement computeParity and add tests","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/297fe840e9d77cd804e391f55611ad39fabeaf39"},{"sha":"d880c1871cb9e9e5b4f25d87e0460d3b65c0f1bd","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add interactive example for ComputeParity","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d880c1871cb9e9e5b4f25d87e0460d3b65c0f1bd"},{"sha":"de6b21f1a039eed3010b1a77f1641da9e1c25e9b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example for ReconstructData","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/de6b21f1a039eed3010b1a77f1641da9e1c25e9b"}]},"public":true,"created_at":"2018-02-25T22:05:41Z"},{"id":"7294278496","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":103730348,"name":"akalin/intro-erasure-codes","url":"https://api.github.com/repos/akalin/intro-erasure-codes"},"payload":{"push_id":2357293875,"size":24,"distinct_size":9,"ref":"refs/heads/erasure-code","head":"98e15f2edee4412cdc18267817acab2f9cdcb30c","before":"42e4f53f3c1cefb85f5896eb81531f6d0e618c23","commits":[{"sha":"0707dac87782b1bfea414786384846e74079224a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement matrix inversion","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0707dac87782b1bfea414786384846e74079224a"},{"sha":"0f4711a6aa15bbbe61b289baf032635e9c48aa83","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Show inverse in interactive Cauchy matrix demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0f4711a6aa15bbbe61b289baf032635e9c48aa83"},{"sha":"73cb7296e6ad83c22ce081bdf76d1533275dedcf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example for row reduction","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/73cb7296e6ad83c22ce081bdf76d1533275dedcf"},{"sha":"e62fa3d28e7e499c77e64b59bffb4ee241d3825d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add colors to static row reduction example","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/e62fa3d28e7e499c77e64b59bffb4ee241d3825d"},{"sha":"4f984a335f77fcdf6cfc514809f0e99691eff74e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Start interactive row reduction example","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4f984a335f77fcdf6cfc514809f0e99691eff74e"},{"sha":"84edaf164c2c8e8ba942846f2d9c58d94e450d1e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Start RowReduce element","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/84edaf164c2c8e8ba942846f2d9c58d94e450d1e"},{"sha":"fccf10a28778eacdeda4f5a31c7d23e5dbea5fbf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Start RowReduce stepper","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/fccf10a28778eacdeda4f5a31c7d23e5dbea5fbf"},{"sha":"ce24f9cd60210224c889fbe033bbf0978ca6023d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add button for previous step","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ce24f9cd60210224c889fbe033bbf0978ca6023d"},{"sha":"5804cccc1c3245f86d304763b04fadf31343a3c6","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Keep track of iterated-over matrix entry","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/5804cccc1c3245f86d304763b04fadf31343a3c6"},{"sha":"3a7da6e1b872e29380c6ec81374d4908be8ff76e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add details when we get a matrix in a special form","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/3a7da6e1b872e29380c6ec81374d4908be8ff76e"},{"sha":"a2ae14dad79e0ac10055bfe0fa42c3aeccfd1345","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add colors to rows for RowReduce","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/a2ae14dad79e0ac10055bfe0fa42c3aeccfd1345"},{"sha":"4010d4cdc98f29da04beec9f483f12c6c6b2fd1b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Color matrix rows in RowReduce","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4010d4cdc98f29da04beec9f483f12c6c6b2fd1b"},{"sha":"8013544df0bba398088e86a16bbfecc77d8dcf7d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add option to disallow field type changes\n\n...for matrix demos.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8013544df0bba398088e86a16bbfecc77d8dcf7d"},{"sha":"6cb68794cc3b9cbc1b77a5853a645c2330575609","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add hook for styling buttons","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/6cb68794cc3b9cbc1b77a5853a645c2330575609"},{"sha":"d237885c6b4e015058918837523fec8db32f523d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Allow wrapping of displayed matrix ops\n\nThis provides a better viewing experience on mobile.\n\nFeature-End: matrix-demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d237885c6b4e015058918837523fec8db32f523d"},{"sha":"718e28c221e0bcc3f2e5b56563b7e0fdbbee5755","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example for ComputeParity\n\nFeature-Start: erasure-code-demo","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/718e28c221e0bcc3f2e5b56563b7e0fdbbee5755"},{"sha":"d294d8272c60afdb6ce153369204d703da608314","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement computeParityMatrix and add tests","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d294d8272c60afdb6ce153369204d703da608314"},{"sha":"297fe840e9d77cd804e391f55611ad39fabeaf39","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement computeParity and add tests","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/297fe840e9d77cd804e391f55611ad39fabeaf39"},{"sha":"d880c1871cb9e9e5b4f25d87e0460d3b65c0f1bd","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add interactive example for ComputeParity","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d880c1871cb9e9e5b4f25d87e0460d3b65c0f1bd"},{"sha":"de6b21f1a039eed3010b1a77f1641da9e1c25e9b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example for ReconstructData","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/de6b21f1a039eed3010b1a77f1641da9e1c25e9b"}]},"public":true,"created_at":"2018-02-25T22:05:29Z"},{"id":"7294278255","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":103730348,"name":"akalin/intro-erasure-codes","url":"https://api.github.com/repos/akalin/intro-erasure-codes"},"payload":{"push_id":2357293724,"size":15,"distinct_size":15,"ref":"refs/heads/matrix","head":"d237885c6b4e015058918837523fec8db32f523d","before":"af3402284fedb14dc789949ccc1c8976c7464d1b","commits":[{"sha":"0707dac87782b1bfea414786384846e74079224a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement matrix inversion","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0707dac87782b1bfea414786384846e74079224a"},{"sha":"0f4711a6aa15bbbe61b289baf032635e9c48aa83","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Show inverse in interactive Cauchy matrix demo","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0f4711a6aa15bbbe61b289baf032635e9c48aa83"},{"sha":"73cb7296e6ad83c22ce081bdf76d1533275dedcf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example for row reduction","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/73cb7296e6ad83c22ce081bdf76d1533275dedcf"},{"sha":"e62fa3d28e7e499c77e64b59bffb4ee241d3825d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add colors to static row reduction example","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/e62fa3d28e7e499c77e64b59bffb4ee241d3825d"},{"sha":"4f984a335f77fcdf6cfc514809f0e99691eff74e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Start interactive row reduction example","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4f984a335f77fcdf6cfc514809f0e99691eff74e"},{"sha":"84edaf164c2c8e8ba942846f2d9c58d94e450d1e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Start RowReduce element","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/84edaf164c2c8e8ba942846f2d9c58d94e450d1e"},{"sha":"fccf10a28778eacdeda4f5a31c7d23e5dbea5fbf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Start RowReduce stepper","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/fccf10a28778eacdeda4f5a31c7d23e5dbea5fbf"},{"sha":"ce24f9cd60210224c889fbe033bbf0978ca6023d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add button for previous step","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ce24f9cd60210224c889fbe033bbf0978ca6023d"},{"sha":"5804cccc1c3245f86d304763b04fadf31343a3c6","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Keep track of iterated-over matrix entry","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/5804cccc1c3245f86d304763b04fadf31343a3c6"},{"sha":"3a7da6e1b872e29380c6ec81374d4908be8ff76e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add details when we get a matrix in a special form","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/3a7da6e1b872e29380c6ec81374d4908be8ff76e"},{"sha":"a2ae14dad79e0ac10055bfe0fa42c3aeccfd1345","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add colors to rows for RowReduce","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/a2ae14dad79e0ac10055bfe0fa42c3aeccfd1345"},{"sha":"4010d4cdc98f29da04beec9f483f12c6c6b2fd1b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Color matrix rows in RowReduce","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/4010d4cdc98f29da04beec9f483f12c6c6b2fd1b"},{"sha":"8013544df0bba398088e86a16bbfecc77d8dcf7d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add option to disallow field type changes\n\n...for matrix demos.","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8013544df0bba398088e86a16bbfecc77d8dcf7d"},{"sha":"6cb68794cc3b9cbc1b77a5853a645c2330575609","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add hook for styling buttons","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/6cb68794cc3b9cbc1b77a5853a645c2330575609"},{"sha":"d237885c6b4e015058918837523fec8db32f523d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Allow wrapping of displayed matrix ops\n\nThis provides a better viewing experience on mobile.\n\nFeature-End: matrix-demo","distinct":true,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d237885c6b4e015058918837523fec8db32f523d"}]},"public":true,"created_at":"2018-02-25T22:05:21Z"},{"id":"7294246801","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":103730348,"name":"akalin/intro-erasure-codes","url":"https://api.github.com/repos/akalin/intro-erasure-codes"},"payload":{"push_id":2357274946,"size":32,"distinct_size":0,"ref":"refs/heads/field","head":"1b5b07c5fbca374399c4ab4fe0240f3eec236175","before":"b8491958a49cb720bb1d45f2495831a80ffc9fda","commits":[{"sha":"8e3c0249a930369a8460e7a145029cc42788effa","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add LICENSE file","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8e3c0249a930369a8460e7a145029cc42788effa"},{"sha":"14e47db611779b69a71c571eff1b8714049311d4","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add README.md file","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/14e47db611779b69a71c571eff1b8714049311d4"},{"sha":"568b9f1feb37aeb9e534f051908e3bcd75cd09fe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement carry-less addition\n\nAlso add test runner and basic tests.\n\nFeature-Start: carryless-demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/568b9f1feb37aeb9e534f051908e3bcd75cd09fe"},{"sha":"0263f0805036f3390693f905c16f37c3799d0f18","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure eslint\n\nnpx install-peerdeps --dev eslint-config-airbnb@latest\nyarn add --dev eslint","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0263f0805036f3390693f905c16f37c3799d0f18"},{"sha":"44731b1ceedaa04d9d52a7c6b2873021a84f37a2","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure prettier\n\nyarn add --dev prettier eslint-plugin-prettier eslint-config-prettier","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/44731b1ceedaa04d9d52a7c6b2873021a84f37a2"},{"sha":"0b217149c8c4aa7502ba0df5e30915c562564d50","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure flow\n\nyarn add --dev flow-bin babel-preset-flow babel-eslint\nyarn add --dev eslint-plugin-flowtype\n\nAlso add types to everything, including Jasmine. Add /flow-typed/*\nto .eslintignore.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0b217149c8c4aa7502ba0df5e30915c562564d50"},{"sha":"d669bcd322ca793583155a6bda48aa7bc5d67dfe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure flow-coverage-report\n\nyarn add --dev flow-coverage-report\n\nSet a flow coverage threshold of 97%.\n\nIgnore flow-coverage dir for git, eslint, and flow.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d669bcd322ca793583155a6bda48aa7bc5d67dfe"},{"sha":"213bd3ccfc62f231a505038a3926e0541a48bbdf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add carry-less demo page\n\nAlso add initial version of carry-less addition demo.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/213bd3ccfc62f231a505038a3926e0541a48bbdf"},{"sha":"ead7b67a1b11ea6b7dba1cfccbc4a77e66945750","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use preact and start a flow-type definition for it","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ead7b67a1b11ea6b7dba1cfccbc4a77e66945750"},{"sha":"e9aef0bebbaf9bf1ef23f9b5aca7d8cb497ba9ab","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Handle error conditions gracefully","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/e9aef0bebbaf9bf1ef23f9b5aca7d8cb497ba9ab"},{"sha":"9ffa30105b42dcba2e77325285c8dcf190bd3550","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add option to choose arithmetic type\n\nNamely, between standard and carry-less arithmetic.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/9ffa30105b42dcba2e77325285c8dcf190bd3550"},{"sha":"ad0214ebf0abcc759a75214365170a236bdd080a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use jsbn and start a flow-type definition for it\n\nImplement carrylessAdd for BigInteger.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ad0214ebf0abcc759a75214365170a236bdd080a"},{"sha":"77c871a51ef085d0a8b1287349c20aec0135df8c","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use KaTeX and start a flow-type definition for it","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/77c871a51ef085d0a8b1287349c20aec0135df8c"},{"sha":"8b1253a3848d7eebfd32ee373575e786614eafe5","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add pattern and size to input fields","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8b1253a3848d7eebfd32ee373575e786614eafe5"},{"sha":"93cff7d3f8e8968d4c9238e398865eef635af38d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add styling hooks for integration with blog","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/93cff7d3f8e8968d4c9238e398865eef635af38d"},{"sha":"93117a3471506ca0f0c72282a0ed2d4c3825eca8","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Have separate static and interactive examples","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/93117a3471506ca0f0c72282a0ed2d4c3825eca8"},{"sha":"eefda30c129b9d7b1ba41b5c090b9b193a5e6f68","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement 32-bit carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/eefda30c129b9d7b1ba41b5c090b9b193a5e6f68"},{"sha":"032c8e5f31d3915d055d70d5215e14bedf22587b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement BigInteger carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/032c8e5f31d3915d055d70d5215e14bedf22587b"},{"sha":"1a60e026e747995c27f2539fd77e279c3d3f331e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example of carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/1a60e026e747995c27f2539fd77e279c3d3f331e"},{"sha":"d39bd562a9da00166275233442be13bc6be76b6d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add interactive carry-less multiplication example\n\nAlso factor out common bits between the addition and multiplication\ndemo to a separate file.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d39bd562a9da00166275233442be13bc6be76b6d"}]},"public":true,"created_at":"2018-02-25T21:48:56Z"},{"id":"7294246799","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":103730348,"name":"akalin/intro-erasure-codes","url":"https://api.github.com/repos/akalin/intro-erasure-codes"},"payload":{"push_id":2357274944,"size":65,"distinct_size":0,"ref":"refs/heads/master","head":"42e4f53f3c1cefb85f5896eb81531f6d0e618c23","before":"8d5e10f495f5c6ac6776d1b5086fba50aebf0231","commits":[{"sha":"8e3c0249a930369a8460e7a145029cc42788effa","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add LICENSE file","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8e3c0249a930369a8460e7a145029cc42788effa"},{"sha":"14e47db611779b69a71c571eff1b8714049311d4","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add README.md file","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/14e47db611779b69a71c571eff1b8714049311d4"},{"sha":"568b9f1feb37aeb9e534f051908e3bcd75cd09fe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement carry-less addition\n\nAlso add test runner and basic tests.\n\nFeature-Start: carryless-demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/568b9f1feb37aeb9e534f051908e3bcd75cd09fe"},{"sha":"0263f0805036f3390693f905c16f37c3799d0f18","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure eslint\n\nnpx install-peerdeps --dev eslint-config-airbnb@latest\nyarn add --dev eslint","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0263f0805036f3390693f905c16f37c3799d0f18"},{"sha":"44731b1ceedaa04d9d52a7c6b2873021a84f37a2","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure prettier\n\nyarn add --dev prettier eslint-plugin-prettier eslint-config-prettier","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/44731b1ceedaa04d9d52a7c6b2873021a84f37a2"},{"sha":"0b217149c8c4aa7502ba0df5e30915c562564d50","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure flow\n\nyarn add --dev flow-bin babel-preset-flow babel-eslint\nyarn add --dev eslint-plugin-flowtype\n\nAlso add types to everything, including Jasmine. Add /flow-typed/*\nto .eslintignore.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0b217149c8c4aa7502ba0df5e30915c562564d50"},{"sha":"d669bcd322ca793583155a6bda48aa7bc5d67dfe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure flow-coverage-report\n\nyarn add --dev flow-coverage-report\n\nSet a flow coverage threshold of 97%.\n\nIgnore flow-coverage dir for git, eslint, and flow.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d669bcd322ca793583155a6bda48aa7bc5d67dfe"},{"sha":"213bd3ccfc62f231a505038a3926e0541a48bbdf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add carry-less demo page\n\nAlso add initial version of carry-less addition demo.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/213bd3ccfc62f231a505038a3926e0541a48bbdf"},{"sha":"ead7b67a1b11ea6b7dba1cfccbc4a77e66945750","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use preact and start a flow-type definition for it","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ead7b67a1b11ea6b7dba1cfccbc4a77e66945750"},{"sha":"e9aef0bebbaf9bf1ef23f9b5aca7d8cb497ba9ab","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Handle error conditions gracefully","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/e9aef0bebbaf9bf1ef23f9b5aca7d8cb497ba9ab"},{"sha":"9ffa30105b42dcba2e77325285c8dcf190bd3550","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add option to choose arithmetic type\n\nNamely, between standard and carry-less arithmetic.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/9ffa30105b42dcba2e77325285c8dcf190bd3550"},{"sha":"ad0214ebf0abcc759a75214365170a236bdd080a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use jsbn and start a flow-type definition for it\n\nImplement carrylessAdd for BigInteger.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ad0214ebf0abcc759a75214365170a236bdd080a"},{"sha":"77c871a51ef085d0a8b1287349c20aec0135df8c","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use KaTeX and start a flow-type definition for it","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/77c871a51ef085d0a8b1287349c20aec0135df8c"},{"sha":"8b1253a3848d7eebfd32ee373575e786614eafe5","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add pattern and size to input fields","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8b1253a3848d7eebfd32ee373575e786614eafe5"},{"sha":"93cff7d3f8e8968d4c9238e398865eef635af38d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add styling hooks for integration with blog","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/93cff7d3f8e8968d4c9238e398865eef635af38d"},{"sha":"93117a3471506ca0f0c72282a0ed2d4c3825eca8","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Have separate static and interactive examples","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/93117a3471506ca0f0c72282a0ed2d4c3825eca8"},{"sha":"eefda30c129b9d7b1ba41b5c090b9b193a5e6f68","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement 32-bit carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/eefda30c129b9d7b1ba41b5c090b9b193a5e6f68"},{"sha":"032c8e5f31d3915d055d70d5215e14bedf22587b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement BigInteger carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/032c8e5f31d3915d055d70d5215e14bedf22587b"},{"sha":"1a60e026e747995c27f2539fd77e279c3d3f331e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example of carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/1a60e026e747995c27f2539fd77e279c3d3f331e"},{"sha":"d39bd562a9da00166275233442be13bc6be76b6d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add interactive carry-less multiplication example\n\nAlso factor out common bits between the addition and multiplication\ndemo to a separate file.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d39bd562a9da00166275233442be13bc6be76b6d"}]},"public":true,"created_at":"2018-02-25T21:48:56Z"},{"id":"7294246796","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":103730348,"name":"akalin/intro-erasure-codes","url":"https://api.github.com/repos/akalin/intro-erasure-codes"},"payload":{"push_id":2357274941,"size":65,"distinct_size":0,"ref":"refs/heads/erasure-code","head":"42e4f53f3c1cefb85f5896eb81531f6d0e618c23","before":"683b133ec555d5660f922a3c26bbbae30a99b467","commits":[{"sha":"8e3c0249a930369a8460e7a145029cc42788effa","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add LICENSE file","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8e3c0249a930369a8460e7a145029cc42788effa"},{"sha":"14e47db611779b69a71c571eff1b8714049311d4","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add README.md file","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/14e47db611779b69a71c571eff1b8714049311d4"},{"sha":"568b9f1feb37aeb9e534f051908e3bcd75cd09fe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement carry-less addition\n\nAlso add test runner and basic tests.\n\nFeature-Start: carryless-demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/568b9f1feb37aeb9e534f051908e3bcd75cd09fe"},{"sha":"0263f0805036f3390693f905c16f37c3799d0f18","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure eslint\n\nnpx install-peerdeps --dev eslint-config-airbnb@latest\nyarn add --dev eslint","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0263f0805036f3390693f905c16f37c3799d0f18"},{"sha":"44731b1ceedaa04d9d52a7c6b2873021a84f37a2","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure prettier\n\nyarn add --dev prettier eslint-plugin-prettier eslint-config-prettier","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/44731b1ceedaa04d9d52a7c6b2873021a84f37a2"},{"sha":"0b217149c8c4aa7502ba0df5e30915c562564d50","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure flow\n\nyarn add --dev flow-bin babel-preset-flow babel-eslint\nyarn add --dev eslint-plugin-flowtype\n\nAlso add types to everything, including Jasmine. Add /flow-typed/*\nto .eslintignore.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0b217149c8c4aa7502ba0df5e30915c562564d50"},{"sha":"d669bcd322ca793583155a6bda48aa7bc5d67dfe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure flow-coverage-report\n\nyarn add --dev flow-coverage-report\n\nSet a flow coverage threshold of 97%.\n\nIgnore flow-coverage dir for git, eslint, and flow.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d669bcd322ca793583155a6bda48aa7bc5d67dfe"},{"sha":"213bd3ccfc62f231a505038a3926e0541a48bbdf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add carry-less demo page\n\nAlso add initial version of carry-less addition demo.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/213bd3ccfc62f231a505038a3926e0541a48bbdf"},{"sha":"ead7b67a1b11ea6b7dba1cfccbc4a77e66945750","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use preact and start a flow-type definition for it","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ead7b67a1b11ea6b7dba1cfccbc4a77e66945750"},{"sha":"e9aef0bebbaf9bf1ef23f9b5aca7d8cb497ba9ab","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Handle error conditions gracefully","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/e9aef0bebbaf9bf1ef23f9b5aca7d8cb497ba9ab"},{"sha":"9ffa30105b42dcba2e77325285c8dcf190bd3550","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add option to choose arithmetic type\n\nNamely, between standard and carry-less arithmetic.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/9ffa30105b42dcba2e77325285c8dcf190bd3550"},{"sha":"ad0214ebf0abcc759a75214365170a236bdd080a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use jsbn and start a flow-type definition for it\n\nImplement carrylessAdd for BigInteger.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ad0214ebf0abcc759a75214365170a236bdd080a"},{"sha":"77c871a51ef085d0a8b1287349c20aec0135df8c","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use KaTeX and start a flow-type definition for it","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/77c871a51ef085d0a8b1287349c20aec0135df8c"},{"sha":"8b1253a3848d7eebfd32ee373575e786614eafe5","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add pattern and size to input fields","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8b1253a3848d7eebfd32ee373575e786614eafe5"},{"sha":"93cff7d3f8e8968d4c9238e398865eef635af38d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add styling hooks for integration with blog","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/93cff7d3f8e8968d4c9238e398865eef635af38d"},{"sha":"93117a3471506ca0f0c72282a0ed2d4c3825eca8","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Have separate static and interactive examples","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/93117a3471506ca0f0c72282a0ed2d4c3825eca8"},{"sha":"eefda30c129b9d7b1ba41b5c090b9b193a5e6f68","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement 32-bit carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/eefda30c129b9d7b1ba41b5c090b9b193a5e6f68"},{"sha":"032c8e5f31d3915d055d70d5215e14bedf22587b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement BigInteger carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/032c8e5f31d3915d055d70d5215e14bedf22587b"},{"sha":"1a60e026e747995c27f2539fd77e279c3d3f331e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example of carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/1a60e026e747995c27f2539fd77e279c3d3f331e"},{"sha":"d39bd562a9da00166275233442be13bc6be76b6d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add interactive carry-less multiplication example\n\nAlso factor out common bits between the addition and multiplication\ndemo to a separate file.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d39bd562a9da00166275233442be13bc6be76b6d"}]},"public":true,"created_at":"2018-02-25T21:48:56Z"},{"id":"7294246788","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":103730348,"name":"akalin/intro-erasure-codes","url":"https://api.github.com/repos/akalin/intro-erasure-codes"},"payload":{"push_id":2357274936,"size":26,"distinct_size":0,"ref":"refs/heads/carryless","head":"9a20356b20ef4799cb87d0d8a414353d741c52d7","before":"7bfa7fd7523ea7f50cdf93cfbd9ca1e64f4816ca","commits":[{"sha":"8e3c0249a930369a8460e7a145029cc42788effa","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add LICENSE file","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8e3c0249a930369a8460e7a145029cc42788effa"},{"sha":"14e47db611779b69a71c571eff1b8714049311d4","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add README.md file","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/14e47db611779b69a71c571eff1b8714049311d4"},{"sha":"568b9f1feb37aeb9e534f051908e3bcd75cd09fe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement carry-less addition\n\nAlso add test runner and basic tests.\n\nFeature-Start: carryless-demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/568b9f1feb37aeb9e534f051908e3bcd75cd09fe"},{"sha":"0263f0805036f3390693f905c16f37c3799d0f18","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure eslint\n\nnpx install-peerdeps --dev eslint-config-airbnb@latest\nyarn add --dev eslint","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0263f0805036f3390693f905c16f37c3799d0f18"},{"sha":"44731b1ceedaa04d9d52a7c6b2873021a84f37a2","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure prettier\n\nyarn add --dev prettier eslint-plugin-prettier eslint-config-prettier","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/44731b1ceedaa04d9d52a7c6b2873021a84f37a2"},{"sha":"0b217149c8c4aa7502ba0df5e30915c562564d50","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure flow\n\nyarn add --dev flow-bin babel-preset-flow babel-eslint\nyarn add --dev eslint-plugin-flowtype\n\nAlso add types to everything, including Jasmine. Add /flow-typed/*\nto .eslintignore.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0b217149c8c4aa7502ba0df5e30915c562564d50"},{"sha":"d669bcd322ca793583155a6bda48aa7bc5d67dfe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure flow-coverage-report\n\nyarn add --dev flow-coverage-report\n\nSet a flow coverage threshold of 97%.\n\nIgnore flow-coverage dir for git, eslint, and flow.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d669bcd322ca793583155a6bda48aa7bc5d67dfe"},{"sha":"213bd3ccfc62f231a505038a3926e0541a48bbdf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add carry-less demo page\n\nAlso add initial version of carry-less addition demo.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/213bd3ccfc62f231a505038a3926e0541a48bbdf"},{"sha":"ead7b67a1b11ea6b7dba1cfccbc4a77e66945750","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use preact and start a flow-type definition for it","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ead7b67a1b11ea6b7dba1cfccbc4a77e66945750"},{"sha":"e9aef0bebbaf9bf1ef23f9b5aca7d8cb497ba9ab","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Handle error conditions gracefully","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/e9aef0bebbaf9bf1ef23f9b5aca7d8cb497ba9ab"},{"sha":"9ffa30105b42dcba2e77325285c8dcf190bd3550","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add option to choose arithmetic type\n\nNamely, between standard and carry-less arithmetic.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/9ffa30105b42dcba2e77325285c8dcf190bd3550"},{"sha":"ad0214ebf0abcc759a75214365170a236bdd080a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use jsbn and start a flow-type definition for it\n\nImplement carrylessAdd for BigInteger.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ad0214ebf0abcc759a75214365170a236bdd080a"},{"sha":"77c871a51ef085d0a8b1287349c20aec0135df8c","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use KaTeX and start a flow-type definition for it","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/77c871a51ef085d0a8b1287349c20aec0135df8c"},{"sha":"8b1253a3848d7eebfd32ee373575e786614eafe5","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add pattern and size to input fields","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8b1253a3848d7eebfd32ee373575e786614eafe5"},{"sha":"93cff7d3f8e8968d4c9238e398865eef635af38d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add styling hooks for integration with blog","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/93cff7d3f8e8968d4c9238e398865eef635af38d"},{"sha":"93117a3471506ca0f0c72282a0ed2d4c3825eca8","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Have separate static and interactive examples","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/93117a3471506ca0f0c72282a0ed2d4c3825eca8"},{"sha":"eefda30c129b9d7b1ba41b5c090b9b193a5e6f68","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement 32-bit carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/eefda30c129b9d7b1ba41b5c090b9b193a5e6f68"},{"sha":"032c8e5f31d3915d055d70d5215e14bedf22587b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement BigInteger carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/032c8e5f31d3915d055d70d5215e14bedf22587b"},{"sha":"1a60e026e747995c27f2539fd77e279c3d3f331e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example of carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/1a60e026e747995c27f2539fd77e279c3d3f331e"},{"sha":"d39bd562a9da00166275233442be13bc6be76b6d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add interactive carry-less multiplication example\n\nAlso factor out common bits between the addition and multiplication\ndemo to a separate file.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d39bd562a9da00166275233442be13bc6be76b6d"}]},"public":true,"created_at":"2018-02-25T21:48:56Z"},{"id":"7294246786","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":103730348,"name":"akalin/intro-erasure-codes","url":"https://api.github.com/repos/akalin/intro-erasure-codes"},"payload":{"push_id":2357274935,"size":56,"distinct_size":0,"ref":"refs/heads/matrix","head":"af3402284fedb14dc789949ccc1c8976c7464d1b","before":"fb611d89bf0699b6e9d821baff7506c63936f24f","commits":[{"sha":"8e3c0249a930369a8460e7a145029cc42788effa","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add LICENSE file","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8e3c0249a930369a8460e7a145029cc42788effa"},{"sha":"14e47db611779b69a71c571eff1b8714049311d4","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add README.md file","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/14e47db611779b69a71c571eff1b8714049311d4"},{"sha":"568b9f1feb37aeb9e534f051908e3bcd75cd09fe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement carry-less addition\n\nAlso add test runner and basic tests.\n\nFeature-Start: carryless-demo","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/568b9f1feb37aeb9e534f051908e3bcd75cd09fe"},{"sha":"0263f0805036f3390693f905c16f37c3799d0f18","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure eslint\n\nnpx install-peerdeps --dev eslint-config-airbnb@latest\nyarn add --dev eslint","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0263f0805036f3390693f905c16f37c3799d0f18"},{"sha":"44731b1ceedaa04d9d52a7c6b2873021a84f37a2","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure prettier\n\nyarn add --dev prettier eslint-plugin-prettier eslint-config-prettier","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/44731b1ceedaa04d9d52a7c6b2873021a84f37a2"},{"sha":"0b217149c8c4aa7502ba0df5e30915c562564d50","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure flow\n\nyarn add --dev flow-bin babel-preset-flow babel-eslint\nyarn add --dev eslint-plugin-flowtype\n\nAlso add types to everything, including Jasmine. Add /flow-typed/*\nto .eslintignore.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/0b217149c8c4aa7502ba0df5e30915c562564d50"},{"sha":"d669bcd322ca793583155a6bda48aa7bc5d67dfe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Install and configure flow-coverage-report\n\nyarn add --dev flow-coverage-report\n\nSet a flow coverage threshold of 97%.\n\nIgnore flow-coverage dir for git, eslint, and flow.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d669bcd322ca793583155a6bda48aa7bc5d67dfe"},{"sha":"213bd3ccfc62f231a505038a3926e0541a48bbdf","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add carry-less demo page\n\nAlso add initial version of carry-less addition demo.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/213bd3ccfc62f231a505038a3926e0541a48bbdf"},{"sha":"ead7b67a1b11ea6b7dba1cfccbc4a77e66945750","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use preact and start a flow-type definition for it","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ead7b67a1b11ea6b7dba1cfccbc4a77e66945750"},{"sha":"e9aef0bebbaf9bf1ef23f9b5aca7d8cb497ba9ab","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Handle error conditions gracefully","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/e9aef0bebbaf9bf1ef23f9b5aca7d8cb497ba9ab"},{"sha":"9ffa30105b42dcba2e77325285c8dcf190bd3550","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add option to choose arithmetic type\n\nNamely, between standard and carry-less arithmetic.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/9ffa30105b42dcba2e77325285c8dcf190bd3550"},{"sha":"ad0214ebf0abcc759a75214365170a236bdd080a","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use jsbn and start a flow-type definition for it\n\nImplement carrylessAdd for BigInteger.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/ad0214ebf0abcc759a75214365170a236bdd080a"},{"sha":"77c871a51ef085d0a8b1287349c20aec0135df8c","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Use KaTeX and start a flow-type definition for it","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/77c871a51ef085d0a8b1287349c20aec0135df8c"},{"sha":"8b1253a3848d7eebfd32ee373575e786614eafe5","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add pattern and size to input fields","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/8b1253a3848d7eebfd32ee373575e786614eafe5"},{"sha":"93cff7d3f8e8968d4c9238e398865eef635af38d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add styling hooks for integration with blog","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/93cff7d3f8e8968d4c9238e398865eef635af38d"},{"sha":"93117a3471506ca0f0c72282a0ed2d4c3825eca8","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Have separate static and interactive examples","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/93117a3471506ca0f0c72282a0ed2d4c3825eca8"},{"sha":"eefda30c129b9d7b1ba41b5c090b9b193a5e6f68","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement 32-bit carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/eefda30c129b9d7b1ba41b5c090b9b193a5e6f68"},{"sha":"032c8e5f31d3915d055d70d5215e14bedf22587b","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Implement BigInteger carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/032c8e5f31d3915d055d70d5215e14bedf22587b"},{"sha":"1a60e026e747995c27f2539fd77e279c3d3f331e","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add static example of carry-less multiplication","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/1a60e026e747995c27f2539fd77e279c3d3f331e"},{"sha":"d39bd562a9da00166275233442be13bc6be76b6d","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add interactive carry-less multiplication example\n\nAlso factor out common bits between the addition and multiplication\ndemo to a separate file.","distinct":false,"url":"https://api.github.com/repos/akalin/intro-erasure-codes/commits/d39bd562a9da00166275233442be13bc6be76b6d"}]},"public":true,"created_at":"2018-02-25T21:48:55Z"},{"id":"7290461752","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":122690370,"name":"akalin/randtest","url":"https://api.github.com/repos/akalin/randtest"},"payload":{"push_id":2355002196,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"fccaf6d14fcdd546475c04938d4d9fd1ecb720d2","before":"2825ba62f0c175923f59fecb59ffb56026b54287","commits":[{"sha":"fccaf6d14fcdd546475c04938d4d9fd1ecb720d2","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Clarify readme","distinct":true,"url":"https://api.github.com/repos/akalin/randtest/commits/fccaf6d14fcdd546475c04938d4d9fd1ecb720d2"}]},"public":true,"created_at":"2018-02-24T02:14:02Z"},{"id":"7290425984","type":"IssueCommentEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":11195700,"name":"Khan/KaTeX","url":"https://api.github.com/repos/Khan/KaTeX"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/Khan/KaTeX/issues/1173","repository_url":"https://api.github.com/repos/Khan/KaTeX","labels_url":"https://api.github.com/repos/Khan/KaTeX/issues/1173/labels{/name}","comments_url":"https://api.github.com/repos/Khan/KaTeX/issues/1173/comments","events_url":"https://api.github.com/repos/Khan/KaTeX/issues/1173/events","html_url":"https://github.com/Khan/KaTeX/issues/1173","id":298161601,"number":1173,"title":"Thick grey bar on some fractions","user":{"login":"mbourne","id":7541940,"avatar_url":"https://avatars3.githubusercontent.com/u/7541940?v=4","gravatar_id":"","url":"https://api.github.com/users/mbourne","html_url":"https://github.com/mbourne","followers_url":"https://api.github.com/users/mbourne/followers","following_url":"https://api.github.com/users/mbourne/following{/other_user}","gists_url":"https://api.github.com/users/mbourne/gists{/gist_id}","starred_url":"https://api.github.com/users/mbourne/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbourne/subscriptions","organizations_url":"https://api.github.com/users/mbourne/orgs","repos_url":"https://api.github.com/users/mbourne/repos","events_url":"https://api.github.com/users/mbourne/events{/privacy}","received_events_url":"https://api.github.com/users/mbourne/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":20,"created_at":"2018-02-19T05:00:04Z","updated_at":"2018-02-24T01:53:47Z","closed_at":null,"author_association":"NONE","body":"In v0.9.0, I see some good fraction lines and some overly thick grey ones (Chrome on Windows)\r\n\r\n![image](https://user-images.githubusercontent.com/7541940/36362873-3d30d298-1573-11e8-9c2c-a4c846167fcd.png)\r\n\r\nFirefox is a bit better in that it is less obvious (at least on my monitor setup). In the fractions on the first line, it appears to have a darker bottom 1px line and a lighter \"shadow\" above it, the middle line is good, and the last line is mostly thick grey:\r\n\r\n![image](https://user-images.githubusercontent.com/7541940/36362984-36465d1c-1574-11e8-851a-c86a7a5e3972.png)\r\n\r\nSo unfortunately it doesn't appear that using path in the svg has completely fixed it.\r\n\r\nI'm sticking with v0.9.0-alpha for my production site for now.\r\n"},"comment":{"url":"https://api.github.com/repos/Khan/KaTeX/issues/comments/368187641","html_url":"https://github.com/Khan/KaTeX/issues/1173#issuecomment-368187641","issue_url":"https://api.github.com/repos/Khan/KaTeX/issues/1173","id":368187641,"user":{"login":"akalin","id":425576,"avatar_url":"https://avatars0.githubusercontent.com/u/425576?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin","html_url":"https://github.com/akalin","followers_url":"https://api.github.com/users/akalin/followers","following_url":"https://api.github.com/users/akalin/following{/other_user}","gists_url":"https://api.github.com/users/akalin/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin/subscriptions","organizations_url":"https://api.github.com/users/akalin/orgs","repos_url":"https://api.github.com/users/akalin/repos","events_url":"https://api.github.com/users/akalin/events{/privacy}","received_events_url":"https://api.github.com/users/akalin/received_events","type":"User","site_admin":false},"created_at":"2018-02-24T01:53:47Z","updated_at":"2018-02-24T01:53:47Z","author_association":"NONE","body":"Here's what i see on my 2015 retina Macbook pro:\r\n\r\nTable 1:\r\n<img width=\"1021\" alt=\"table 1\" src=\"https://user-images.githubusercontent.com/425576/36624315-79468c8a-18c2-11e8-9ed7-d5cd3c51834f.png\">\r\n\r\nTable 2:\r\n<img width=\"1012\" alt=\"table 2\" src=\"https://user-images.githubusercontent.com/425576/36624316-7961e1ba-18c2-11e8-8ed9-f4c7a87911a2.png\">\r\n\r\nTable 3:\r\n<img width=\"1009\" alt=\"table 3\" src=\"https://user-images.githubusercontent.com/425576/36624317-797ca496-18c2-11e8-9f2a-a93722158e75.png\">\r\n"}},"public":true,"created_at":"2018-02-24T01:53:47Z","org":{"id":15455,"login":"Khan","gravatar_id":"","url":"https://api.github.com/orgs/Khan","avatar_url":"https://avatars.githubusercontent.com/u/15455?"}},{"id":"7290424035","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":122690370,"name":"akalin/randtest","url":"https://api.github.com/repos/akalin/randtest"},"payload":{"push_id":2354981620,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"2825ba62f0c175923f59fecb59ffb56026b54287","before":"a3c97e365dc45e50fb3fe34affeb644d03da33ba","commits":[{"sha":"2825ba62f0c175923f59fecb59ffb56026b54287","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Clarify readme","distinct":true,"url":"https://api.github.com/repos/akalin/randtest/commits/2825ba62f0c175923f59fecb59ffb56026b54287"}]},"public":true,"created_at":"2018-02-24T01:52:39Z"},{"id":"7290405030","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":122690370,"name":"akalin/randtest","url":"https://api.github.com/repos/akalin/randtest"},"payload":{"push_id":2354971218,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"a3c97e365dc45e50fb3fe34affeb644d03da33ba","before":"8cff31cf6cc27ffbb8654c3ee5b1f993117ec3fe","commits":[{"sha":"a3c97e365dc45e50fb3fe34affeb644d03da33ba","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Fixes","distinct":true,"url":"https://api.github.com/repos/akalin/randtest/commits/a3c97e365dc45e50fb3fe34affeb644d03da33ba"}]},"public":true,"created_at":"2018-02-24T01:42:00Z"},{"id":"7290401156","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":122690370,"name":"akalin/randtest","url":"https://api.github.com/repos/akalin/randtest"},"payload":{"push_id":2354969096,"size":3,"distinct_size":3,"ref":"refs/heads/master","head":"8cff31cf6cc27ffbb8654c3ee5b1f993117ec3fe","before":"dbbcd762ae96f3b11355857390bee762f822a087","commits":[{"sha":"d7eeb1189d8707d07ba9e1aefd609cbd251e24c0","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Golf","distinct":true,"url":"https://api.github.com/repos/akalin/randtest/commits/d7eeb1189d8707d07ba9e1aefd609cbd251e24c0"},{"sha":"92c19b7aac74d9d00d9c1a0b71c5c1248e11eaf3","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"More golf","distinct":true,"url":"https://api.github.com/repos/akalin/randtest/commits/92c19b7aac74d9d00d9c1a0b71c5c1248e11eaf3"},{"sha":"8cff31cf6cc27ffbb8654c3ee5b1f993117ec3fe","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"More obfuscation","distinct":true,"url":"https://api.github.com/repos/akalin/randtest/commits/8cff31cf6cc27ffbb8654c3ee5b1f993117ec3fe"}]},"public":true,"created_at":"2018-02-24T01:39:56Z"},{"id":"7290376409","type":"PushEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":122690370,"name":"akalin/randtest","url":"https://api.github.com/repos/akalin/randtest"},"payload":{"push_id":2354955263,"size":1,"distinct_size":1,"ref":"refs/heads/master","head":"dbbcd762ae96f3b11355857390bee762f822a087","before":"9a8432a42c32f55447cac93abebcf203d95b23ca","commits":[{"sha":"dbbcd762ae96f3b11355857390bee762f822a087","author":{"email":"akalin@gmail.com","name":"Frederick Akalin"},"message":"Add README","distinct":true,"url":"https://api.github.com/repos/akalin/randtest/commits/dbbcd762ae96f3b11355857390bee762f822a087"}]},"public":true,"created_at":"2018-02-24T01:26:39Z"},{"id":"7290372840","type":"CreateEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":122690370,"name":"akalin/randtest","url":"https://api.github.com/repos/akalin/randtest"},"payload":{"ref":"master","ref_type":"branch","master_branch":"master","description":null,"pusher_type":"user"},"public":true,"created_at":"2018-02-24T01:24:45Z"},{"id":"7290372425","type":"CreateEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":122690370,"name":"akalin/randtest","url":"https://api.github.com/repos/akalin/randtest"},"payload":{"ref":null,"ref_type":"repository","master_branch":"master","description":null,"pusher_type":"user"},"public":true,"created_at":"2018-02-24T01:24:29Z"},{"id":"7265464483","type":"WatchEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":23659333,"name":"bbatsov/emacs-lisp-style-guide","url":"https://api.github.com/repos/bbatsov/emacs-lisp-style-guide"},"payload":{"action":"started"},"public":true,"created_at":"2018-02-19T17:48:16Z"},{"id":"7181751506","type":"IssueCommentEvent","actor":{"id":425576,"login":"akalin","display_login":"akalin","gravatar_id":"","url":"https://api.github.com/users/akalin","avatar_url":"https://avatars.githubusercontent.com/u/425576?"},"repo":{"id":11195700,"name":"Khan/KaTeX","url":"https://api.github.com/repos/Khan/KaTeX"},"payload":{"action":"created","issue":{"url":"https://api.github.com/repos/Khan/KaTeX/issues/1124","repository_url":"https://api.github.com/repos/Khan/KaTeX","labels_url":"https://api.github.com/repos/Khan/KaTeX/issues/1124/labels{/name}","comments_url":"https://api.github.com/repos/Khan/KaTeX/issues/1124/comments","events_url":"https://api.github.com/repos/Khan/KaTeX/issues/1124/events","html_url":"https://github.com/Khan/KaTeX/issues/1124","id":293044301,"number":1124,"title":"Support for \\mathring","user":{"login":"akalin","id":425576,"avatar_url":"https://avatars0.githubusercontent.com/u/425576?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin","html_url":"https://github.com/akalin","followers_url":"https://api.github.com/users/akalin/followers","following_url":"https://api.github.com/users/akalin/following{/other_user}","gists_url":"https://api.github.com/users/akalin/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin/subscriptions","organizations_url":"https://api.github.com/users/akalin/orgs","repos_url":"https://api.github.com/users/akalin/repos","events_url":"https://api.github.com/users/akalin/events{/privacy}","received_events_url":"https://api.github.com/users/akalin/received_events","type":"User","site_admin":false},"labels":[{"id":46519974,"url":"https://api.github.com/repos/Khan/KaTeX/labels/enhancement","name":"enhancement","color":"84b6eb","default":true}],"state":"closed","locked":false,"assignee":{"login":"edemaine","id":2218736,"avatar_url":"https://avatars1.githubusercontent.com/u/2218736?v=4","gravatar_id":"","url":"https://api.github.com/users/edemaine","html_url":"https://github.com/edemaine","followers_url":"https://api.github.com/users/edemaine/followers","following_url":"https://api.github.com/users/edemaine/following{/other_user}","gists_url":"https://api.github.com/users/edemaine/gists{/gist_id}","starred_url":"https://api.github.com/users/edemaine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edemaine/subscriptions","organizations_url":"https://api.github.com/users/edemaine/orgs","repos_url":"https://api.github.com/users/edemaine/repos","events_url":"https://api.github.com/users/edemaine/events{/privacy}","received_events_url":"https://api.github.com/users/edemaine/received_events","type":"User","site_admin":false},"assignees":[{"login":"edemaine","id":2218736,"avatar_url":"https://avatars1.githubusercontent.com/u/2218736?v=4","gravatar_id":"","url":"https://api.github.com/users/edemaine","html_url":"https://github.com/edemaine","followers_url":"https://api.github.com/users/edemaine/followers","following_url":"https://api.github.com/users/edemaine/following{/other_user}","gists_url":"https://api.github.com/users/edemaine/gists{/gist_id}","starred_url":"https://api.github.com/users/edemaine/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edemaine/subscriptions","organizations_url":"https://api.github.com/users/edemaine/orgs","repos_url":"https://api.github.com/users/edemaine/repos","events_url":"https://api.github.com/users/edemaine/events{/privacy}","received_events_url":"https://api.github.com/users/edemaine/received_events","type":"User","site_admin":false}],"milestone":null,"comments":3,"created_at":"2018-01-31T06:22:12Z","updated_at":"2018-02-01T06:57:02Z","closed_at":"2018-02-01T00:48:23Z","author_association":"NONE","body":"\\mathring is a math mode accent defined in [amssymb](http://milde.users.sourceforge.net/LUCR/Math/mathpackages/amssymb-symbols.pdf).\r\n\r\nIt's basically the math mode equivalent of the text mode accent \\r. I just needed it for a single letter (`$\\mathring g$` for the round metric) so I tried to hack it up with `$\\text{\\r \\textit{g}}$` but it doesn't look great:\r\n\r\n<img width=\"27\" alt=\"screen shot 2018-01-31 at 12 17 27 am\" src=\"https://user-images.githubusercontent.com/425576/35607883-29ce6d20-061c-11e8-9d15-0865b595a2bb.png\">\r\n\r\ncompared to\r\n\r\n<img width=\"26\" alt=\"screen shot 2018-01-31 at 12 19 52 am\" src=\"https://user-images.githubusercontent.com/425576/35607966-934a6e20-061c-11e8-8398-7c9b1d2a9834.png\">\r\n\r\nI wonder if there's a better way to fake it?"},"comment":{"url":"https://api.github.com/repos/Khan/KaTeX/issues/comments/362175939","html_url":"https://github.com/Khan/KaTeX/issues/1124#issuecomment-362175939","issue_url":"https://api.github.com/repos/Khan/KaTeX/issues/1124","id":362175939,"user":{"login":"akalin","id":425576,"avatar_url":"https://avatars0.githubusercontent.com/u/425576?v=4","gravatar_id":"","url":"https://api.github.com/users/akalin","html_url":"https://github.com/akalin","followers_url":"https://api.github.com/users/akalin/followers","following_url":"https://api.github.com/users/akalin/following{/other_user}","gists_url":"https://api.github.com/users/akalin/gists{/gist_id}","starred_url":"https://api.github.com/users/akalin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akalin/subscriptions","organizations_url":"https://api.github.com/users/akalin/orgs","repos_url":"https://api.github.com/users/akalin/repos","events_url":"https://api.github.com/users/akalin/events{/privacy}","received_events_url":"https://api.github.com/users/akalin/received_events","type":"User","site_admin":false},"created_at":"2018-02-01T06:57:02Z","updated_at":"2018-02-01T06:57:02Z","author_association":"NONE","body":"Thank you!"}},"public":true,"created_at":"2018-02-01T06:57:03Z","org":{"id":15455,"login":"Khan","gravatar_id":"","url":"https://api.github.com/orgs/Khan","avatar_url":"https://avatars.githubusercontent.com/u/15455?"}}]